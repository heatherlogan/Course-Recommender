{
    "courses": [
        {
            "Exam Diet": "December", 
            "Code": "INFR11125", 
            "Name": "Accelerated Natural Language Processing", 
            "Level": "11", 
            "Acronym": "ANLP", 
            "Average": "64.96", 
            "Area": "Natural Language Processing", 
            "Summary": "The course will synthesize ideas from linguistics and computer science to provide students with a fast-paced introduction to the field of natural language processing. The course will cover the most widely-used theoretical and computational models of language, including both statistical and nonstatistical approaches. The course will familiarize students with a wide range of linguistic phenomena with the aim of appreciating the complexity, but also the systematic behaviour of natural languages like English, the pervasiveness of ambiguity, and how this presents challenges in natural language processing. In addition, the course introduce the most important algorithms and data structures that are commonly used to solve many NLP problems.\n\nThe course will cover formal models for representing and analyzing the syntax and semantics of words, sentences, and discourse. Students will learn how to analyse sentences algorithmically, using hand-crafted and automatically induced treebank grammars, and how to build interpretable semantic representations. The course will also cover a number of standard models and algorithms that are used throughout language processing. Examples include n-gram and Hidden Markov Models, the EM algorithm, and dynamic programming algorithms such as chart parsing.\n\n**This course replaces INFR11059 Advanced Natural Language Processing**", 
            "Delivery": "S1", 
            "Credits": "20", 
            "Course Description": "Part I: Words\n\n* Inflectional and derivational morphology\n\n* Finite state methods and Regular expressions\n\n* Word Classes and Parts of speech\n\n* Sequence Models (n-gram and Hidden Markov models, smoothing)\n\n* The Viterbi algorithm, Forward Backward, EM\n\n\n\nPart II: Syntax\n\n* Syntactic Concepts (e.g., constituency, subcategorisation, bounded and unbounded dependencies, feature representations)\n\n* Analysis in CFG - Greedy algorithms---Shift-reduce parsing\n\n* Divide-and-conquer algorithms---CKY\n\n* Chart parsing\n\n* Lexicalised grammar formalisms (e.g., TAG, CCG, dependency grammar)\n\n* Statistical parsing (PCFGs, dependency parsing)\n\n\n\nPart III: Semantics, Discourse, Dialogue and Applications\n\n* logical semantics and compositionality\n\n* Semantic derivations in grammar\n\n* Lexical Semantics (e.g., word senses, semantic roles)\n\n* Discourse and dialogue (e.g., anaphora, speech acts)\n\n* Text classification and sentiment analysis\n\n* Other applications (e.g., machine translation, question answering)\n\n\n\nMethodological topics, interspersed throughout:\n\n* Issues in annotation and evaluation\n\n* Machine learning approaches (e.g., Maximum Entropy models, neural networks)\n\n\n\nRelevant QAA Computing Curriculum Sections: Not yet available", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11125.htm", 
            "Coordinator": "Sharon Goldwater", 
            "Year": "5", 
            "Coursework/Exam": "30/70", 
            "Feedback": [
                "language processing. The lecturer Sharon is very good.- Take this course and prepare to put lots of time in it, you will get the payback in terms of understanding more about natural", 
                "later lectures- Make sure you already know how to program. - The probability tutorial should be compulsory before starting the course to aid", 
                "background, it might feel impossible for the first few weeks, but just keep with it!Although the class might seem very difficult at first, if you put the effort in, it will get easier with time. Depending on your", 
                "Always keep updated.", 
                "non-CS background.Make sure you deal with all the stuff required to cover. Don't lose confidence if you are also from linguistic background or other", 
                "Assignments are challenging. So start early!", 
                "Be prepare to study a lot and enjoy as you go.", 
                "Definitely read up on some of the core J&M chapters, such as N-grams, HMMs and some coding practice with Python!", 
                "course to make your life easier. It was very challenging, especially at the beginning.I really enjoyed this course, I learned a lot. Although, I would highly recommend reading about linguistics before starting the", 
                "necessarily. At least the first chapters to have a head start so that you will be able to be prepared before the lectures. SomeI will speak as a student with a linguistics background. Study the material before the first lecture. Not the whole book", 
                "It's tough, but really rewarding and interesting", 
                "volume of material you will need to know for the exam! Sharon is an exceptional lecturer. She is really engaging and obviously veryKeep up with notes during the term, depending on your background it can be a pretty straightforward course but there is a large", 
                "Make a study group.", 
                "concepts. Prepare for each lecture/lab/tutorial in advance. It's important to keep up with the rhythmOnly take this course if you like linguistics, _and_ if you are not afraid to use mathematical concepts together with linguistics", 
                "Review", 
                "seems easy but people usually get less marks because of how they have written the reports.Start early, try to keep up with the course content. You don't have to get deep understanding for each topic. Assignment 1", 
                "Start with the reading early!", 
                "Stay on top of the material at all cost - it's called accelerated for a reason.", 
                "Stay up to date with the lectures. If you miss one it's not the end of the world, but make sure to watch the recording.", 
                "that's covered in this course.Study study study! Attend lectures, and give yourself plenty of time to revise before the exam. There's A LOT of information", 
                "The one interested in natural language processing, and with basic programming skill.", 
                "tutorial problem sets, you'll learn a lot. I would absolutely recommend forming a study group to solve tutorial questions before theThis course will probably make you feel dumb sometimes. The concepts can be really complex, but if you actually complete the", 
                "Tough, fair, engaging.", 
                "take each lecture seriously and do the previews", 
                "Working with partners during assignments really help to connect with people from different backgrounds- Challenging assignments which reflects the real world application of the theories covered in the class. Exam revision guide.", 
                "- The questions at the start of slides. - Sharon.", 
                "Doing the assignments is helpful for understanding key concepts.", 
                "Enno Hermann and", 
                "response from lecturers and tutors), feedback is always informative. This is the best ever lesson I have ever taken so far.Everything. Lecturers are excellent (esp. Sharon Goldwater), tutorials and labs are useful, forums are super helpful (quick", 
                "though I never studied any LP courses before.Exercises and assignments and recording the lectures. In term of the knowledge, I got deep information about the NLP even", 
                "Hand simulating things, I think it will help in later study of NLP.", 
                "I get a rough map of NLP, esp. Syntax", 
                "still struggled a lot with the comprehension of spoken English and so it was very helpful to have the opportunity to stop and rewindI liked the assignments, they really made me help to understand the topics better! The recordings! Especially at the beginning I", 
                "is a very good lecture and really tries to help students understand the content. Her expectations for students are also very clearIt is clear how much thought Sharon put into designing the course, and trying to make the content as accessible as possible. She", 
                "One of my favourite courses this semester. Sharon is an incredibly knowledgeable and intellectually stimulating lecturer.", 
                "Skills of nlp", 
                "That we had a lot of practical experience with what we were being taught.", 
                "The assignments", 
                "The assignments were really helpful for putting what we were taught into practice and solidifying our knowledge of it.", 
                "effective way.The fact that it managed to cram together a wide variety of ideas and problems within computational linguistics, but did this in an", 
                "The group-based approach to the coursework. It's a great way to discuss and make sure you understand the content.", 
                "The lecturer, the way the material was presented, the assignments", 
                "a woman teaching a STEM module!The main instructor, Sharon was amazing. Really enthusiastic and great at explaining very difficult concepts. Also, great to have", 
                "applied approach taken in the course - I've always felt that I know why we are learning particular concepts and where that can beThe scope of the material is great - I feel like I've learned a lot (and it deserves to be called Accelerated for sure). I've enjoyed the", 
                "The structure is perfect. Intensive but do-able.", 
                "The tutorials and labs were very helpful for the understanding of the material!", 
                "instead of just throwing my hands up in the air and giving up. The tutorials, though extremely awkward (no one ever knew enough toThis course was incredibly challenging, but it was set up in a way that forced me to work through difficult formulas and problems", 
                "Looking at machine learning methods. the textbook is also clear and a good resourceWas a good mix of linguistics, mathematics, and programming (which seems representative of what the field of MLP requires).", 
                "More lab sessions", 
                "the sub parts of the course (syntax, semantics, parsing, dependencies, disambiguations and its types) and how they are all relatedAdd an introductory lecture where students get to see the whole picture of what\u2019s going to happen in the course. For example,", 
                "Assignment brief can be misleading. Marked down for following examples from the actual brief.", 
                "Assignments could worth more (e.g. assignments 45%, exam 55%)", 
                "the overall content of the course. The quality of the lecturers vastly differed.Having more of an overall structure/flow that breaks down the syllabus into segments/units would make it easier to understand", 
                "contain it. The latter half of the courses are not organised very well compared with the first half. The structure is not clear enoughI really cannot understand the Data and evaluation part... I think the Question page in slides is useful but some slides do not", 
                "e.g. the readings and other materials. This was unfortunately not the case for Dr. Dorota Glowacka, who often presented very badI really enjoyed the lecturing style of Dr. Sharon Goldwater, and the content of the lecture always deepened my understanding of,", 
                "it made it excessively hard for those just learning to program!I think a lot of assumptions were made for the first assignment that work in programming classes had already been covered and", 
                "this assignment.I think for this assessment, it should be imperative informatics students are paired with students from other courses to help aid in", 
                "tired after them (and found reading the book alone much more beneficial), which is a shame. I guess, it's more the presentation styleI'm sorry to say that, but I feel like Dorota's lectures were much less engaging and quite hard to follow. I felt mostly confused and", 
                "week. That is because we never solved all questions during the sessions.Increase the time for labs and tutorials. I think it would be better to add a lab session each 2 weeks and a tutorial session each", 
                "videos by Simon King on Speech Zone would have been very helpful for me at the beginning of the year). I think a huge hurdle forIt would be helpful to have more foundation maths material available for students (for example the maths and notation basics", 
                "Lecture slides should be uploaded at least 24hrs in advance.", 
                "students and instructors. The extra help hours seemed to drop off after a few weeks - I don't mind emailing the TA to say that IMore formative feedback would be good - the labs were too big this year and (it felt like) there was no interaction between", 
                "More questions at the end of the lectures' slides. The lectures with Dorotha were a bit less clear.", 
                "More, smaller assignments, and maybe less percentage of the total grade being dependent on the final exam.", 
                "No. It's almost perfect.", 
                "alternative but it's not the same as having the tutor explain face to face. The tutor knows you personally and can explain betterPlease more hours of tutorial next year! If we had many questions we didn't have time to discuss everything. Piazza is a good", 
                "Practice more", 
                "enough place on the table.Room sizes of tutorial, 1 or 2 people always had to sit on the windowsill or stand because there were neither enough chars nor", 
                "attention should be put on the harder bits that require more explanations.Sometimes lecturers ran out of time to explain things, maybe less attention should be put on the introduction of topics and more", 
                "for future courses to be developed. Maybe play around with the order of the lectures. It felt like we covered a ton of things at aThe lectures felt a bit disjointed at times, likely due to the amount of stuff we needed to cover in order for a sufficient background", 
                "The coding quality used for assignments: mixed 2/4 space indents in assignment 3, or a function returning either 1 or False inThe lectures of Dorota Glowacka didn't explain her material as well as those of Sharon Goldwater.", 
                "fairly good", 
                "only one lecturer", 
                "More review", 
                "Tutor was very helpful and patient.", 
                "Dedicated computer room for labs so we don't have to wrestle it away from others.", 
                "linguistics background could understand. She also explained basic concepts students weren't familiar with, even though we wereMy tutor was Anna Currey! She was the best! Very well organised, explained everything so well that even me that had a", 
                "was struggling to find the correct answer.My tutor, Nikos, was knowledgeable and helpful when students asked questions, but was also rude at times when a student", 
                "Thanks Shay!!My tutor, Shay, was really great. He gave very clear explanations and did a really good job of getting everyone to participate.", 
                "Should have more tutorials, just 1 hour per two weeks not enough.", 
                "Super good.", 
                "The ANLP tutorials were the highlight of the week. Perhaps consider making them weekly?", 
                "more from them. I did not benefit at all from the tutorials, as they were too short to really discuss anything or help anyone who hadThe goals of the labs were often a bit less clear than for the assignments, and I enjoyed the assignments more and learned", 
                "The tutor makes all his efforts to help us.", 
                "The tutorial was really helpful!", 
                "would randomly choose someone to solve the problem on the board in front of everyone. No one likes to showcase how confusedThe tutorials caused everyone I spoke to a lot of anxiety. When no one knew the answer (which happened a lot), the mentors", 
                "explain the material to the students.The tutorials of Enno Hermann and Anna Currey were top-notch. They understood the subject very well and were eager to", 
                "The tutorials were very helpful - the labs were not.", 
                "feeling like they were talking down to me or judging me for not understanding things--They hit the perfect balance of explainingThe tutors were great for this class and were always very helpful in the lab! They helped me through problems without me"
            ]
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR11180", 
            "Name": "Artificial Intelligence, Present and Future", 
            "Level": "11", 
            "Acronym": "AIPF", 
            "Average": "Not Available", 
            "Area": "Artificial Intelligence", 
            "Summary": "AI systems now outperform humans on tasks that were once taken to show great intelligence when undertaken by people (for example, playing chess). How far can this go in the future?  What are the assumptions behind different approaches to AI? What dangers can there be from AI systems, and how should AI practitioners take these into account? The course gives a quick overview of the background and of contemporary work in symbolic AI, and looks at the relationship between statistical and 2 logical approaches to AI. It also addresses some of the philosophical and ethical issues that arise.", 
            "Delivery": "S2", 
            "Credits": "10", 
            "Course Description": "The course surveys the state of the art in current AI, looking at systems and techniques in various subfields (eg,  agents and reasoning;  planning, constraints and uncertainty; google search and the semantic web; dialogue and machine translation; varieties of learning).\n\n\n\nThroughout, relationships between different approaches to AI will be explored,  especially  the  symbolic/sub-symbolic  split  at  the  representation level. Philosophical and ethical issues in AI issues will be introduced.\n\n\n\nTypical topics include:\n\n\n\nReasoning agents\n\nLogic and inference via Logic Programming\n\nLinked data, semantic net and internet search\n\nMonte Carlo Tree Search\n\nPlanning under uncertainty\n\nAdversarial search, game playing\n\nProbabilistic inference\n\nInductive Logic Programming\n\nNatural language processing, approaches to machine translation\n\nApproaches to machine learning\n\nAI prospects and dangers\n\nEthical and Philosophical issues.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11180.htm", 
            "Coordinator": "Jacques Fleuriot", 
            "Year": "5", 
            "Coursework/Exam": "25/75", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR11170", 
            "Name": "Advanced Parallel Techniques", 
            "Level": "11", 
            "Acronym": "EPCC/02", 
            "Average": "Not Available", 
            "Area": "Parallel Programming", 
            "Summary": "The majority of current HPC applications are parallelised using a combination of message-passing (the MPI library) or threading (OpenMP directives). As HPC systems grow in size and complexity, other software approaches are now being used to aid performance portability, scalability and maintainability.\n\n\n\nThis course will cover a range of more advanced and upcoming technologies for parallel computing. Key paradigms include:\n\n- programming of accelerators including graphics processing units (GPUs);\n\n- threading approaches other than OpenMP;\n\n- partitioned global address space (PGAS) approaches;\n\n- programming languages important in HPC; and,\n\n- understanding how to select the appropriate techniques given the problem and hardware at hand.", 
            "Delivery": "S2", 
            "Credits": "10", 
            "Course Description": "Example of topics that will be covered include:\n\nLanguages: modern C++, Python (and interfacing with compiled code)\n\nThreading: pthreads, C++ & boost threads, Intel TBB\n\nAccelerators/GPUs: CUDA, OpenCL, OpenMP target directives, OpenACC\n\nPGAS: Fortran coarrays, OpenSHMEM, MPI single sided", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11170.htm", 
            "Coordinator": "not allocated", 
            "Year": "5", 
            "Coursework/Exam": "0/100", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR11169", 
            "Name": "Advanced Message-passing Programming", 
            "Level": "11", 
            "Acronym": "EPCC/01", 
            "Average": "Not Available", 
            "Area": "Parallel Programming", 
            "Summary": "Modern parallel supercomputers are predominantly programmed using the Message-Passing Interface (MPI) library. Learning the basic MPI syntax and writing medium-scale programs is relatively straightforward, but many issues only arise when tackling large-scale problems on thousands of processes. Typical issues include deadlock, poor scalability or inefficient file IO.\n\n\n\nThere are two basic ways to address these issues. The fundamental MPI calls can be used in more sophisticated ways, which requires an in-depth understanding of the finer details of the MPI standard and its implementation in real libraries. Alternatively, different approaches can be used which employ advanced MPI functionality or which exploit the shared-memory nature of modern multicore compute nodes. Before any correctness or performance issues can be addressed they must first be diagnosed, so knowledge of parallel profiling and debugging is essential.", 
            "Delivery": "S2", 
            "Credits": "10", 
            "Course Description": "The course will cover the following topics:\n\n- Scalability challenges for parallel programs\n\n- MPI Internals\n\n- Parallel profiling and debugging\n\n- Message-passing optimisations\n\n- Advanced communicator management\n\n- Advanced use of MPI collectives\n\n- Hybrid message-passing and shared-memory programming\n\n- Unstructured meshes\n\n- Advanced load-balancing techniques\n\n- Parallel file systems and parallel IO", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11169.htm", 
            "Coordinator": "not allocated", 
            "Year": "5", 
            "Coursework/Exam": "0/100", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "VUG: December; April/May", 
            "Code": "INFR11101", 
            "Name": "Advances in Programming Languages", 
            "Level": "11", 
            "Acronym": "APL", 
            "Average": "Not Available", 
            "Area": "Programming Languages", 
            "Summary": "This course surveys recent developments in programming language design and implementation with an emphasis on those developments which are technological advances on the state-of-the-art.", 
            "Delivery": "S1", 
            "Credits": "10", 
            "Course Description": "Students in APL learn about a range of significant issues in programming language design and implementation. Much of the material is presented in lectures on current topics, supported by additional reading and self-study. Students also learn through a practical exercise where they must individually research a chosen programming language innovation.\n\n\n\nAreas covered include the following.\n\n\n\n* The aims of language design: correctness, uniformity, practicality\n\n* Advanced programming language constructs: overview and motivation\n\n* Specific examples of programming language approaches to different problem domains, generally four or five drawn from areas such as:\n\n\n\n    Concurrency, memory management, security, distribution, parallelism,\n\n    verification, correctness, types, objects, classes, language interworking,\n\n    polymorphism, generics, naming, and modularity.\n\n\n\nRelevant QAA Computing Curriculum Sections: Comparative Programming Languages, Compilers and Syntax Directed Tools, Theoretical Computing", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11101.htm", 
            "Coordinator": "Ian Stark", 
            "Year": "4", 
            "Coursework/Exam": "20/80", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "April/May; April/May", 
            "Code": "INFR11031", 
            "Name": "Advanced Vision", 
            "Level": "11", 
            "Acronym": "AV", 
            "Average": "63.83", 
            "Area": "Artificial Intelligence", 
            "Summary": "This module aims to build on the introductory computer vision material taught in Introduction to Vision and Robotics. The main aim is to give students an understanding of main concepts in visual processing by constructing several vision systems during the course of the lecture series and practicals.", 
            "Delivery": "S2", 
            "Credits": "10", 
            "Course Description": "In the course of constructing six vision systems, students will learn about: image noise reduction, region growing, boundary segmentation, Canny edge detector, Hough transform, RANSAC, 2D and 3D coordinate systems, interpretation tree matching, rigid 2D object modeling, 2D position estimation, point distribution models, 3D range sensors, range data segmentation, 3D position estimation, stereo sensors, motion tracking and various approaches to object recognition.  Students are also introduced to ethical issues that might arise when using image analysis technology.\n\n\n\nThe activities of the module are designed to further develop intellectual skills in the areas of: laboratory, writing (lab reports and short essays), teamwork, critical analysis, programming and laboratory skills.\n\n\n\nRelevant QAA Computing Curriculum Sections:  Computer Vision and Image Processing", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11031.htm", 
            "Coordinator": "Bob Fisher", 
            "Year": "4", 
            "Coursework/Exam": "30/70", 
            "Feedback": [
                "Inverted classroom may not be something that would help you.", 
                "Start the coursework ASAP.", 
                "A pre-coursework would be helpful to get feedback", 
                "Assignments need to be well motivated and shouldn't be so hard that people lose interest in the subject.", 
                "No student comments"
            ]
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR11011", 
            "Name": "Advanced Databases", 
            "Level": "11", 
            "Acronym": "ADBS", 
            "Average": "72.23", 
            "Area": "Data Science", 
            "Summary": "This course aims at furthering database systems concepts through adding complexity and a more hands-on approach. In particular, we will focus on supporting multi-dimensional data in a DBMS, query optimisation, query evaluation, transaction processing and concurrency control in both a centralised and a distributed context. In terms of centralised databases, we shall start from single and multi-dimensional indexing methods, move on to join evaluation algorithms, and talk about query opimisation paradigms. We shall then focus on the issues of transaction processing, concurrency control and crash recovery. Finally, we shall revisit the previous issues in a distributed database environment.", 
            "Delivery": "S2", 
            "Credits": "10", 
            "Course Description": "This is an overview of what will be covered. The time spent on each part will be adjusted as the course progresses.\n\n\n\n* B-trees, hash-based indexes, R-trees.\n\n* Indexing structures for solid state and main memory.\n\n* Query evaluation: sorting and join processing, aggregation\n\n* Algorithmic adjustments for flash memory and main-memory systems.\n\n* Query optimisation: cost-based query optimisation, dynamic programming, randomised exploration, rule-based optimisation.\n\n* Concurrency and recovery: transactions, lock tables, main-memory concurrency control, recovery using the ARIES algorithm.\n\n* Parallel databases: parallel query evaluation, parallel and distributed transaction processing.\n\n\n\nRelevant QAA Computing Curriculum Sections:  Databases, Data Structures and Algorithms, Software Engineering", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11011.htm", 
            "Coordinator": "Milos Nikolic", 
            "Year": "4", 
            "Coursework/Exam": "30/70", 
            "Feedback": [
                "camera is on. This is really helpful if missed some lectures and also for the revision for the exam since, unfortunately, there areDr Paolo Guagliardo is great at explaining the material clearly. He also always pays attention whether the Media Hopper", 
                "Quality course, interesting material, well taught, would recommend.", 
                "lecture slides or anything to reinforce what you have seen in the lectures. Going back through lecture slides is a good way to reviseHave recommended readings to go along with lectures or course notes as currently the lectures are all done on the board with no", 
                "some slides. As mentioned above, Dr Paolo Guagliardo had always examples already prepared, so maybe he could make a pdfThe lecturer wrote everything on the whiteboard. Although everything he wrote is on the recordings, it would be nice to have", 
                "Would be nice to have an outline of topics covered/ to be covered, with corresponding chapters from the textbook"
            ]
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR11122", 
            "Name": "Advanced Topics in Foundations of Databases", 
            "Level": "11", 
            "Acronym": "ATFD", 
            "Average": "57.91", 
            "Area": "Data Science", 
            "Summary": "The course focuses on three central aspects of big data: Volume, Variety and Veracity. It will cover tractability and parallel scalability of querying big data (volume), data models and data interoperability (variety), and foundations of data quality and uncertainty (veracity). It aims to expose students to current research and development in connection with big data theory, and prepare them for conducting research in this emerging area. The course content is dynamic and continuously updated to cover the state-of-the-art in big data theory.", 
            "Delivery": "S2", 
            "Credits": "20", 
            "Course Description": "* Background: Fundamental challenges introduced by querying big data; the need for revising the classical computational complexity theory in the context of big data; modelling computational costs and communication costs; BD-tractability: the tractability of queries on big data; the challenges to query data residing in multiple sources; the need to study data quality, the other side of big data.\n\n\n\n* Volume: (1) the feasibility of computing exact query answers in big data within our available resources: parallel scalability, scale independence, techniques for making big data small; (2) approximate query answering: (a) query-driven approximation, envelopes with absolute approximation bounds, (b) data-driven approximation, synopsis-based approximate query answering, and (c) resource-bounded approximate query answering and anytime approximation.\n\n\n\n* Variety: data can be in different formats, and come from different sources and/or applications. We shall cover: (a) popular data models, including relational, XML, and graph models, and languages for them, and (b) handling queries over data residing in multiple sources, focusing on both virtual and materialized integration, and efficient query answering.\n\n\n\n* Veracity: big data = data quantity + data quality; (1) central issues of data quality: data consistency, data accuracy, information completeness, data currency (timeliness), entity resolution; (2) improving data quality: consistency query answering, data repairing, certain fixes; (3) knowledge bases as master data, deducing the true values of entities; (4) handling poor quality information, understanding current technologies and their deficiencies, correctness guarantees.\n\n\n\n\n\nBig data is the next frontier for innovation, competition and productivity. This course will cover fundamental issues in connection with three of four big V's in the typical characterization of big data, namely, Volume, Variety and Veracity.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11122.htm", 
            "Coordinator": "Andreas Pieris", 
            "Year": "5", 
            "Coursework/Exam": "100/0", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "April/May; VUG: December", 
            "Code": "INFR09042", 
            "Name": "Automated Reasoning", 
            "Level": "9", 
            "Acronym": "AR", 
            "Average": "60.15", 
            "Area": "Artificial Intelligence", 
            "Summary": "The overall aim of the course is to describe how reasoning can be modelled using computers. Its more specific aim is to provide a route into more advanced uses of theorem proving in order to solve problems in mathematics and formal verification.\n\n\n\nMajor emphases are on: how knowledge can be represented using propositional, first-order and higher-order logic; how these representations can be used as the basis for reasoning, and how these reasoning processes can be guided to a successful conclusion through a variety of means ranging from fully-automated to interactive ones. Students will develop a thorough understanding of modern, interactive theorem proving via lectures, tutorials and an assignment.  \n\n\n\nThis course will replace Automated Reasoning (Level 11) (INFR11074).", 
            "Delivery": "S1", 
            "Credits": "10", 
            "Course Description": "The course starts with an introduction to higher order logic, theorem provers and, more specifically, Isabelle/HOL. This will set the context for the rest of the course in which Isabelle will be the framework for getting hands-on experience about the application of various theoretical concepts.\n\nThrough the lectures and tutorials that incorporate practical exercises the students will gain the skills needed to get started with Isabelle and progress to more complex concepts involving both representation and reasoning.\n\n\n\nThe second part will look at representation/modelling of concepts in (higher order) logic in details.  Axiomatic versus conservative extensions of theories will be covered and mechanisms such as Isabelle locales will be introduced and used. Recursive definitions and inductive notions will be covered too.\n\n\n\nThe third part of the course will focus on fundamental notions such as unification and rewriting, within both a first and higher order context. It will look at notions such as termination and use Isabelle's simplifier as the tool for understanding many of the concepts. It will also look at the interplay between (fully) automatic and interactive proofs.\n\n\n\nThe fourth part will introduce declarative/structured proofs and using the Isar language of Isabelle show how proofs resembling pencil and paper ones can be formalized.\n\n\n\nFinally the various strands will brought together through the discussion of a non-trivial case study.\n\nThis may involve either formalized mathematics (e.g. looking at a geometric theory) or a formal verification example.\n\n\n\nThe assignment will be a combination of basic to intermediate representation and reasoning in Isabelle (up to 40%), more advanced proof tackling one particular domain or example (up to 40%) and a final part which, if completed successfully, will clearly demonstrate that the student has a good of the challenges that advanced interactive theorem proving entails.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr09042.htm", 
            "Coordinator": "Jacques Fleuriot", 
            "Year": "3", 
            "Coursework/Exam": "40/60", 
            "Feedback": [
                "use Isabelle.I would recommend it, as long as you're prepared to sit down and spend some time making sure you know how to", 
                "LOGICIT'S A PAINFUL COURSE, DON'T DO IT UNLESS YOU REALLY LIKE ASSISTED THEOREM PROVING AND", 
                "unless you are interested in those three. However, if you are, this is possibly the best course for you.This course will be painful, if you are not interested in Logic, Math and programming. Honestly, don't take it,", 
                "questions. That way you will not find any problem dealing with the course. Otherwise you might struggle with it,Work constantly on the material as its being taught and make sure you understand and try to solve all the tutorial", 
                "Worth the challenge.", 
                "Can't think of anything!", 
                "Maybe some more basic Isar and Isabelle introductory examples to get faster the grip with the tools.", 
                "Isabelle proof tactics and syntax (for example) aren't rushed through, and that students are supported well especially when Isabelle isThe learning curve for Isabelle is quite steep, but I suppose there isn't really any getting around this, other than to make sure that", 
                "written by experts for experts, even those that were apparently aimed at beginners.I found the software (Isabelle) extremely difficult to use and the available documentation almost impenetrable - to me it seemed", 
                "Tutorials were challenging, but in a good way."
            ]
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR10052", 
            "Name": "Algorithms and Data Structures", 
            "Level": "10", 
            "Acronym": "ADS", 
            "Average": "72.26", 
            "Area": "Algorithms and Data Structures", 
            "Summary": "The course aims to provide general techniques for the design of efficient algorithms and, in parallel, develop appropriate mathematical tools for analysing their performance. In this, it broadens and deepens the study of algorithms and data structures initiated in INF2. The focus is on algorithms, more than data structures. Along the way, problem solving skills are exercised and developed.", 
            "Delivery": "S2", 
            "Credits": "10", 
            "Course Description": "Introductory concepts\n\nReview of CS2. Models of computation; time and space complexity; upper and lower bounds, big-O and big-Omega notation; average and worst case analysis.\n\n\n\nDivide and conquer\n\nMatrix multiplication: Strassen's algorithm; the discrete Fourier transform (DFT), the fast Fourier transform (FFT). Expressing the runtime of a recursive algorithm as a recurrence relation; solving recurrence relations.\n\n\n\nSorting\n\nQuicksort and its analysis; worst-case, best-case and average-case.\n\n\n\nData structures: Disjoint sets\n\nThe ``disjoint sets'' (union-find) abstract data type: specification and implementations as lists and trees. Union-by-rank, path-compression, etc., ``heuristics''. Applications to finding minimum spanning trees.\n\n\n\nDynamic programming\n\nIntroduction to the technique; examples: Matrix-chain multiplication, Longest common subsequences.\n\n\n\nGraph/Network algorithms\n\nNetwork flow, Max-flow/min-cut theorem, Ford-Fulkerson algorithm.\n\n\n\nGeometric algorithms\n\nConvex hull of a set of points (in 2-d).\n\n\n\nRelevant QAA Computing Curriculum Sections: Data Structures and Algorithms", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr10052.htm", 
            "Coordinator": "Richard Mayr", 
            "Year": "3", 
            "Coursework/Exam": "25/75", 
            "Feedback": [
                "Attend all lectures and tutorials because it is WORTH IT.", 
                "Do not take this course.", 
                "Don't go to lectures. Read the book instead.", 
                "textbook (+ go to the tutorials). The latter IS a viable option and the course is certainly a useful one.If Richard Mayr is teaching it, either don't take it OR take it and make sure you read about all the topics in the CRLS", 
                "of stuff, it's still worth taking (and quite easy).If it's Dr Richard Mayr as the lecturer, you will have to read CLRS instead of going to the lectures, but if you're into this kind", 
                "Prepare for boring lectures haha", 
                "useful if you want to improve your algorithmic knowledge, but be prepared to be challenged. Bear in mind that you mind haveThe course is hard if you do not like proofs, but I found it really interesting and I learnt some new algorithms. It is really", 
                "maths?)Ban Richard Mayr from teaching!!! Get someone who can show some excitement about the subject. (Maybe from school of", 
                "Please, change the summative assignment. It is genuinely embarrassing to have around 1/3 to 1/2 of the total marks allocated toChange the lecturer. Richard Mayr cannot teach properly.", 
                "Different lecturer, tophat, less dry slides. Anything to make it more engaging.", 
                "is his rude and disrespectful treatment of his students. His attitude is absolutely unacceptable, and the learning environment heDr. Mayr is the most unhelpful professor I have ever had. Firstly, his explanations are confusing and monotone. But far, far worse", 
                "None.", 
                "comprehend and there was only talking, not even a single example on board for such a practical course. Also, I believe the lecturerThe lecturer was not at all helpful in terms of teaching or willingness to help. The lectures were boring, the lecturer is hard to", 
                "2016/17 year and not updated for this year.This course was not taught well. There was some disconnect between lectures and tutorials and material was given for the", 
                "Amazing idea to have past students as tutors - the atmosphere is so much better and then know well how to explain things!", 
                "Dr Mayr is the most boring tutor I have ever had, there was nothing interesting about spending an hour on tutorials", 
                "My tutor could have been a little bit better but he was definitely not bad and the tutorial sheets were good.", 
                "The tutorials were too easy.", 
                "Tutors were quite good. Any one of them could replace the lecturer and do a WAAAAAAY better job than him."
            ]
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR11020", 
            "Name": "Algorithmic Game Theory and its Applications", 
            "Level": "11", 
            "Acronym": "AGTA", 
            "Average": "65.70", 
            "Area": "Algorithms and Data Structures", 
            "Summary": "Game theory is the formal study of interaction between \"self-interested\" (or \"goal-oriented\") \"systems\" (or \"agents\" or \"decision makers\" or \"players\"), & strategic scenarios that arise in such settings. It began life in Economics in the 1940's with the work of von Neumann & Morgenstern, but has since been applied to an extraordinary range of subjects, including political science, evolutionary biology & even to inspection regimes for arms control. \n\n\n\nGame theory has for years also played an important, if less recognized, role in several branches of computer science. Applications within computer science include the use of games in automated verification & model checking to model computing systems in an unknown and possibly adverse environment. In AI games are applied to the analysis of multi-agent systems. Recently, with the advent of the internet and e-commerce, many game theoretic questions in the interplay between economics & computing have received extensive attention. These include electronic auctions, & more generally mechanism design questions (inverse game theory) related to finding incentive structures for cooperation between independent entities on the internet. \n\n\n\nWherever game theory plays a quantitative role, algorithmic and computational questions related to \"solving\" games are also of central importance. \n\n\n\nThis course aims to bring together as a coherent body of knowledge the game theoretic algorithms & models that underpin several flourishing subjects at the intersection of computer science, economics and e-commerce, & AI.", 
            "Delivery": "S2", 
            "Credits": "10", 
            "Course Description": "*  Examples of diverse games.\n\n* Zero-sum two-person games: LP, simplex, LP-duality, mixed strategies and the minimax theorem.\n\n* General games in strategic form:\n\n   o Equilibria and Nash's theorem.\n\n   o 2-player equilibria: Lemke-Howson algorithm and its variants. \n\n* Games in Extensive form (mainly zero-sum, perfect information):\n\n   o Game trees. Relation to Strategic games.\n\n   o And/Or game graphs and reachability games.\n\n   o bisimulation, simulation, parity games, and other omega-games on        automata(finitely presented, infinite duration games).\n\n   o mean value games, MDPs, and stochastic games. \n\n* Mechanism design and inverse game theory: designing games where selfish players will behave as desired.\n\n   o Vickery auctions and other mechanisms.\n\n   o Combinatorial auctions.\n\n   o Incentive structures for the internet. \n\n\n\nRelevant QAA Computing Curriculum Sections:  Artificial Intelligence, Data Structures and Algorithms, e-commerce, Simulation and Modelling, Theoretical Computing", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11020.htm", 
            "Coordinator": "Kousha Etessami", 
            "Year": "4", 
            "Coursework/Exam": "20/80", 
            "Feedback": [
                "notation would suggest.Be prepared for complex notation. However, if you put in the effort, the underlying concepts are not as hard as the", 
                "Interesting and challenging course if you're not afraid of abstract definitions and heavy formalism.", 
                "This course is not for everybody; do a check and be sure you want to take this", 
                "exactly pointing toMaking the lectures more amenable to recording; pointing using the given stylus so that we know what the professor is", 
                "More focus on practical applications.", 
                "None", 
                "Use more the pen and paper during the lectures to give intuition.Not striking.", 
                "Perhaps use more example problems to explain concepts rather than mathematical slides", 
                "No student comments"
            ]
        }, 
        {
            "Exam Diet": "December", 
            "Code": "INFR11156", 
            "Name": "Algorithmic Foundations of Data Science", 
            "Level": "11", 
            "Acronym": "AFDS", 
            "Average": "Not Available", 
            "Area": "Algorithms and Data Structures", 
            "Summary": "The course aims to introduce algorithmic techniques that form the foundations of processing and analysing massive datasets of various forms. In particular, the course discusses how to pre-process massive datasets, efficiently store massive datasets, design fast algorithms for massive datasets, and analyse the performance of designed algorithms. Through various examples and the coursework, the students will see applications of the topics discussed in class in other areas of computer science, e.g., machine learning, and network science.", 
            "Delivery": "S1", 
            "Credits": "10", 
            "Course Description": "The course is to discuss algorithmic techniques that form the foundations of processing and analysing massive datasets of various forms. Specific techniques covered in the course include effective representation of datasets, extracting useful information from a dataset based on algebraic tools, designing faster algorithms based on sampling and sketching techniques. Students in class will learn these techniques through intuitions, theoretical reasoning, and practical examples.\n\n\n\nThe syllabus includes:\n\nHigh-dimensional spaces\n\nBest-fit subspaces and singular value decomposition\n\nSpectral algorithms for massive datasets\n\nData streaming algorithms\n\nClustering\n\nGraph sparsification", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11156.htm", 
            "Coordinator": "He Sun", 
            "Year": "4", 
            "Coursework/Exam": "25/75", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "December", 
            "Code": "INFR11102", 
            "Name": "Computational Complexity", 
            "Level": "11", 
            "Acronym": "CMC", 
            "Average": "54.17", 
            "Area": "Theory of Computation", 
            "Summary": "This module studies the problem of classifying computational problems according to their intrinsic difficulty or 'complexity'. We begin by defining a standard computational model, the Turing machine, which is useful for abstracting out complexity aspects of computational problems. We define various complexity resources, such as time, space, non-determinism , randomness and non-uniformity, and learn how to classify computational problems according to their resource requirements. Among other topics, we discuss the central problem of theoretical computer science, the P vs NP problem, and explain its importance using the notions of reductions and completeness.", 
            "Delivery": "S1", 
            "Credits": "10", 
            "Course Description": "* The computational model: Turing machines\n\n* NP and NP completeness\n\n* Space complexity\n\n* Diagonalization\n\n* The polynomial hierarchy\n\n* Circuits\n\n* Randomized computation\n\n* Counting complexity\n\n\n\nRelevant QAA Computing Curriculum Sections: Concurrency and Parallelism, Data Structures and Algorithms, Theoretical Computing", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11102.htm", 
            "Coordinator": "Heng Guo", 
            "Year": "4", 
            "Coursework/Exam": "25/75", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "April/May; VUG: December", 
            "Code": "INFR10054", 
            "Name": "Computational Cognitive Science", 
            "Level": "10", 
            "Acronym": "CCS", 
            "Average": "58.80", 
            "Area": "Artificial Intelligence", 
            "Summary": "This course aims to introduce students to the basic concepts and methodology needed to implement and analyse computational models of cognition. It considers the fundamental issues of using a computational approach to explore and model cognition. In particular, we explore the way that computational models relate to, are tested against, and illuminate psychological theories and data.\n\n\n\nThe course will introduce both symbolic and subsymbolic modelling methodologies, and provide practical experience with implementing models. The symbolic part will focus on cognitive architectures,while the subsymbolic part will introduce probabilistic models.", 
            "Delivery": "S1", 
            "Credits": "10", 
            "Course Description": "- An introduction/review of the idea of computational approaches to studying cognition; the mind as information-processing system; Marr's levels of analysis (computational, algorithmic, implementation).\n\n- The general motivations underlying the computational modelling of cognition, and different kinds of questions that can be answered (e.g., why do cognitive processes behave as they do, or what algorithms might be used to carry out this behaviour? What kinds of information are used, or how is this information processed/integrated over time?)\n\n- Mechanistic/algorithmic approaches and issues addressed by these approaches: parallel versus serial processing, flow of information, timing effects.\n\n- Rational/probabilistic approaches and issues addressed by these approaches: adaptation to the environment, behaviour under uncertainty, learning, timing effects.\n\n- General issues: top-down versus bottom-up processing, online processing, integration of multiple sources of information.\n\n- Methodology and issues in the development and evaluation of cognitive models: Which psychological data are relevant? What predictions are made by a model? How could these be tested?\n\n- Modelling techniques: in the assignments, students will experiment with both symbolic (rulebased) and subsymbolic (probabilistic) cognitive models.\n\n- Example models: in a number of areas we will look at the theories proposed and different ways of modelling them. Areas discussed will include several of the following: language processing, reasoning, memory, high-level vision, categorization. Specific models will be introduced and analysed with regard to relevant psychological data.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr10054.htm", 
            "Coordinator": "Christopher Lucas", 
            "Year": "3", 
            "Coursework/Exam": "25/75", 
            "Feedback": [
                "Always go to the tutorials I guess?", 
                "Don't skip the lectures, can be difficult to catch up from just the slides.", 
                "a more traditional course about cognitive science.I would recommend it, as long as they are aware how much the focus is on the side of modelling methods etc. compared to", 
                "If you are interested in Cognitive Science - this course is definitely worth taking!", 
                "involved, turning theories from psychology into computational models is assumption- and maths-heavy :-)It is a challenging yet very nice introduction to the area. Warning: There is a lot of probabilistic theories/concepts/thinking", 
                "Make sure you know maths, up to and including differentiation and logarithms (and differentiation of logarithms!).", 
                "Only take this if you like statistics and cognitive science.", 
                "lectures and tutorials and the recommended textbook is fantastic for supplementing these.Refresh your probability and calculus knowledge before starting this course! It's a fairly gentle course if you keep up with the", 
                "worst bit it actually all starts making sense.Be prepared that this course is rather challenging but do not be scared to actually open up because once you're through the", 
                "were doing in the course. It just kind of felt like we were taking random models and examining how they worked, which wasAfter the first few weeks, when we were working through the Lewandowsky and Farrell section, I sort of lost focus on what we", 
                "Could we please get the lectures in a room which permits recordings?", 
                "Course content felt a bit disjointed, and it felt that we were just learning specific models for a few cases of the subject.", 
                "questions that relate to the code in the assignment because we didn't have to use the code for much of it unlike the hand-out stated. IGive the dates of release/deadline for the coursework earlier if possible so that people can plan ahead. Maybe have more", 
                "ones (without necessarily understanding them in their full depth). I would also welcome more than 2 weeks of time for theI think it would be more attractive for people if we touched upon not just older and simpler models, but also some of the recent", 
                "discussion) would have been great - Chris has mentioned a lot of interesting papers. Probably a discussion group/tutorial would haveI understand that the course is a level 10 course, however including a broader overview of papers (i.e. including more papers into", 
                "science as a convenient way to study different types of model, rather than go into the theory/study of the cognitive science a bit more.It's not necessarily a bad thing (at least not for me), but I wasn't aware quite how much the course would simply use cognitive", 
                "Using python instead of Matlab. That'd be great.", 
                "different models instead. Felt like only the second half of the course actually dealt with cognitive models.While I recognize the importance of being able to evaluate models, I would have definitely preferred being introduced to more", 
                "Lectures were given in a room with no recording capability. Disappointing.", 
                "everyone into discussion and making everyone feeling comfortable with asking any sort of questions regarding the material. I feel likeBorislav Ikonomov was great at explaining all sorts of concepts with examples and at a good pace, he also was good at including", 
                "regularly checked that people understood his explanations.Borislav was a fantastic tutor and went so far beyond just the questions on the tutorial sheet. He was very willing to help and", 
                "Explained things very well.Excellent tutor", 
                "actual content of the slides, and then the tutorial time was spent on explaining the stuff one more time rather than going through theMore tutorial groups. Possibly longer tutorial slots because the stretching lectures were causing many people to be unclear on the"
            ]
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR11036", 
            "Name": "Computational Cognitive Neuroscience", 
            "Level": "11", 
            "Acronym": "CCN", 
            "Average": "66.20", 
            "Area": "Artificial Intelligence", 
            "Summary": "In this course we study computational approaches to understanding cognitive processes, using massively parallel networks. We study biologically-inspired learning rules for connectionist networks, and their application in connectionist models of perception, memory and language.", 
            "Delivery": "S2", 
            "Credits": "10", 
            "Course Description": "*Encoding Information in populations of neurons. \n\n*Decoding Information from populations of neurons. \n\n*Models of Neurons and Networks of Neurons. \n\n*Information transmission and Attention. \n\n*Models of Learning and Plasticity. \n\n*Models of Memory. \n\n*Models of Decision Making. \n\n*Models of Mental disorders. \n\n*The Bayesian Brain. \n\n\n\nRelevant QAA Computing Curriculum Sections:  Artificial Intelligence", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11036.htm", 
            "Coordinator": "Peggy Series", 
            "Year": "5", 
            "Coursework/Exam": "100/0", 
            "Feedback": [
                "report.Begin assignments as soon as you get them, and following recommended reading is helpful for choosing a subject for the final", 
                "lecturers to students with a neuroscience/humanities background.Do not take this course unless you have a very solid mathematical background. Virtually no help will be provided by the", 
                "covered is extremely interesting.Do not underestimate the assignments - they take really long time to complete. But overall it's worth the struggle - the material", 
                "Don't freak out when the first assignment comes through, it is challenging but worth the effort.", 
                "Don't take it unless you love that field and you're sure about it.", 
                "Start the assignments early and get ready to read a lot of new, interesting and challenging papers.", 
                "However, I was *highly* disappointed with what I could learn during the course, because despite the breath being huge, the depthThe topics that the course covers are really interest, a complete journey to many interesting areas of cognitive neurosciences.", 
                "Unless you are really interested in this subject, you should look elsewhere", 
                "Work hard on the assignments. Read along with recommended reading if possible", 
                "A few pointers to reading material that would make assignments more understandable", 
                "feedback. Assignments often assume knowledge that goes well beyond what is explained in class, making the gap between what isAlmost no feedback was provided on coursework, and many students had to personally ask for clarifications about marks and", 
                "Maybe more mathematical details would be better", 
                "None, it was probably my most interesting course", 
                "The final assignment is not clear in what it wants.", 
                "deadlines. Maybe switch from Matlab to Python/R for the coding parts.The labs could be more useful for the assignments and the deadlines for the assignments were too close to other course's", 
                "assignments were too much work. This should have been a 15 or 20 credit course instead of just 10.The lectures are not related at all to the content of the labs or assignments. The lab assistant was never very helpful and the", 
                "description and reality was much bigger than in any other course.The requirements in the course description do not match the actual requirement. I withdrew from the course as the difference in", 
                "had to sit on the floor). Also, recording of the lectures would have been great. And the feedback on the second assignment was reallyThe room allocation chaos (which is more of an organisational thing) was really disturbing (there were few occasions many of us", 
                "1. There are too many topics to cover, so many, that at the end none of them end up being covered in good way. I would suggest toThe topics of the course are simply fascinating, however:", 
                "The workload for a 10 credit module seemed like a lot especially for assignment 1.", 
                "like 15/20The workload was well above any other of my 10 credit courses, I would increase the number of credits this counts for - it's more", 
                "and adequate about their prereqs.Update the prereqs! This course is maths-heavy and the current prereqs do not really reflect that. Other courses are more specific"
            ]
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR08009", 
            "Name": "Informatics 2B - Algorithms, Data Structures, Learning", 
            "Level": "8", 
            "Acronym": "INF2B", 
            "Average": "60.19", 
            "Area": "Algorithms and Data Structures", 
            "Summary": "This course presents key symbolic and numerical data structures and algorithms for manipulating them. Introductory numerical and symbolic learning methods provide a context for the algorithms and data structures. To make the presented ideas concrete, the module will extend the student's skills in Java and Matlab. Examples will be taken from all areas of Informatics.", 
            "Delivery": "S2", 
            "Credits": "20", 
            "Course Description": "Algorithms and Data Structures:\n\n* Asymptotic notation and algorithms\n\n* Sequential data structures\n\n* Searching - including Hashing, AVL Trees, Heaps\n\n* Sorting - including Mergesort, Heapsort, Quicksort\n\n* Web-scale algorithms\n\n* Graphs\n\n\n\nLearning:\n\n* Statistical pattern recognition and machine learning\n\n* Multidimensional data\n\n* Discrete data and naive Bayes\n\n* Modelling and describing continuous data: nearest neighbours and clustering\n\n* Gaussians and linear discriminants\n\n* Single- and multi-layer networks\n\n\n\nRelevant QAA Computing Curriculum Sections:  Data Structures and Algorithms, Artificial Intelligence", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr08009.htm", 
            "Coordinator": "Kyriakos Kalorkoti", 
            "Year": "2", 
            "Coursework/Exam": "25/75", 
            "Feedback": [
                "Be prepared to spend >48h on coursework 2, work on your own without relying on any help and hear 'good' old KK's jokes.", 
                "Buy a good book on it cause the lectures aren\u2019t helpful and there\u2019s only one lab.", 
                "you don't understand things. Go to more than one tutorial a week if you still feel like things are not clear. Also, never leave theDo your hardest not to fall behind, as it is VERY difficult to catch up once you do so. Go to tutorials and ask questions when", 
                "Don't leave the learning coursework to the week before the deadline, never mind the day before...", 
                "Ensure you keep up to date with the content", 
                "the two threads aren't connected. Definitely read the lecture notes and do the tutorial exercises to really understand theI believe that this is the hardest Informatics course in second year because there's a lot of information we need to know and", 
                "Informatics and the Learning part is conceptually really interesting. Don't expect to be able to slack off though.It's a lot of work but it pays off. The Algorithms part establishes a lot of jargon and background knowledge used throughout", 
                "It's challenging, so keep up with tutorials and labs. Also, start coursework early.", 
                "Make sure you know your Linear Algebra + other math", 
                "Read the lecture notes. Start the coursework early.", 
                "Read the notes, don't just rely on the lectures. Also start the coursework early.", 
                "bother with Hiroshi's, if you know any linear algebra and calculus then you'll be fine. Attend his labs though, and get to gripsStart the learning coursework early, it is significantly harder than the algorithms coursework. Attend KK's lectures, don't", 
                "Start the machine learning coursework early", 
                "Study the notes in parallel with the lectures, don't fall behind and start the courseworks on day 1 of release!", 
                "Take it", 
                "The content of this course is very interesting, but be prepared for a lot of work because it is a challenging course", 
                "Try to make sure you get put in a tutorial taught by KK as this will mean you understand the material much better, especiallyThe learning part never really gets interesting but is a good introduction to later ML course so pay attention anyway.", 
                "understanding of Java and mathematical proofs are needed to feel at ease with the course.This course is hard, it requires a lot of thought outside of the lecture theatre to understand the concepts. A firm", 
                "You will need to spend more time on learning. Lectures are not quite clear.", 
                "Algorithms and Data Structure Lectures, Tutorial Exercises", 
                "Coursework in this course has been some of the most challenging and rewarding I've yet done. Good stuff.", 
                "Coursework, tutorials with KK (who is an excellent tutor).", 
                "Exploration of core algorithms in computer science", 
                "KK's lectures help to develop intuitive understanding", 
                "Well explained coursework", 
                "ordered betterA re-write and review of the Learning slides, as sometimes it felt as if the lectures did not flow well as slides could have been", 
                "Better organisation of the learning part.", 
                "what's a confusion matrix?). Also it would have been good if we had been taught a little bit about vectorization in the lecturesFor the first coursework, the handout was much better at explaining what we had to do than for the second coursework (e.g.", 
                "matlab like this, especially when you don\u2019t teach us the basics in the lectures.Have more labs since, the course has more than 100 students yet there\u2019s only an hour long lab. How are we expected to learn", 
                "he only described what was in the slides without proper explanations. Especially, when presenting mathematical formulae, he onlyI think that this should be two courses, not one since the topics are very different. I didn't like Hiroshi's style of teaching. I felt that", 
                "taught.(And telling us to watch the previous year's lectures online does not count as being taught the content)I understand that Hiroshi wanted to strike, however it was not fair to give us a full coursework on content that we hadn't been", 
                "I would say the strikes didn\u2019t help that much. Made the schedule difficult", 
                "challenging.It\u2019s too hard and too much to learn. We did not have many lectures from learning due to strike and CW does not care about it. Too", 
                "(particularly with the neural networks part).Learning section - maybe focus a bit more on intuitive understanding of the material before throwing all the maths at us", 
                "More teaching about vectorisation techniques for MATLAB", 
                "None", 
                "Publish past papers' solutions", 
                "Python support for those using it for their coursework", 
                "reason behind holding them back is that many students can't help but peek at the answers and thus they don't get the practiseRelease answers for more past-papers. Release answers for the self-study exercises in the lecture notes. I appreciate that the", 
                "received a 10-page handout with VERY careful and clear explanations over what we had to do. In the lectures, prof. KalorkotiThe first coursework that we have received under professor Kalorkoti was very well organised. It was challenging, but we have", 
                "The learning and data side was not very well explained and more examples would have been useful for this", 
                "honestly split the course in two different smaller courses: Algorithms and Data Structures being one and Learning the other. The twoThere's too much workload with Lectures, reading material, tutorials and labs all at once - a bit less would be nice. I would", 
                "time. No commentary on Hiroshi, I think he did as well as he could, however learning seems to be an incredibly practical exercise.This should be 2 courses, amalgamating them was a bizarre move. I found the learning half of the courses lectures a waste of", 
                "whether we were expected to catch up in our own time or whether the material would be NE and so on. As to feedback so far beingThis year I think we got a little bit screwed over due to the strikes affecting lectures and there being a lot of uncertainty as to", 
                "reading from the slides and there is no interaction with the topic.Underwhelmed by learning section of course. Expected more excitement from the lecturer. In my opinion, the lecturer is simply", 
                "It is just quite sample with the algorithm but not quite clear with learning part of the lectures...", 
                "(more when it came to the mathematical bit of the Learning thread).A lot of tutors didn't really seem to be too interested in teaching and would sometimes state something that's just plain wrong", 
                "explanations made the very confusing problems straightforward and easy to solve.I would specifically like to thank Heru Praptono for his help with clarifying the 2nd coursework we had been given. His", 
                "funny, friendly way that keeps you engaged :)KK is a fantastic tutor, especially when allowed to go off the 'scripted' questions. He can be a little rude at times, but only in a", 
                "the tutorial but rather to get a deeper understanding of the material.Nice tutorials, I liked that for the algorithms part the solutions were released beforehand so the aim wasn't to just solve them in", 
                "(since my tutor participated in strike)Since my tutor and Hiroshi participated in strikes, tutorials' content was far ahead of what we covered and nobody could explain it", 
                "The tutor was really great, was always happy to tale questions and answer them to the best of his ability.", 
                "The tutorials definitely helped me understand the topics more in both threads.", 
                "Tutor was very supportive and dedicated even through the strike", 
                "they were extremely challenging though"
            ]
        }, 
        {
            "Exam Diet": "December; December", 
            "Code": "INFR10069", 
            "Name": "Introductory Applied Machine Learning", 
            "Level": "10", 
            "Acronym": "IAML", 
            "Average": "67.49", 
            "Area": "Machine Learning", 
            "Summary": "Since the early days of AI, researchers have been interested in making computers learn, rather than simply programming them to do tasks. This is the field of machine learning. The main area that will be discussed is supervised learning, which is concerned with learning to predict an output, given inputs. A second area of study is unsupervised learning, where we wish to discover the structure in a set of patterns; there is no output 'teacher signal'.\n\n\n\nThe primary aim of the course is to provide the student with a set of practical tools that can be applied to solve real-world problems in machine learning, coupled with an appropriate, principled approach to formulating a solution.\n\n\n\nThis 20 credit course replaces INFR10063 Introductory Applied Machine Learning (10 credits).", 
            "Delivery": "S1", 
            "Credits": "20", 
            "Course Description": "Introduction to Machine Learning and its Goals. Introduction to Data and Models. Memory based methods. Decision Trees. Error functions, Minimizing Error. Regression, Logistic Regression, Neural Networks. Margin Based Methods: Perceptron, Support Vector Machines. Na\u00efve Bayes. Dimensionality Reduction. Clustering: K-means, Simple Gaussian Mixture Models, Hierarchical Clustering. Boosting Approaches. Model Averaging, Mixtures of Experts. Evaluation of Performance.\n\n\n\n[We will also use a modern machine learning programming environment]", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr10069.htm", 
            "Coordinator": "Pavlos Andreadis", 
            "Year": "3", 
            "Coursework/Exam": "50/50", 
            "Feedback": [
                "Be prepared for a lot of self-study.", 
                "in a timely manner and studying for the exam will be a piece of cake.Be prepared to learn on your own and definitely check Coursera for a very similar course. Also do all the labs and coursework", 
                "grade. Start somewhat early, otherwise it will be intense.Coursework -- THEY ARE INTENSE. Probably take much longer than they should for each coursework worth 12.5% of the", 
                "Definitely a demanding course but exciting and lets you practice all the interesting stuff you learned.", 
                "Definitely take it as it's a good introduction to machine learning.", 
                "get answers to your piazza questions. When in doubt, ignore the advice and hints and do what works. Don't try to construct extraDo the labs before the lab time. Start the assignments as soon as they're out. Pretend they're due a week earlier so you can", 
                "Doing the labs is very important.", 
                "Go out on the internet and explore! There's a whole world out there of machine learning and python resources.", 
                "Go to the tutorials. The labs help in completing the assignments.", 
                "If the class is still reverse-lecture style, don't take it.", 
                "Pandas in Python. You will neither learn much about the background behind algorithms nor implement them, but just apply themIf you want to learn about Machine Learning, don't take this course. Take it if you want to know how to use Scikit-Learn and", 
                "If you want, you can do this course before the semester even starts. This will ease your workload.", 
                "Is a good introductory course. However, expect to spend a lot of time on the assignments.", 
                "It is a fast paced course. Make sure you know some machine learning before getting into this course.", 
                "It's a great practical course for ML.", 
                "Keep up with the lectures. They provide great insights to the course.", 
                "However, more important are the labs. They're very useful to prepare for the coursework.", 
                "have to put in for a 10 credits module. Don't be fooled by the fact that it's called 'Introductory...\u2019 it does require a background inMake sure you allocate enough time to study for this module: 20 credits literally means double the amount of work you would", 
                "Start early with the assignments, watch the lectures on time.", 
                "Don't fall behind at all cost.Start work on labs and assignments as soon as they are released.", 
                "Stay on top of the lecture videos & take time to engage with the labs.", 
                "Take that serious. It's a very tough and busy lecture LOL.", 
                "Take the soft deadlines seriously, it's the only way.", 
                "The course is online without a book, which can be a disadvantage to some. However the course is very fun.", 
                "builds a foundation of understanding of machine learning algorithms.This is a highly demanding course (lots of lectures & coursework) but it's not super hard if you start things early, and it really", 
                "really helps.A lot of well-explained theory. Tutorials were also very useful. Labs and assignments were broken down into small steps which", 
                "Abstractions between the topics.", 
                "Getting an overview on the topic.", 
                "useful.Great assignments and labs; very well put together, interesting topics and with a nice joke here and there. The video lectures were", 
                "Hard to say.", 
                "I could do the whole thing from home. That's pretty cool.", 
                "I liked having the videos of the lectures. It enabled me to go through some things a few times.", 
                "found the course interesting.I really liked how they introduced programming in Python and how to compute machine learning concepts in it step by step. I also", 
                "It gave us an overview of Machine Learning", 
                "It's well organised and the coursework was very clear", 
                "Labs and assignments are helpful for understanding key concepts.", 
                "Learning a lot of different ML techniques to have a general overview", 
                "Methods in machine learning.", 
                "Practical experience on ML in labs and coursework projects.", 
                "The Labs!!! Also Piazza, the videos, the great commitment of the instructors to answer questions online", 
                "The amount of hands-on experience. It was really 'applied'. Even more than 50% of the credits could be about coursework :-)", 
                "The assignments and labs were practical and well-structured.", 
                "models work with their implementations.The assignments were a great way of learning the practice of the content and forcing a reconciliation of the theory of how the", 
                "The combination of lectures and labs are perfect.", 
                "The courseworks are very good and Piazza forum is very active.", 
                "understand the different components/what was used for what reason. The labs as well as the assignments were well organised andThe courseworks were wonderful for actually getting some practice and implementing the concepts, I really felt like I was able to", 
                "The effort that went into making labs and assignments fun.", 
                "in the subject and the lecturers\u2019 enthusiasm was contagious.The inverted classroom style worked really well for me. The lectures were clear and enjoyable. This course stimulated my interest", 
                "The labs and the coursework", 
                "The labs were helpful when it came to preparing for the assignments.", 
                "The online video of Victor", 
                "helpful for learning.The online videos were clear and helpful. The lab assignments were useful to my learning. The course assignments were", 
                "The quality of the assignments and the recorded lectures.", 
                "real life. Also, the fact that the lectures were recorded helped to \"understand\" the topics covered in the course.The technology (python) that they selected for the course and the practical part was good and relevant for preparing students to", 
                "The tutorials & labs were most valuable in giving a clearer, more in-depth understanding & familiarity with the material.", 
                "Tutorials, labs, videos.The use of notebooks for the labs was really helpful in cementing my understanding of the material in a really efficient way", 
                "contents on the videos. Maybe transfer to physical lecture would be better.The videos are a little bit too much but it might because it is a 20-credit course. And sometimes it is not easy to understand the", 
                "this course.- have a book - have lecture notes Personally I do not learn best from watching lectures, I wish there were more ways to study", 
                "Briefly going through the key concepts for each topic in lectures would still be helpful. 2. Providing some written1.", 
                "can't be watched at double speed. Additionally, in the life of a busy uni student, making time to watch a video lecture is always goingDefinitely abandon the reverse lecture format. The recorded lectures are an absolute bore to sit through, especially because they", 
                "Feedback to assignments structured in separate documents.", 
                "learning -- not even implementing the algorithms ourselves! I can do this myself in an afternoon by reading the API documentation --Focus more on the theory and background. Currently most of the course is focused on how to use sklearn/python for machine", 
                "I am not yet convinced by this inverted learning approach. Is it better than the traditional approach of teaching?", 
                "had more to do with the exam questions. The assignments were VERY difficult. I don't think it's fair for people who have no pythonI don't love the flipped classroom style, especially because many class meetings were cancelled. I wish the tutorial assignments", 
                "I would have liked the answers to the tutorials being posted online.", 
                "techniques versus simply understanding how they work and why.I would have liked to have more clarity on what level of detail we need to know for the exam in terms of deriving certain", 
                "It would be good if the video lectures/slides could be published a bit earlier.", 
                "helpful.Lectures had been a bit unhelpful. I think giving a challenge to the students in an inverted style classroom is appropriate and", 
                "some exercises to work on your own to learn how to use each concept before diving into the dense and heavy mathematicalMake the lectures more interactive (see andrew ng course on coursera), and allow them to be more practical first by giving you", 
                "overall results were good, poor marks on some questions suggest my answer was incomplete and I still don't know what to do if IMore detailed feedback on the assignments. I'm still not sure what was expected as an answer to some questions. Although my", 
                "More problems for exam preparation would be useful. Also, having tutorials before labs would be better.", 
                "More tutorials or longer tutorial sessions. The 1h slots were really too short even for the provided tutorial problem sheets.", 
                "Personally, I don't like to watch online lectures.", 
                "Please teach us in class meetings not only online.", 
                "the slides using their hand or a laser pointer which is not visible on the videos and it's difficult to keep track of what the lecturer isRe-record the videos. Lecture recordings are not suitable as a primary learning source. Lecturers would often refer to things on", 
                "very dry and not offering any extra explanations that was not already on the slides.Record the lectures in a more engaging manner and explain more than what is written on the slides. I found some of the lectures", 
                "Sometimes the assignments could have been more challenging but less time consuming.", 
                "assignments, can't let you focus on the theoretical section of the course. It should be 60% coursework and 40 examination.The assignments were so large that I did not have enough time for watching and reviewing in detail all the videos. Having large", 
                "rather than giving the correct answer).The courseworks are very long and are marked very strictly (maximum marks are only given if you go beyond what is asked,", 
                "The different exercises are too dependent on each other!", 
                "parts of learning is finding out what you did wrong.The feedback on assignments was generally poor. I understand that there are many people taking this course, but one of the core", 
                "incredibly awkward to be asking questions. The online lectures were clear if a bit slow.The inverted classroom format was not a great way of running the course. In particular, in a 200 person lecture theatre it feels", 
                "The lecturer should be clearer and louder in his recordings.", 
                "keep the pace in the videos throughout the semester.The lectures need to be restructured. The physical lectures are not helpful and the video content is too much. It is very hard to", 
                "The lectures not just to be class meetings but lectures too", 
                "More practice problems like those in the tutorial would have been very useful.The quizzes online were often very confusing and did not especially increase my understanding.", 
                "The video lecture format is frustrating. I'd like to see an actual lectures in addition to the current course meetings.", 
                "hope that the lecturer could teach more concentrated", 
                "The timetable is too flexible and sometimes we don't know whether there is a class meeting or not.", 
                "were all male). As for the forum, I found it great how many students and instructors were extremely willing to help, and gave greatGreat work of James Owers!! I would have liked to see a few female tutors (I went to a few different tutorials and the tutors I met", 
                "introductory course.I sometimes felt the explanations of the tutor too complicated. Sometimes the maths could have been kept easier for this", 
                "It was good to go through the problems manually to understand how the algorithms worked and their nuances.", 
                "James Owers is awesome.", 
                "Lab sessions were not especially helpful.", 
                "Loved the labs.", 
                "More tutorials.", 
                "find an answer. As a result tutorials did pretty much nothing to actually help my understanding of the course concepts.My tutor would simply go over the answers or the math behind them without explaining any of the course concepts that help one", 
                "upcoming questions. He was well organised!My tutor, George, really helped me understand the concepts! He is good in explaining and did take the time to answer all", 
                "The labs are well-organised and useful.", 
                "The labs were not well organised. The lab tutors were not able to advise and help us effectively.", 
                "The tutor is very helpful!", 
                "The tutor is very patient and gentle. Love you very much.", 
                "literally write scrawls (then they say, ohh this is too easy) which makes impossible to take notes about the exercises in the problemThe worst part of the course, at least for me were the tutorials. The tutors, are bad organized and unclear in the whiteboard, they", 
                "arriving until they hit a snag, and then get help for them at the lab sessions.There wasn't enough time to do the labs in the lab sessions. Realistically I think it's better to tell people to attempt the labs before", 
                "Too little connection between the theoretical video lectures, practical assignments, and tutorial materials.", 
                "Tutor was not very engaging", 
                "fixed time to do the labs.Tutorials were fine but far too easy and too few. Labs are not useful at all -- the \"lab tutors\" don't present anything, it is more like a", 
                "often spent too much time on things she herself was probably confused by, and sometimes she didn't understand the questions fromWith such little time (short tutorial sessions), the tutors should really prioritise and be good at explaining stuff swiftly. Our tutor", 
                "Please change the questions to simpler one"
            ]
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR11079", 
            "Name": "Music Informatics", 
            "Level": "11", 
            "Acronym": "MI", 
            "Average": "66.36", 
            "Area": "Misc.", 
            "Summary": "The course covers the principal theories, techniques and algorithms developed recently to give computational accounts of how musical phenomena can be analysed, generated and mediated with machine support or collaboration. The emphasis is on concepts, rather than tools, but the ideas have wide applicability. The state of the art is presented in selected areas.", 
            "Delivery": "S2", 
            "Credits": "10", 
            "Course Description": "Background\n\n* Physics of music vs musical perception,\n\n* Music Representation \n\n\n\nBasic parameters\n\n\n\nBasic Local Analysis Algorithms\n\n* Beat tracking; score following\n\n* Tonal centre (Longuet-Higgins, Bolzano) \n\n\n\nMusical Grammars\n\n    \n\nMusical Similarity\n\n    \n\nInformation Theory, Statistical methods\n\n* Characterising musical style\n\n* Music generated by statistical constraints (Xenakis) \n\n\n\nMachine Composition in a Given Style\n\n    \n\nMusical Agents and Interaction\n\n\n\nRelevant QAA Computing Curriculum Sections: Not yet available", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11079.htm", 
            "Coordinator": "Alan Smaill", 
            "Year": "5", 
            "Coursework/Exam": "30/70", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR11163", 
            "Name": "Message-passing Programming", 
            "Level": "11", 
            "Acronym": "EPCC/10", 
            "Average": "Not Available", 
            "Area": "Parallel Programming", 
            "Summary": "Parallel programming by definition involves co-operation between processors to solve a common problem. The programmer has to define the tasks that will be executed by the processors, and also how these tasks exchange data and synchronise with each other.\n\n\n\nIn the message-passing model the tasks are separate processes that communicate by explicitly sending each other messages. All parallel operations are performed via calls to some message-passing interface that is entirely responsible for interfacing with the physical communication network.\n\n\n\nThis course uses the de facto standard for message passing, the Message Passing Interface (MPI), which is a library callable from C, C++ or Fortran.  Parallel programs written using MPI can run on almost any system from a multicore laptop up to the largest supercomputers in the world.", 
            "Delivery": "S1", 
            "Credits": "10", 
            "Course Description": "The course will cover the following topics:\n\n\n\n- The message-passing model\n\n- Message-passing parallelisation of a regular domain code\n\n- MPI terminology\n\n- The anatomy of send and receive (synchronous and asynchronous)\n\n- Point-to-point message-passing examples\n\n- Non-blocking operations\n\n- Collectives\n\n- Communicator management \n\n- Derived datatypes (focusing mainly on array subsections)\n\n- Practicalities / Hints and Tips", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11163.htm", 
            "Coordinator": "not allocated", 
            "Year": "5", 
            "Coursework/Exam": "100/0", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR11097", 
            "Name": "Masters Dissertation (Design Informatics)", 
            "Level": "11", 
            "Acronym": "MDI", 
            "Average": "64.22", 
            "Area": "Misc.", 
            "Summary": "The goal of this course is to make something new, that makes work, care or play better, by designing with data. The dissertation reports an in depth investigation of a significant problem in Design Informatics, according to sound scientific, engineering and design principles.", 
            "Delivery": "FLEX", 
            "Credits": "60", 
            "Course Description": "Project dependent.\n\n\n\n\n\nThis is a major piece of full-time independent work which occupies the final months of the MSc course. If taken as part of a one-year masters, it accounts for all of a student's time following their course exams. If taken as part of a two-year masters, it accounts for 1/3 of student time during Semester 1 of Year 2, and 2/3 of student time in Semester 2 of Year 2. It allows students to demonstrate their ability to organise and carry out a substantial investigation into a problem in Design Informatics, according to sound scientific, engineering and design principles. The project involves both the application of skills learnt in the past and the acquisition of new skills. The project often involves the construction of an artefact, whether software, hardware, a robotic device, some other artefact incorporating computation, or some combination of these.\n\n\n\nThe types of activity involved in each project vary but include most of the following:\n\n- Researching the literature and gathering background information.\n\n- Analysing requirements, comparing alternatives and specifying a solution.\n\n- Analysing and exploiting relevant theory in novel ways.\n\n- Designing and implementing the solution.\n\n- Experimenting with and evaluating the solution.\n\n- Exploring the solution as part of a product or service.\n\n- Discussing existing results and presenting new research.\n\n- Developing written and oral presentation skills.\n\n\n\nThe project is conducted individually by the student under the supervision of a member of teaching staff.  Students are formed into groups for the purpose of Review Meetings.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11097.htm", 
            "Coordinator": "Maria Wolters", 
            "Year": "5", 
            "Coursework/Exam": "100/0", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "December", 
            "Code": "INFR11130", 
            "Name": "Machine Learning and Pattern Recognition", 
            "Level": "11", 
            "Acronym": "MLPR", 
            "Average": "59.44", 
            "Area": "Machine Learning", 
            "Summary": "Machine learning is a field devoted to developing algorithms that adapt their behaviour to data, providing useful representations of the data and/or predictions. This course covers some fundamental theoretical concepts in machine learning, and common patterns for implementing methods in practice. The intended audience are those wanting the background required to begin research and development of machine learning methods.\n\n\n\nThis is an advanced course. Students should not choose this class without the required background (see \"Other Requirements\" box); students without this background are strongly advised to take a more practical-based course, such as Introduction to Applied Machine Learning (INFR10063).\n\n\n\nThis 20 credit course replaces Machine Learning & Pattern Recognition (Level 11) (INFR11073) - 10 credit course.", 
            "Delivery": "S1", 
            "Credits": "20", 
            "Course Description": "The precise set of methods and algorithms used to illustrate and explore the main concepts will change slightly from year to year. However, the main topic headings are expected to be fairly stable.\n\n\n\n- Classification and Regression:\n\n       Linear Regression, logistic regression, Bayes classifiers\n\n- Expanded feature representations: \n\n    Basis functions, neural networks, kernel methods\n\n- Generalization, regularization and inference: \n\n    Penalized cost functions, Bayesian prediction, learning theory\n\n- Model selection, pruning and combination: \n\n    Cross-validation, Bayesian methods, sparsifying regularizers, ensemble methods.\n\n- Representation and metric learning: \n\n    dimensionality reduction, clustering, feature learning\n\n\n\nTo support these topics we will also cover:\n\n- Optimization and Inference algorithms: \n\n    Stochastic gradient descent, simple Monte Carlo ideas, and more specialized methods as required.\n\n\n\n Practical issues: \n\n- Formulating problems as machine learning, adapting methods to fit problems. \n\n- Numerical and programming issues important for machine learning.\n\n- Ethical issues, such as responsible application of methods and privacy concerns.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11130.htm", 
            "Coordinator": "Iain Murray", 
            "Year": "4", 
            "Coursework/Exam": "20/80", 
            "Feedback": [
                "A bit of pre-reading over the summer will go a long way (depending on your background)", 
                "Advice would be to give the programming exercises in the notes a go early on especially if rusty like myself.", 
                "Anyone who want to get detailed idea about ML. The one has basic math background.", 
                "Background information worth reading carefully", 
                "Brush up on your mathematics background.", 
                "requisites, you'll likely need to work some aspect of your maths to get the most out of the course.Do it! But be prepared to work on your maths above and beyond the lecture material. Even if you have most of the pre-", 
                "Do it, it\u2019s amazing. Be ready to work a lot", 
                "of exams and an MLP deadline 8 days before the first one! Read the textbooks. Any and all exposure to the material helps, asDon't just try to keep up with the material, start actively studying it in case you have 2 20 credit course exams in the first 4 days", 
                "Have some background knowledge before move in and prepare your math to a suitable level.", 
                "tough at times but it's really interesting and rewarding and Iain is one of the best lecturers I've had at Edinburgh uni. Saying that,I'd encourage anyone interested in the theoretical underpinnings of machine learning to take this course, the material can be", 
                "maths in MLPR is daunting, or if you're not very interested in the underlying mathematics and just want to focus on how to applyI've been doing the MSc in Artificial Intelligence part time over 2 years, so I've been able to take IAML, MLP and MLPR; if the", 
                "It has high demand of mathematics, but really worth taking for those who want to do research or work in machine learning area.", 
                "It is a very interesting course with quite a lot of material covered.", 
                "recommend it if you're prepared to put the work in. Also, don't make the same mistakes I did: make the most of the huge range ofIt is difficult (as mentioned explicitly in the online course description on DPRS) but very interesting and I would wholeheartedly", 
                "tutorials for this ahead of time - don't stop! I did and definitely regret it later so I would recommend keeping a few hours a week toIt's an intense course but worthwhile. In the middle of term things get crazy with all subjects and it's very easy to stop doing the", 
                "time, and this is pretty important to understanding some of the material.It's quite good but be prepared for the fact that Iain Murray really does expect you to go through worked examples in your own", 
                "necessary for the assignments later.It's very important to understand the material of the first three weeks well and try the coding bits in the notes. It will be", 
                "Keep reading and do exercises in the notes to ensure your understanding", 
                "Lots of material. Learn it as you go along.", 
                "MLPR is a hard course and requires high level of math and coding.", 
                "material too.Make sure to get caught up with maths before the course starts. It is extremely difficult to learn all the maths while learning the", 
                "Only take the course if you have a really strong math background", 
                "Work step by step instead of learning all things before exam.", 
                "enough to be able to cope with the course.Work through the statistic/ probability script in the first week. It provides a good background. For me as physicist this was", 
                "preview the class note before each class", 
                "To read and review lectures after them in order that you can follow the topics.", 
                "study linear algebra and probability before the course starts", 
                "the topics.Challenging questions and exercises in the notes. Well-designed assignments and tutorial, they were made for really understand", 
                "Deeply delving in to machine learning with good use of maths, to explain complicated ideas.", 
                "Detailed mathematical approaches to ML", 
                "unfortunately I am not so used to the forum.Each section is well organized. The course will go well if combining both slides online and lectures, as well as the forum. But", 
                "Everything. Best course I have attended in my life till date.", 
                "Excellent lecture notes and very good teaching.", 
                "Excellent material, demands a lot of thought. Lectures were very interesting.", 
                "Go through basic ideas and concepts of ML. Hand-write notes make the course comprehensive.", 
                "Good explanations. Good course material. Interesting content.", 
                "Hypothesis forum, very interesting topics covered, recorded lectures, guest lecture with real-life examples.Great explanations from the lecturer, great lecture notes with plenty of useful material, the lecturer is very responsive on", 
                "How knowledgeable the teacher is and how much influence he had on me.", 
                "so on and so on. This helps you get a perspective of where each of the machine learning models covered in the course are in, andHow there a story along the course, connecting what one learns from a simple model to the following more complex model and", 
                "How to use notes to understand questions.", 
                "Lecture contents are very intelligible and lead me to study each of the lecture aims.", 
                "Tutorials extend my thoughts of this subject, hard but very helpful.", 
                "Lecturer, lecture style, notes on the website", 
                "references and all information required.Lectures were perfectly organised, explanation was detailed and comprehensive. Notes are digging deep into details, provide", 
                "Looking into the details of math and reasoning based on the maths made this course distinguishable, and I love it.", 
                "Lot of material and feedback. Very well presented introduction to a complex subject.", 
                "Mathematical skills", 
                "Professor's insight and extra efforts", 
                "intermediate to high levels.The assignments are very useful to understand each contents in this lecture, whose questions are set properly, ranging from", 
                "amount of depth, all teaching was of a very high quality and there were great resources provided. Overall, a very enjoyable courseThe careful balance of the theoretical and practical aspects of Machine Learning. A broad range of topics was covered in a fair", 
                "The course content was really concise and helped in understanding the topics on a basic level.", 
                "The course is extremely good. Everything about it is great. 10/10.", 
                "which is great.The course is well structured. The contents are involved and concerns a lot about the theoretical and mathematical aspects of ml,", 
                "example to work on real data.The explanations beyond the pure math and theory and the real world examples in the lectures. The assignment was a nice", 
                "The lectures are excellent! The lecturer is very engaging and he's very dedicated to the course and the students.", 
                "with a solid theoretical background.The material was challenging and covered a wide range of Machine Learning topics, setting us up for a variety of other courses", 
                "The mathematical background in machine learning and computer science.", 
                "The professor. He was simply the best.", 
                "The teaching style(writing on the paper in the lecture)", 
                "The workshops", 
                "Very wide range of content.", 
                "thought the tutorials were well constructed and informative.Getting practice with fundamental machine learning concepts along with concise and informative notes and lectures. I especially", 
                "so early in December. It would be inaccurate not to mention that the late (and very large for 25%) MLP deadline definitely impactedAlthough I realise that no one has control over when in the exam weeks the course is examined, it is regrettable that the exam is", 
                "Make sure that Iain Murray teaches it forever.", 
                "Make the notation of the notes and the one used in the lectures more similar.", 
                "Separate tutorials by levels.", 
                "Give grades aside from the feedback on the first mock assignment so we can get an idea of that aspect as well.", 
                "especially the statistics and probability part.More code for visualisation and trying things on your own. Often I felt unsure whether I had properly understood the ideas,", 
                "More communication between the lecturer and students (I know it is hard because there are so many students...)", 
                "seen more detailed notesPerhaps the notes, especially for the topics covered during the last 3 weeks of the course are a bit hard to follow. I'd like to have", 
                "Practice more", 
                "of the learning experience) and putting them down. It was done in jokes but still it made me really upset sometimes.Sometimes I felt that the lecturer had passive-aggressive attitude -- he would comment on students doing silly things (normal part", 
                "tutorials are mandatory it would be good to improve the learning outcome for the tutorials. For me it felt either like a superficial rushThe 1 hour tutorials are quite short in time for the exercises. More time could be useful to discuss things more in depth. Since the", 
                "The course is great as it is.", 
                "keep up with the math's of the last weeks. Because of this a good improvement would be to either reduce the pace of the course aThe past of the course is good. However, given the intense work load of the other courses it is sometimes near impossible to", 
                "answer.A tutor that belongs to my tutorial group is not helpful because the tutor does not explain a question that all of the groups cannot", 
                "wasn't too alone in that. Once I understood what was being asked I fared much better, so perhaps just something to consider. MyAs a general point, I often found that I didn't understand the real question being asked in tutorial questions etc, and it seemed I", 
                "Conor did a great job.", 
                "George Papamakarios was an excellent tutor. These sessions were my favourite time of the week.", 
                "challenging but George's explanations were clear.George Papamakarios was excellent and I appreciate that he made sure everyone was following. I thought the workshops were", 
                "Helped me a lot.", 
                "Matt (Rounds) was a really good tutor.", 
                "More guidance", 
                "More specific questions involving calculations.", 
                "tutorial. She even organised an extra session on a Saturday to further explain topics.My tutor Tania Bakhos, was awesome, she was willing to answer any questions and provided really good explanations for every", 
                "hand, was less helpful, for example he did not give insights into how we could think about the subject better.My tutor, Conor Durkan, was very knowledgeable, and his explanations were very clear. The tutorial of Carl Allen, on the other", 
                "My tutors George Papamakarios, was extremely well prepared and helpful to understand the tutorials problem", 
                "Nice tutor, inspiring instructions on tutorial questions.", 
                "questions in the tutorial and made the tutor to talk about these issues for a very long time, which makes the tutorial extremelySometimes there are students who clearly haven\u2019t met the prerequisites of the course. These students sometimes ask useless", 
                "Helpful and approachable"
            ]
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR11132", 
            "Name": "Machine Learning Practical", 
            "Level": "11", 
            "Acronym": "MLP", 
            "Average": "74.14", 
            "Area": "Machine Learning", 
            "Summary": "This course is focused on the implementation and evaluation of machine learning systems, and is lab-based. Students who do this course will obtain experience in the design, implementation, training, and evaluation of machine learning systems.\n\nSemester one comprises lectures, labs, and individual coursework.  Semester two is based around small group projects, and also includes tutorials and guest lectures.\n\n\n\nThis 20 credit course replaces INFR11119 Machine Learning Practical (10 credits).\n\n\n\nNote: this course is not a stand-alone introduction to machine learning. Please see Other Requirements for details.", 
            "Delivery": "YR", 
            "Credits": "20", 
            "Course Description": "The course covers practical aspects of machine learning, and will focus on practical and experimental issues in deep learning and neural networks. Topics that are covered include:\n\n\n\n* Feed-forward network architectures\n\n* Optimisation and learning rules \n\n* Regularisation and normalisation\n\n* Neural networks for classification\n\n* Autoencoders\n\n* Convolutional Neural Networks\n\n* Recurrent Neural Networks\n\n\n\nMLP is coursework-based, with lectures to support the additional material required to carry out the practical. Students who complete this course will have experience in the design, implementation, training, and evaluation of machine learning systems.\n\n\n\nMLP is a two-semester course.  During semester 1 the course will focus on developing a deep learning framework based on experiments using the task of classification of handwritten digits using the well-known MNIST dataset. The course uses a Python software framework, and a series of Jupyter notebooks. There is a series of ten weekly lectures in semester 1 to provide the required theoretical support to the practical work.\n\n\n\nSemester 2 will be based on small group projects, with a focus on using deep neural networks within the context of a miniproject, using an open source toolkit such as TensorFlow or PyTorch. Lectures in semester 2 will support the coursework, and also provide insights to the current state of the art in this very fast moving area.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11132.htm", 
            "Coordinator": "Pavlos Andreadis", 
            "Year": "4", 
            "Coursework/Exam": "100/0", 
            "Feedback": [
                "Attend the lectures - the slides are great but the lecturer gives very good supplementary explanations.", 
                "wisely, you can spend an infinite amount of time on the courseworks if you were to want to, but that's not necessary. It's notDefinitely start early on all the courseworks, they ALL take longer than you may initially estimate. Also plan your time", 
                "code issues.I had some previous experience with TF and keras that helped me to focus in the actual experiments and not in solving", 
                "If you are in the machine learning path, you definitely have to take this class!", 
                "Only take this course if you're ready for some really really tough learning experience.", 
                "potato speed when training neural nets.Pick something nice for the group project and you'll have a good time. Also install conda with Intel's MKL libraries for non-", 
                "plenty of time to run the experiments.Start work on the assignments as early as possible. It will take a while to get your code working, and then you still need", 
                "Start working on assignments as soon as possible. Master python before taking the course, invest in a good GPU.", 
                "This is more like a 30 unit course (15 units per semester) - it is a lot of work but worth it in the end I think.", 
                "To make sure they really read the description, and maybe match all the criteria, because is a very demanding course.", 
                "Useful course.", 
                "Very good course but take it only if you're ready to work hard.", 
                "be prepared for a very different 2nd semester with groupwork", 
                "know how to code", 
                "Fix GPU clusters... seriously. We didn't even try to use them.Announce that the second semester is a group project earlier. It was tough finding people with similar interests in less than a week.", 
                "assignment 4, which is worth almost twice as much, but I found that they required almost the same amount of work. I would makeAssignments 3 and 4's deadlines were too close in time, the goal of assignment 3 was to prepare a baseline a draw a plan for", 
                "Lecturer speaks too fast, with too many subjects and contents in just 50 mins. Every time Professor asks if anyone has question,Could be split to two course, one for computer vision, the other one for nlp. Which help student go deeper.", 
                "we were just given a few points and we were supposed to find, and teach ourselves everything we were supposed to know. BecauseHaving more organised lectures that give more information about the material would be a good thing to have. During the lectures", 
                "I heard a lot of complaints about it being too hard for some. But I thought it was ok, kind of slow in the beginning though.", 
                "Maybe give indications/tutorial about how to organise experiments. I feel like I eventually learned it at the very end of the course, andMNIST is not a very interesting dataset for cw1 because everything but sigmoid has similar performance.", 
                "More reliable computing power, it's been annoying to have to delay working on coursework because the cluster has been down.", 
                "Probably unavoidable but the course was very large.", 
                "I was a bit disappointed that there are no more lectures and that all we have to do is run experiments in high-level libraries such asSemester 2", 
                "The delivery of lectures could be more interesting", 
                "The lectures in semester 1 sometimes felt rushed.", 
                "have 40 in its present form. Perhaps remove one coursework or remove some aspects... I burnt my computer from runningThis course hurt so much, as it takes a lot of time to run experiments and write the report. It should not have 20 credits, it should", 
                "the number of MSc students it accepts, there are already too many this year and it affects the quality of all of our courses!!This isn't the fault of the course per se, but it did not scale well with the number of students that took it. Informatics needs to limit", 
                "the coursework partWould you please improve the GPU cluster further? Really thanks for your effort so far.", 
                "Very tutor dependent but we had a good one.Didn't make use of those except group meetings in the second semester.", 
                "Good man", 
                "Haven't used it.", 
                "I personally didn't benefit from the first semester labs, but the second semester office hours were helpful.", 
                "notebooks before the labs and come along to discuss/ compare answers. Tutor groups in semester 2 gave us a chance to see whatLab sessions in semester 1 were not very helpful. In future I think it would be better to suggest students work through the", 
                "Labs in semester 1 are pretty good but tutorials in semester 2 were rarely useful", 
                "understanding more than when we went there. I did think the format of spending the majority of the tutorial listening to other groupsSteve Renals was my tutor and he was a fantastic resource during our tutorials, and I always felt we left the tutorial", 
                "of stressed students.The tutors did an excellent job of answering as many questions as they could on Piazza and dealt very well with the large number", 
                "Tutorials could have been easily replaced by email communication, my tutor did not prepare the tutorials properly.", 
                "It just seemed irrelevant. I never attended a lab, only once. I wish I had skipped tutorials but I\u2019m on a visa"
            ]
        }, 
        {
            "Exam Diet": "December", 
            "Code": "INFR11174", 
            "Name": "Numerical Algorithms for High Performance Computing", 
            "Level": "11", 
            "Acronym": "EPCC/11", 
            "Average": "Not Available", 
            "Area": "Algorithms and Data Structures", 
            "Summary": "The development of High Performance Computing (HPC) systems has been largely driven by the requirements of Computational Scientists running large-scale numerical simulations such as global weather forecasting or studying new materials at the atomic scale. This course covers some of the basic numerical algorithms and computational patterns used in HPC and how they are implemented and used in practice, including the use of standard packages and libraries. Where appropriate, reference will be made to parallel implementations.\n\n\n\nAll these algorithms operate on real-valued variables, not integers, so it is important to understand the issues around storing and working with floating-point numbers, including the errors that this can introduce. This is an applied course and running the algorithms in practical situations is a key component.", 
            "Delivery": "S1", 
            "Credits": "10", 
            "Course Description": "The course will cover:\n\n- Computational science as the third methodology\n\n- Basic numerics, floating-point representation, errors and exceptions\n\n- Simple ordinary differential equations\n\n- N-body / particle methods\n\n- Dense linear algebra, algorithms and libraries\n\n- Partial differential equations and boundary value problems\n\n- Sparse linear algebra\n\n- Initial value problems and implicit methods\n\n- Spectral methods - Fast Fourier Transforms (FFTs) and applications\n\n- Monte Carlo methods", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11174.htm", 
            "Coordinator": "not allocated", 
            "Year": "5", 
            "Coursework/Exam": "0/100", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR11035", 
            "Name": "Neural Information Processing", 
            "Level": "11", 
            "Acronym": "NIP", 
            "Average": "68.00", 
            "Area": "Misc.", 
            "Summary": "This course builds one recent insights that in many cases the computation done by the nervous system can be described in machine learning terms and using information theory. This course focusses on the more mathematical models of the brain and sensory processing. The solutions found by the nervous system might transfer to engineering applications such as compression, parallel processing, and dealing with complex data.", 
            "Delivery": "S2", 
            "Credits": "10", 
            "Course Description": "*Neural coding: reverse correlation, higher order kernels, stimulus reconstruction. Application to the fly visual system.\n\n*Information theory as applied to neural coding: mutual information measures, whitening. Application to retinal and LGN coding.\n\n*Networks based on information-theoretic cost functions: Helmholtz machine, Linsker's info-max principle. Application to V1 coding.\n\n*Independent Component Analysis. Basics, variants of ICA, ICA as model for visual cortex.\n\n*Predictive Coding: Kalman filters. Application to cortical coding\n\n*Bayesian approaches: Stimulus estimation, probabilistic interpretation of populations codes.\n\n\n\nRelevant QAA Computing Curriculum Sections:  Simulation and Modelling, Artificial intelligence", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11035.htm", 
            "Coordinator": "Matthias Hennig", 
            "Year": "5", 
            "Coursework/Exam": "25/75", 
            "Feedback": [
                "Definitely take MLPR in the first semester as the information needed is directly from that course. NC is not necessary.", 
                "Engage with the maths and make sure you understand as you go along", 
                "Have one lecturer for the full course so that they can answer questions in full about the entire course.", 
                "Notes could be a bit more complete, but any gaps could usually be filled in by the literature so it wasn't too bad.", 
                "Offer tutorials/labs", 
                "No tutorials, workshops or labs for this course."
            ]
        }, 
        {
            "Exam Diet": "December", 
            "Code": "INFR11162", 
            "Name": "Neural Computation", 
            "Level": "11", 
            "Acronym": "NC", 
            "Average": "Not Available", 
            "Area": "Misc.", 
            "Summary": "**This course replaces Neural Computation (INFR11008)**\n\n\n\nThis module aims to examine:\n\n\n\nHow the brain computes and processes information from the outside world.\n\n\n\nHow the brain wires up and how it stores information.\n\n\n\nWe will study the brain at a fairly low level, so that we can make contact with neurophysiological data. We will show the necessary biological data and how it can be described in mathematical terms. We will present modelling methods applicable to various levels of organisation of the nervous system (e.g. single cells, networks of cells). We discuss models of particular brain subsystems.\n\n\n\nIn the practical session we use Matlab and NEURON to simulate the models (No familiarity with NEURON required, some self study of Matlab is beneficial.)", 
            "Delivery": "S1", 
            "Credits": "10", 
            "Course Description": "*Introduction and overview of the brain\n\n*The neuron\n\n*Biophysical and reduced models of neurons\n\n*Synapses\n\n*Computation and coding in the brain\n\n*Networks of neurons\n\n*Early and higher visual processing\n\n*Network-level modelling\n\n*Plasticity and learning\n\n\n\nRelevant QAA Computing Curriculum Sections: Simulation and Modelling, Artificial intelligence", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11162.htm", 
            "Coordinator": "Matthias Hennig", 
            "Year": "4", 
            "Coursework/Exam": "25/75", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR11108", 
            "Name": "Pervasive Parallelism", 
            "Level": "11", 
            "Acronym": "PERP", 
            "Average": "76.22", 
            "Area": "Misc.", 
            "Summary": "In this course students develop their six page MSc(R) project proposal, while engaging in a sequence of collaborative activities designed to broaden their awareness of the Pervasive Parallelism landscape, developing research critiquing and presentation skills, and building research relationships with other members of the CDT cohort. In the first phase, students will be paired and, working together, will review current research in both their own and their partner's research area. Partners will be allocated to span diverse areas. Pairs will present their findings and critique the reviewed work to the larger group of CDT students, with each student focusing on presentation of the partners material. In the second phase, students will be paired with a new partner. Each student will develop an individual six page document constituting the proposal for their emerging MSc(R) thesis. Once again, they will collaborate during this phase on presentation of the proposal with a fellow student, with each student ultimately giving the other's presentation to the group. Students will develop generic research skills that can be deployed in academic or industrial environments. Students will demonstrate their ability to develop interesting concepts and hypotheses into research proposals. The course is ultimately assessed on the content of the student's own individual research proposal.", 
            "Delivery": "S1", 
            "Credits": "20", 
            "Course Description": "Not entered", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11108.htm", 
            "Coordinator": "Murray Cole", 
            "Year": "5", 
            "Coursework/Exam": "100/0", 
            "Feedback": [
                "seriously the feedback they give you.Make sure you give critical, constructive feedback to your colleagues' presentations. Carefully read and take", 
                "Spend a good amount of time working on presentations with your assistant / author", 
                "excellentPresentations of each other's materials were really interesting to do, and the quantity and quality of anonymous feedback was", 
                "The fact that it was aimed to allocate time into developing our project.", 
                "Move back to presenting someone else's research proposal for the second presentations", 
                "No student comments"
            ]
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR11167", 
            "Name": "Performance Programming", 
            "Level": "11", 
            "Acronym": "EPCC/13", 
            "Average": "Not Available", 
            "Area": "Misc.", 
            "Summary": "Application performance is one of the key requirements for HPC applications. However this is one of the more difficult requirements to satisfy:\n\n\n\n- Issues effecting performance often vary between different hardware and software environments. This requires performance issues to be frequently re-visited as the hardware and software environment changes.\n\n- Performance programming requires detailed knowledge of the underlying environment\n\n- The design decisions necessary to achieve good performance are often in conflict with other desirable properties of the program.\n\n\n\nAfter taking this course students should have a good practical understanding of the general issues and methodologies associated with designing building and refactoring codes to meet performance requirements. In addition they will have an overview of a number of subjects that are important in the understanding of performance on current systems.", 
            "Delivery": "S2", 
            "Credits": "10", 
            "Course Description": "The course will cover the following topics:\n\n- Overview of performance programming. Methodology, the optimisation cycle.\n\n- Designing for performance. Encapsulation as an aid to performance tuning.\n\n- Tools for performance programming. Profilers and code instrumentation.\n\n- Compilers and compiler optimisation.\n\n- Memory hierarchies, Memory structures and associated optimisations.\n\n- Performance tuning for shared memory.\n\n- Floating point performance. Pipelines, SIMD, vectorisation.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11167.htm", 
            "Coordinator": "not allocated", 
            "Year": "5", 
            "Coursework/Exam": "100/0", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "December", 
            "Code": "INFR11082", 
            "Name": "Performance Modelling (Level 11)", 
            "Level": "11", 
            "Acronym": "PM", 
            "Average": "69.25", 
            "Area": "Misc.", 
            "Summary": "This course teaches various aspects of computer-aided modelling for performance evaluation of (stochastic) dynamic systems. The main focus is on stochastic modelling of computer systems and communication networks to assess performance characteristics such as throughput, response time etc.; however other dynamic systems such as manufacturing systems may also be considered. The central concept of the course will be that a model is as an abstract representation of a system which can be used as a tool to derive information about dynamic behaviour of the system. The more detail we invest in the model, the more sophisticated the information we can extract from it. As the course progresses the model will become increasingly detailed; the corresponding solution techniques will similarly become more complex, relying on increasing levels of computer assistance.", 
            "Delivery": "S1", 
            "Credits": "10", 
            "Course Description": "*Modelling and performance evaluation: models as tools; equilibrium and transient behaviour; analytic vs. algorithmic models. Revision of basic probability concepts.\n\n*Making use of models: deriving performance measures from an equilibrium distribution; choosing the parameters for a model; measurement and workload modelling; experimentation.\n\n*Representing systems directly as analytic models: operational laws such as Little's Law, simple queues and Markov processes; solving equations to find equilibrium behaviour.\n\n* Representing systems as algorithmic models: process-oriented and event-oriented simulation, variance reduction and stopping conditions.\n\n*High-level modelling languages: the stochastic process algebra PEPA, stochastic Petri nets and networks of queues.\n\n\n\n\n\nRelevant QAA Computing Curriculum Sections:  Simulation and Modelling", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11082.htm", 
            "Coordinator": "Jane Hillston", 
            "Year": "4", 
            "Coursework/Exam": "25/75", 
            "Feedback": [
                "Do watch the videos.", 
                "Introduction to modelling systems and evaluate their performance. Good course for this high-level reasoning and formalism.", 
                "Coursework and classwork are engaging, flipped classroom model works really well and you feel really engaged with theJust do it!", 
                "Prepare the material before the lectures and work slowly on the courseworks.", 
                "A lot of hands on problem solving with real modelling tools.", 
                "Expanded my knowledge of models and approaxed me to the field of performance modelling.", 
                "Video lectures and organization was very good", 
                "practice.A discussion board (e.g. Piazza) would be valuable for coursework questions, as Learn discussion boards are not used much in", 
                "new to the students, which made me feel like wasting my time watching the pre-recorded lectures.First 20 mins of the inverted class sessions always felt like noninverted class. The recap went through a lot of material as if it was", 
                "before the coursework.Maybe some sort of tutorial where we have to solve some problems with PIPE and the PEPA tool and we get feedback of them", 
                "None!", 
                "No tutorials, workshops or labs for this course."
            ]
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR11023", 
            "Name": "Parallel Programming Languages and Systems", 
            "Level": "11", 
            "Acronym": "PPLS", 
            "Average": "67.84", 
            "Area": "Parallel Programming", 
            "Summary": "The module familiarises students with the issues involved in designing, implementing and applying parallel programming systems. Initial motivation will be provided by consideration of a number of typical high performance applications and parallel architectures. This will highlight the role of parallel software systems as a means of bridging the gap between these and allow abstraction of the issues which must be addressed by any such system (partitioning, communication, agglomeration, scheduling). It will explore the ways in which these challenges have been addressed by a range of systems, including both de facto standards and more adventurous research projects.", 
            "Delivery": "S2", 
            "Credits": "10", 
            "Course Description": "* Introduction. Conceptual and architectural models of parallelism. Parallel algorithmic paradigms and simple parallel algorithms.Iterative, recursive pipeline and bag-of-task parallelism.\n\n* Generic issues in shared variable programming. Mutual exclusion, condition synchronization. Locks, barriers semaphores and monitors, use and implementation.\n\n* Realisation in Pthreads and Java.\n\n* Issues in message passing programming. Channels and synchronization models.\n\n* Realisation in MPI: communicators, simple and collective operations\n\n* Selected case studies highlighting alternative approaches, for example,\n\no Associative models. Linda, tuple space and related primitives.\n\no Threading Building Blocks.\n\n\n\nRelevant QAA Computing Curriculum Sections:  Concurrency and Parallelism", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11023.htm", 
            "Coordinator": "Murray Cole", 
            "Year": "4", 
            "Coursework/Exam": "20/80", 
            "Feedback": [
                "Good course.", 
                "Lectures give a good introduction, but expect to practise on your own if you want to truly master concurrent programming.", 
                "Make notes as there is little reading required and it is mostly lecture-oriented course.", 
                "Pairs well with other similar courses such as Parallel Architectures and Compiler Optimisations.", 
                "9am lectures are too early.", 
                "Make the content more difficult, cover more topics, make the coursework more challenging.", 
                "course.None - other than possibly making the coursework exercises longer or adding shorter tutorial style questions throughout the", 
                "None, it was one of the best courses I had.", 
                "exercises should've been suggested.Programming assignment were few and easy. While there might not have been capacity for marking more assignments, more", 
                "more interesting to have more practice.The assignment looked more like exercises than assignments (which is normal given their value) but it would have been", 
                "The courseworks could be more challenging.", 
                "No tutorials, workshops or labs for this course."
            ]
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR11168", 
            "Name": "Parallel Design Patterns", 
            "Level": "11", 
            "Acronym": "EPCC/12", 
            "Average": "Not Available", 
            "Area": "Parallel Programming", 
            "Summary": "If you were given a serial problem, conceptually, how would you go about splitting it up into many different parts that could run concurrently on the latest supercomputers?\n\n\n\nThe good news is that we don't need to reinvent the wheel. Instead there are many different approaches (called parallel patterns) that have been developed by the community and can be used in a variety of situations. These patterns apply equally well regardless of whether our problem is a computational one or data driven.\n\n\n\nUnderstanding and being able to apply these patterns also helps getting to grips with existing parallel codes and optimising poorly performing computation and data codes. Whilst the lectures take a top down approach, focusing on the patterns themselves, the practical tutorials give students the opportunity to explore the concepts by implementing pattern based solutions to problems using common HPC technologies.", 
            "Delivery": "S2", 
            "Credits": "10", 
            "Course Description": "Reusability is a key driver of this module, both reusability of knowledge (the patterns themselves) and parallel codes (via frameworks.) The parallel patterns (known as a pattern language) that we cover are split into two categories. This closest to the problem area (and most abstract) are parallel algorithm strategy patterns and include:\n\n- Task Parallelism\n\n- Recursive Splitting\n\n- Geometric Decomposition\n\n- Pipeline\n\n- Discrete Event\n\n- Actors\n\n\n\nThe other category of patterns is closer to the implementation and drives how the programmer should structure their code and data. These are implementation strategy patterns and include:\n\n- Master/Worker\n\n- Loop Parallelism\n\n- Fork/Join\n\n- Shared Data and Queues\n\n- Active Messaging\n\n\n\nPatterns are described on an abstract level and we will also discuss enhancements that can be made to improve performance/scalability but at the cost of code complexity. Implementations of these patterns are explored in depth in the tutorials.\n\nThis module also covers parallel frameworks and how we might write generic implementations of patterns which can be applied to numerous problems. Design principals of frameworks, along with popular HPC libraries will be explored so that students understand both from a design and also implementation perspective how to write generic parallel code. \n\n\n\nProgramming exercises use C and Fortran, with MPI and OpenMP.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11168.htm", 
            "Coordinator": "not allocated", 
            "Year": "5", 
            "Coursework/Exam": "100/0", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "December", 
            "Code": "INFR10022", 
            "Name": "Professional Issues", 
            "Level": "10", 
            "Acronym": "PI", 
            "Average": "68.09", 
            "Area": "Ethics", 
            "Summary": "There are many commercial, engineering and professional issues, complementary to the necessary scientific knowledge and technical skills, that impinge on the work of the computing professional. The Professional Issues course aims to provide a general awareness of these issues and to cover some of them in depth. The course will involve lectures from members of staff and visitors and directed reading.", 
            "Delivery": "S1", 
            "Credits": "10", 
            "Course Description": "* Personal Attributes: study skills, personal development, interpersonal skills; employers' views and expectations of graduates; study skills, writing skills, presentation skills.\n\n* The Computing Profession: professional bodies; codes of conduct and practice.\n\n* Social and ethical issues: security, privacy, software ownership\n\n* Legal Issues: legal and regulatory frameworks; software contracts and liability; intellectual property, copyright and patents; computer misuse, data protection; health and safety.\n\n* Commercial Issues: organisational structures; finance, accounting, audit; resource management.\n\n* Computing Projects: design, prototype and product; product development cycle; marketing and market research; project management and team working; change management. \n\n* This course consolidates complements and assesses the students appreciation and understanding of Professional Issues introduced across our curriculum.\n\n\n\nRelevant QAA Computing Curriculum Sections:  Professionalism", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr10022.htm", 
            "Coordinator": "Stuart Anderson", 
            "Year": "3", 
            "Coursework/Exam": "25/75", 
            "Feedback": [
                "what was focused on.Buy & read over the book as the exam is open-book, as well as read over the lecture slides to get a general idea of", 
                "(topics like ethics, discrimination, privacy, legal issues, management...), then maybe you'll find some of the resourcesDon't have big expectations. However, if you are already interested in the wider context that CS finds itself in", 
                "Don't.", 
                "Go to class even if you don't want to.", 
                "trying to find interesting things in them, and starting discussions. This course has a lot to offer but you have to take it. IfIt was not nearly as bad as I expected. Actually, it was quite good. I would really recommend going to the lectures,", 
                "Not a particularly interesting course but necessary.", 
                "future.The course is a lot more relevant than you think. So pay attention because the information will come handy in the", 
                "recorded and the slides sometimes are not comparable to hearing the actual presentation.The guest lectures are actually really interesting. I would advise a student to go there as these lectures are also not", 
                "spell...) but the guest lectures are refreshing and quite interesting.You will not want to go to all the lectures because some of them are quite useless (for example teaching you how to", 
                "actually use in life other than coding skills. Whilst it might not always be the most captivating, some of the content isYou'll probably hear a lot of complaints about this course, but it does include a lot of content which you might", 
                "Getting general knowledge about law, organisations, planning etc.", 
                "Guest Lecturers were very informative. The course is well organized.", 
                "Guest lectures. Open book exam. Review sessions were very useful.", 
                "Guest speakers are good.", 
                "Nothing (2 Counts)", 
                "Some of the guest lecturers' presentations were interesting.", 
                "Some of the guest lectures were good.", 
                "- What was the point of the lecture on PowerPoint? I found most of it quite controversial - it was arguing against things that are- The lectures on writing were useful, especially for non-native speaker, but I would condense it to just one lecture instead of two.", 
                "- Clean up the course webpage. It's too cluttered and it isn't clear what the objectives of each lecture are.- Clear goals and progression through the lectures.", 
                "A better structure of the breakdown of everything covered and example questions throughout the course.", 
                "Cut out some parts about writing and presentation in the beginning.", 
                "could try something more interesting in the class, e.g. a bias test.I understand it's a theoretical and inherently a bit uninteresting subject but the lectures sometimes were too boring. The lecturers", 
                "timely.It felt like a lot of things were not confirmed until very close to the date itself, and feedback from prior assignments was also not", 
                "presentation would make it more interesting.It is quite dry and I find a lot of it seems to be material that can be learned independently, so perhaps a group project or", 
                "Make it more interactive! Like flipped classroom model, maybe? Would make it so much more interesting!", 
                "as well). Please, please, please, those topics are important, do something to make the lectures appropriately interesting. Otherwise,Please, Stuart, just reading Mr Wadler's slides is ridiculous (not saying that the content of some of the slide decks is not ridiculous", 
                "Poor organisation, lectures were very slow and did not engage the class.", 
                "Remove it.", 
                "Shorter lectures. I think 4 hours a week for this course are too many.", 
                "take the course than the BCS accreditation. Also 4 contact hours for a 10 credit course is too much especially in year 3The aims are a bit vague, I would try to be more precise about the expected learning outcomes and maybe offer a better reason to", 
                "The content is not interesting, unclear and what is expected from us is not well defined.", 
                "The courseworks should be better explained.", 
                "presented (which I believe did more harm than good in educating people about diversity), as well as being slightly tone-deaf. GettingThe lectures were long and not presented in a dynamic manner; in particular, the lectures about discrimination/bias were poorly", 
                "Also I would rather have feedback from a lecturer on this than peer marking.The requirements of the video assignment were not made clear until very last minute.", 
                "have this for working on the other coursework. That said, I realise a lot was supposed to be peer-assessed, and there seems to haveWe haven't had any feedback for the formative assignment yet - this was due mid-October, and it would have been helpful to", 
                "No student comments."
            ]
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR11134", 
            "Name": "Probabilistic Modelling and Reasoning", 
            "Level": "11", 
            "Acronym": "PMR", 
            "Average": "64.24", 
            "Area": "Theory of Computation", 
            "Summary": "When dealing with real world data, we often need to deal with uncertainty. For example, short segments of a speech signal are ambiguous, and we need to take into account context in order to make sense of an utterance. Probability theory provides a rigorous method for representing and reasoning with uncertain knowledge. The course covers two main areas (i) the process of inference in probabilistic reasoning systems and (ii) learning probabilistic models from data. Its aim is to provide a firm grounding in probabilistic modelling and reasoning, and to give a basis which will allow students to go on to develop their interests in more specific areas, such as data-intensive linguistics, automatic speech recognition, probabilistic expert systems, statistical theories of vision etc.\n\n\n\nThis 20 credit course replaces INFR11050 Probabilistic Modelling and Reasoning - 10 credit version.", 
            "Delivery": "S2", 
            "Credits": "20", 
            "Course Description": "The course will cover the most important topics in probabilistic modelling and unsupervised learning, and provide a thorough basis for understanding other extensions developments and applications.\n\n\n\n*Introduction \n\n\n\n* Probability \n\n - events, discrete variables \n\n -  joint, conditional probability \n\n\n\n* Discrete belief networks, inference \n\n\n\n* Continuous distributions, graphical Gaussian models \n\n\n\n* Learning: Maximum Likelihood parameter estimation \n\n\n\n* Decision theory \n\n\n\n* Hidden variable models \n\n - mixture models and the EM algorithm \n\n - factor analysis\n\n - ICA, non-linear factor analysis\n\n \n\n* Dynamic hidden variable models \n\n - Hidden Markov models\n\n - Kalman filters (and extensions) \n\n\n\n* Undirected graphical models \n\n - Markov Random Fields \n\n - Boltzmann machines \n\n\n\n* Information theory \n\n - entropy, mutual information \n\n - source coding, Kullback-Leibler divergence \n\n\n\n* Approximate Inference: MCMC, Variational Methods\n\n\n\n* Bayesian methods for \n\n - Inference on parameters \n\n - Model comparison", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11134.htm", 
            "Coordinator": "Michael Gutmann", 
            "Year": "5", 
            "Coursework/Exam": "20/80", 
            "Feedback": [
                "Go to the tutorials", 
                "proofs, so you don't have to brilliant at manipulating equations, but you do have to enjoy building intuition for abstractIf you don't enjoy relatively abstract mathematics, you may want to stay clear. There aren't too many long derivations or hard", 
                "If you want to progress with ML beyond standard regression, then definitely worth taking course.", 
                "tutorials when possible, ask questions if you did not understand something.Start the assignment as soon as possible, take notes in class, use the additional material, buy Barber's book, attend the", 
                "Take it if you're interested in the mathematical part of machine learning. It's a helpful background for understanding papers.", 
                "The lecturer is very good, plus you can watch the recordings in speed 2.", 
                "probably you don't need to take this class.This is not a very practical course, if you are in the machine learning path but you are more interested in practical applications", 
                "Unless you have a strong statistics background, do not take this course, you will struggle. It's really a continuation of MLPR.", 
                "calculus and linear algebra -- the same level required for MLPR. That being said, this course is more rigorous and mathematicalYou don't need to know anything about graphical models before the course. All you need is some probability, statistics,", 
                "Often, examples were presented after the theory, which I think is the wrong way round.I would *start* every topic with a quick intuitive example that a student can hold in mind whilst making sense of the general theory.", 
                "done an excellent job. If you wanted to make the course even better for future editions, I think the main improvement would be toI fully appreciate that putting such a large course together for the first time must require a great amount of work, and you've really", 
                "I hadn't done mlpr so I found the speed at which we went through the final topics to be a bit quick.", 
                "It could be useful to focus more on how the theory introduced can be used in practical and real-world applications", 
                "spread over a longer period of time. More a general programme suggestion as there were many assignments due around the sameNot many, very happy overall with the course. Maybe there could have been two smaller assignments, allowing coursework to be", 
                "Spend less time on graphical models and more on the end of the course (factor analysis and after)", 
                "The Assignment was too long, took many more hours than expected.", 
                "would have liked if the course covered state of the art algorithms, like deep Bayesian networks. Lectures were too early in theThe assignment should be worth more towards the final mark (many of us dedicated too many hours for a 20% assignment). I", 
                "the lectures. During lectures, lecturer spent a lot of time (first 5-6 weeks) on graphs, while rushing through the more difficult part ofThe tutorials are definitely NOT representative of the lecture materials. There is too much in the tutorials which is barely covered in", 
                "Tutorial questions a bit too much? But the tutor is excellent.", 
                "algebra. The tutors themselves were very nice and competent.Longer tutorial sessions would be nice, and more challenging exercises. Some of them were good but the majority was just", 
                "More ppl need to turn up to tutorials.", 
                "Some tutors are not well prepared. However, my tutor () definitely helped me understand the more difficult things.", 
                "Some tutors just reviewed the concept of lecture and that didn't help. Some helped to conclude the lecture and that\u2019s great.", 
                "my tutor was excellent"
            ]
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR11150", 
            "Name": "Principles and Design of IoT Systems", 
            "Level": "11", 
            "Acronym": "PDIoT", 
            "Average": "65.50", 
            "Area": "Internet of Things", 
            "Summary": "The course 'Principles and Design of the Internet of Things Systems' (PDIoT) is concerned with the emerging discipline of digitising the physical world with wireless sensors,  analysing the sensor data to provide actionable information, and influencing the physical world via actuators, with an optional  human in the loop.  The course imparts foundational  concepts in IoT in a series of 10 lectures and students gain hands-on experience by realising their application idea as a demonstratable IoT system prototype.   The lectures will be illustrated with a number of IoT case studies undertaken by the lecturer over the past fifteen years.", 
            "Delivery": "S1", 
            "Credits": "20", 
            "Course Description": "The course aims to deliver a sound understanding of the design and analysis of Internet of Things through lectures and practice. The lectures provide the foundational knowledge in sensors and actuators, fusion of data from multiple sensors, sensor data calibration and topics in sensor data analytics: pre-processing and extraction of features in time-series sensor data, and classification methods using a selection of machine learning techniques. The students conduct a major piece of coursework working in pairs to develop an application using an IoT platform together with a mobile application. Students will experience all the stages in the design and implementation of a complex system - from its specification to the demonstration of a working prototype. They will be exposed to aspects of embedded systems programming, sensor data analytics using machine learning, data collection, algorithm  development, user interface design, mobile application design, system integration and testing. The goal is to develop a step counter which should detect walking on level ground and climbing stairs. Each student pair will be given an NRF52DK dev board with Bluetooth wireless connection, and triaxial accelerometer and gyroscope sensors. On-device firmware will be developed using the mbed platform and Android will be used for an accompanying mobile application. Each pair will demonstrate a working prototype at the end of 10 weeks and deliver a written report by the end of  Week 1 in the second semester.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11150.htm", 
            "Coordinator": "D K Arvind", 
            "Year": "4", 
            "Coursework/Exam": "70/30", 
            "Feedback": [
                "Don't be afraid to ask questions, especially during the initial stages of the course.", 
                "everything, plus write a report and a presentation. However, take it, not many people out there knows how to useIts a lot of work because you need to go from the sensor board (c++) to the android app (java) and merge", 
                "Take your time, Remain calm. Think properly about your approach, and keep trying until you get it right.", 
                "that.Arvind's lecture was very good. He is approachable and he wants everybody learn, personally I believe that the best part was", 
                "traditional courses which I usually find are based around studying to pass an exam, in the past I have often walked away from suchThe practical element of this course is most valuable. I have found that the heavy weighting towards practical work as opposed to", 
                "interesting course and exciting one. There is no much pressure on the students, they are given time to think about approaches toThe practical implementation of this course provides the students with on hands experience with IoT systems. This is a very", 
                "As DK Arvind and Andrew Bates, they will know best.", 
                "The technology narrowed us in what we could actually do. I felt that the nordic board was too complex for doing easy stuff.", 
                "and develop on their interests. It would also help the students see the broad reach and usefulness of IoTBring options to the projects one can pursue in the practicals. This would give the students the chance to make a choice", 
                "Andrew was good. However, there were sometimes that I felt with no direction.", 
                "It is great to have lab time assigned to working on the project."
            ]
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR11186", 
            "Name": "Robot Learning and Sensorimotor Control", 
            "Level": "11", 
            "Acronym": "RLSC", 
            "Average": "Not Available", 
            "Area": "Artificial Intelligence", 
            "Summary": "This course is designed as a follow up to the introductory course on Robotics: Science and Systems and will gear students towards advanced topics in robot control, learning and planning from an optimisation perspective. Control of complex, compliant, multi degree of freedom (DOF) sensorimotor systems like humanoid robots or autonomous vehicles have been pushing the limits of traditional planning and control methods.\n\nThis course aims at introducing an optimisation approach to the challenges and will take the students through various aspects involved in motor planning, control, estimation, prediction and learning with an emphasis on the computational perspective. We will learn about optimisation and learning tools and methodologies particularly geared towards problems of online real-time predictive planning for robot control.\n\nIssues and possible approaches for planning under uncertainty and redundancy, sensorimotor transformations and stochastic optimal control will be discussed. This will be put in context through exposure to topics in underactuated systems, legged locomotion and human motor control, and the use of computational methods in understanding biological sensorimotor mechanisms.", 
            "Delivery": "S2", 
            "Credits": "10", 
            "Course Description": "Syllabus Information:\n\n\n\n1. Optimal Control Approaches - Dynamic Programming, LQR, Trajectory Optimization: Direct and Shooting Methods (iLQR, DDP)\n\n2. Adaptive Learning and Control - Predictive Control - Underactuation - Multi-contact modelling and optimization - Constrained Operational Space Control - Hierarchical QP and Stack of task formulation\n\n3. Interaction and Robust Control - Stochastic Optimal Control - LQG - Cartesian Impedance Control - Passivity Methods - Lyapunov Stability - LQR-Trees and Sum-of-Squares Programming\n\n4. Movement Primitives - Rhythmic vs Point to Point Movements - Dynamical Systems and DMPs - Path Integral Methods - Learning by Demonstration\n\n5. Understanding Human Sensorimotor Control - Force Field and Adaptation - Optimal control theory for Explaining Sensorimotor Behaviour - Impedance Control - Human(oid) Locomotion and Stability.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11186.htm", 
            "Coordinator": "Michael Mistry", 
            "Year": "5", 
            "Coursework/Exam": "40/60", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR11010", 
            "Name": "Reinforcement Learning", 
            "Level": "11", 
            "Acronym": "RL", 
            "Average": "73.08", 
            "Area": "Artificial Intelligence", 
            "Summary": "Reinforcement learning (RL) refers to a collection of machine learning techniques which solve sequential decision making problems using a process of trial-and-error. It is a core area of research in artificial intelligence and machine learning, and today provides one of the most powerful approaches to solving decision problems. This course covers foundational models and algorithms used in RL, as well as advanced topics such as scalable function approximation using neural network representations and concurrent interactive learning of multiple RL agents.", 
            "Delivery": "S2", 
            "Credits": "10", 
            "Course Description": "Main topics to be covered include the following (see course website for more details):\n\n\n\n* Reinforcement learning framework\n\n* Bandit problems and action selection\n\n* Dynamic programming\n\n* Monte Carlo methods\n\n* Temporal difference learning\n\n* Planning in RL\n\n* Temporal abstraction\n\n* Function approximation for generalisation\n\n* Actor-critic and gradient-based optimisation\n\n* Multi-agent reinforcement learning\n\n* Environments with partial observability\n\n* Training agents and evaluating performance\n\n\n\n\n\nRelevant QAA Computing Curriculum Sections:  Artificial Intelligence, Data Structures and Algorithms, Intelligent Information Systems Technologies, Simulation and Modelling", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11010.htm", 
            "Coordinator": "Stefano Albrecht", 
            "Year": "5", 
            "Coursework/Exam": "25/75", 
            "Feedback": [
                "Be sure to supplement the lectures with reading from the course textbook.", 
                "Buy the book", 
                "course.Do not take this course. If you really want to, I found online videos that were much better than the actual lectures of the", 
                "learning is a very interesting topic and good to know if you are in the machine learning pathEven if the course was badly organized, I would recommend machine learning students to take the class as reinforcement", 
                "If Pavlos is teaching, don't take it :)", 
                "Prepare for self-learning, for most of the time.", 
                "Preview before lectures", 
                "Read on your own and go through David Silver's course.", 
                "Read the Sutton and Barto book before and during the course. Make sure you're interested in the course topics beforehand.", 
                "to understanding many other courses and subjects.Reinforcement Learning is a core idea in many of the Artificial Intelligence fields. Taking this course will be complimentary", 
                "Reinforcement learning courses online would most likely be much more coherent, useful and easier to learn from.", 
                "See who the lecturer is.", 
                "As it is, it requires little work and should be easy to pass, though.Take it to force you to learn by yourself if you're interested in RL, but don't expect a good teaching if it doesn't change.", 
                "The Sutton & Barto book is well written and helpful", 
                "There will be self-learning involved to understand the content.", 
                "Watch David Silver's lectures on YouTube and decide if they course is for you", 
                "consider taking another course instead", 
                "understood without accompanying audio. Lecture quality is also subpar.Allow to do coursework with Python as well, make requirements more clear. Revise lecture slides so that they can be better", 
                "Better communication and organisation. Make learning outcomes more clear.", 
                "inexperienced.Have a specialist in Reinforcement Learning teaching. The topic is too important and challenging to be handled by someone", 
                "Just use the UCL slides from David Silver, and teach along to those. The course felt very unstructured and chaotic.", 
                "Lectures can be more scripted", 
                "Make it 20 credits and get a competent instructor.", 
                "fashion. For a good example, see online lectures of the same subject from UCL. I agree with other students that using Python for theMore effort could be spent preparing for lectures and trying to convey the content to the students in an organised and educational", 
                "courses at Edinburgh allow use of Matlab. The course required spending an unfortunate amount of time getting to grips with MatlabPlease allow use of Python. Matlab is barely used outside of academia, and becoming less used in academia too. Other ML", 
                "Provide feedback for first assignment before second assignment is due. More explanations/information on slides.", 
                "Quality in the lecture preparation.Quality of the lectures.", 
                "uncertainty in the course content. However, in general I felt that the objectives of the course could have been outlined from theSignificant changes had been made to the course since last year, and I appreciate that this inevitably leads to a degree of", 
                "terrible (different notation every week, not informative, unclear, etc), lectures were not as useful as they could have been,The contents of the course were not clear at the beginning and the professor changed them pretty much every week. Slides were", 
                "lectures' days, which made it a lot hard to follow lectures since no preview could have been done. Pavlos is a very good instructor onThe course has been definitely organised in haste. Sometimes we could not even get the slides before a class before/on the", 
                "The coursework 2 of this semester may need more descriptions on the coursework sheet to make students clearer about the goals.", 
                "The course was very badly organized", 
                "reading the book, since the lecture slides were very messy and uninformative.The course was very disorganised, the lecturer was very inexperienced and (many) students ended up learning the material by", 
                "little context. Adding regular tutorials is definitely a good ideas as well; we had in-class tutorials with 100+ people in them, which in theThe lecture materials (and by extension the lectures) were outdated and hard to follow; most times it was a wall of equations with", 
                "The slides are not well organised and clear. You should take inspiration from David Silver's slide.", 
                "fresher.The textbook writing is not clear, not very attractive. The language used in the book is not natural, not a good guidance for a", 
                "even after the lecture had happened, and the lecturer did not usually seem very prepared. This is a shame, because he did make theThis course could have brought so much more if it had been organised better. The slides were often uploaded very late, one time", 
                "No student comments"
            ]
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR11089", 
            "Name": "Randomness and Computation", 
            "Level": "11", 
            "Acronym": "RC", 
            "Average": "67.50", 
            "Area": "Theory of Computation", 
            "Summary": "This course is about probabilistic methods and their application to computer science. The course introduces basic models and techniques and applies these techniques to the design of various randomized algorithms, data structures, and distributed protocols. Special emphasis will be given on applications of these ideas to other areas of computer science (e.g. networking, machine learning, etc).", 
            "Delivery": "S2", 
            "Credits": "10", 
            "Course Description": "- Introduction: Las Vegas and Monte Carlo algorithms\n\n  (Elementary Examples: checking identities, fingerprinting)\n\n\n\n- Moments, Deviations and Tail Inequalities \n\n  (Balls and Bins, Coupon Collecting, stable marriage, routing)\n\n\n\n- Randomization in Sequential Computation\n\n  (Data Structures, Graph Algorithms)\n\n\n\n* Randomization in Parallel and Distributed Computation\n\n  (algebraic techniques, matching, sorting, independent sets)\n\n\n\n* Randomization in Online Computation \n\n  (online model, adversary models, paging, k-server)\n\n   \n\n- The Probabilistic Method\n\n  (threshold phenomena in random graphs, Lovasz Local Lemma)\n\n\n\n- Random Walks and Markov Chains\n\n  (hitting and cover times, Markov chain Monte Carlo)", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11089.htm", 
            "Coordinator": "Mary Cryan", 
            "Year": "4", 
            "Coursework/Exam": "20/80", 
            "Feedback": [
                "Don't.", 
                "Study on your own the material from the book. Don't go to the lectures or the tutorials. They're a waste of time.", 
                "The textbook. The only thing I gained for the course was from studying the textbook.", 
                "Working examples in lectures in detail.", 
                "point, we had been going through proofs for an hour and it was hard to follow. Also, organize tutorials better and find someone whoMake it clearer where we are going; most of the time we were proving theorems without any context. By the time we got to the", 
                "applications of basic probability on algorithms at the very first lecture). The pace was very very slow the first 6 weeks. We shouldThe course is remarkably badly taught. The lecturer spent the first 4 weeks covering year 2 probability material (and some trivial", 
                "There's not much point in having a \"formative\" coursework if the feedback isn't returned at all."
            ]
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR11173", 
            "Name": "Project Preparation", 
            "Level": "11", 
            "Acronym": "EPCC/17", 
            "Average": "Not Available", 
            "Area": "Misc.", 
            "Summary": "This course comprises all aspects of the planning for the individual research project and is undertaken by the student in conjunction with the project supervisor(s). The student and supervisor(s) will agree the topic of the project, after which the student will conduct initial reading to refine the scope of the project and to inform the development of a detailed plan for its implementation. The student will deliver awritten report and make an oral presentation that both describe the background to the project and outline the plan for its successful completion.", 
            "Delivery": "YR", 
            "Credits": "10", 
            "Course Description": "This course encompasses the selection and preparation phase for a dissertation project in High Performance Computing or High Performance Computing with Data Science. The precise topics covered will vary depending on the individual project selected.\n\n\n\nTopics covered:\n\n- Report writing\n\n- Academic misconduct and how to avoid it\n\n- Professional Skills", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11173.htm", 
            "Coordinator": "not allocated", 
            "Year": "5", 
            "Coursework/Exam": "90/10", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR11177", 
            "Name": "Programming Skills", 
            "Level": "11", 
            "Acronym": "EPCC/16", 
            "Average": "Not Available", 
            "Area": "Misc.", 
            "Summary": "This course is designed to help you to produce higher quality code; code that is readable, maintainable, usable, correct and efficient in less time and with less effort. These programming skills are applicable to programs in any language and the course is illustrated with examples from C, Python, Fortran 90, and Java.\n\n\n\nAreas of specific relevance to parallel high-performance computing, including the use of batch systems, scientific libraries, profilers, and performance analysis, are also covered.", 
            "Delivery": "S1", 
            "Credits": "10", 
            "Course Description": "The course covers the following:\n\n- Best practices for scientific computing.\n\n- Introduction to operating systems, compilers and batch systems.\n\n- Writing programs for people, programs that are readable, maintainable, and usable.\n\n- Reviewing code to identify bugs and share expertise.\n\n- Debugging using code browsers and debuggers.\n\n- Managing versions and collaborating using revision control.\n\n- Automating common tasks and building programs using a build tool.\n\n- Automated regression and unit testing to help ensure and maintain program correctness.\n\n- Profiling and performance analysis to identify and improve a program's use of processing and memory resources.\n\n- Security, authentication and authorisation concepts.\n\n- REST application programming interfaces.\n\n- Open source software.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11177.htm", 
            "Coordinator": "not allocated", 
            "Year": "5", 
            "Coursework/Exam": "100/0", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR11145", 
            "Name": "Text Technologies for Data Science", 
            "Level": "11", 
            "Acronym": "TTDS", 
            "Average": "71.57", 
            "Area": "Data Science", 
            "Summary": "This course teaches the basic technologies required for text processing, focussing mainly on information retrieval and text classification. It gives a detailed overview of information retrieval and describes how search engines work. It also covers basic knowledge of the main steps for text classification. \n\n\n\nThis course is a highly practical course, where at least 50% of what is taught in the course will be implemented from scratch in course works and labs, and students are required to complete a final project in small groups. All lectures, labs, and two course works will take place in Semester 1. The final group project will be due early Semester 2 by week 3 or 4.", 
            "Delivery": "YR", 
            "Credits": "20", 
            "Course Description": "Syllabus:\n\n* Introduction to IR and text processing, system components\n\n* Zipf, Heaps, and other text laws \n\n* Pre-processing: tokenization, normalisation, stemming, stopping.\n\n* Indexing: inverted index, boolean and proximity search\n\n* Evaluation methods and measures (e.g., precision, recall, MAP, significance testing).\n\n* Query expansion\n\n* IR toolkits and applications\n\n* Ranked retrieval and learning to rank\n\n* Text classification: feature extraction, baselines, evaluation\n\n* Web search", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11145.htm", 
            "Coordinator": "Walid Magdy", 
            "Year": "4", 
            "Coursework/Exam": "50/50", 
            "Feedback": [
                "Check Piazza for last minute changes to the assignments.", 
                "Choose this course if you want to learn about information retrieval and text classification with practical tasks.", 
                "Do it, try it.", 
                "If you want to know how search engines work and how information retrieval works, take this course. It will not disappoint.", 
                "it is worth to learn and follow the tutor step by step", 
                "advanced materials.Assignments should be announced sooner. Course could use some [recommended] prerequisites (nlp, maths, ml) and teach more", 
                "I am not a fan of how coursework 3 spans into semester 2 but I can't think of a way to avoid it. People will probably complain about itBetter and more timely coursework definition. Coursework should be specified concretely and unambiguously.", 
                "assignments 2 and 3 were well beyond the end of teaching. An important part of assignment 2 was changed shortly before theThe assignments were very poorly managed. The specification for assignment 2 was released very late and the deadlines for", 
                "The lectures were not recorded, and ran at non-standard times (2-4.15). It would be better to use standard slots like 2:10-4:00.", 
                "It will be better if the time of lab could be more longer, or add some tutorials for this course.", 
                "until much later than planned. Also, for the first assignment it was partially released and then the final parameters were released afterSometimes the labs/course work were a bit disorganized. The course work would be mentioned and then not actually assigned", 
                "No student comments"
            ]
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR09032", 
            "Name": "System Design Project", 
            "Level": "9", 
            "Acronym": "SDP", 
            "Average": "71.09", 
            "Area": "Software Engineering", 
            "Summary": "The System Design Project is intended to give students practical experience of (a) building a large scale system (b) working as members of a team. The project involves applying and combining material from several courses to complete a complex design and implementation task. At the end of course each group demonstrates its implemented system and gives a formal presentation to an audience of the students, supervisors, and visitors from industry.", 
            "Delivery": "S2", 
            "Credits": "20", 
            "Course Description": "During this project students work in groups of about ten on the design and implementation of a complete system to solve some practical and useful problem. All groups perform the same task. This primarily involves software implementation but may potentially also involve hardware design and construction where this is relevant. Recent examples of projects include: an automated on-line supermarket; building webcam-based home and commercial security systems; constructing Mars and Lunar rovers controlled from an Earth-based web browser interface, etc.\n\n\n\nEach group is provided with the same facilities. These include one or more PCs dedicated to them and other equipment depending on the particular project, for instance a webcam, a Lego robot construction kit, hardware prototyping kit, diagnostic equipment etc. They also have a small amount of money to spend in any way they choose on any extra items they feel might enhance their particular design. Project management software is also available to them.\n\n\n\nEach group is assigned a mentor. The mentor's task is to advise and provide feedback on the progress of the group during the project but not to provide technical support. Consultants from amongst the academic and support staff are made available to advise on aspects of the task such as management, specific pieces of software and hardware etc. Groups meet with their mentors at least once a week. They also meet amongst themselves more frequently to plan and coordinate their activities.\n\n\n\nTowards the end of the semester, a day is set aside for groups to demonstrate their implemented system and to give a formal presentation of it to an audience of the students, mentors, and visitors from industry.\n\n\n\nRelevant QAA Computing Curriculum Sections:  Computer Based Systems, Systems Analysis and Design", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr09032.htm", 
            "Coordinator": "Barbara Webb", 
            "Year": "3", 
            "Coursework/Exam": "100/0", 
            "Feedback": [
                "\"I am really sorry for you! Hope it ends well! Pray for a team with decent people!\"", 
                "|D|O| |N|O|T| |T|A|K|E| |T|H|I|S| |C|O|U|R|S|E|+-+-+ +-+-+-+ +-+-+-+-+ +-+-+-+-+ +-+-+-+-+-+-+", 
                "have a firm limit; do not exceed that.1. Treat the course like a 30 to 40 credit course as it has a very high workload. Work a little every day on it if you can, but also", 
                "years: we know your pain and can help you.Good luck, fellow student. You can get through this - we all did and it was awful. Feel free to come talk to your peers from higher", 
                "documentation and etc. Useful if you don't have any industry experience. However, if you have experience and it's not compulsoryAlthough it\u2019s an Informatics course, be prepared to do a lot of work in terms of organization, team management, writing", 
                "group.Communication is vital for this course. It is good to have ambitions but it is also important to know where is the limit for your", 
                "Definitely recommend, it's all worth it in the end!", 
                "The experiences and the knowledge gained though is massiveDepending of the team you'll end up with, it can be the most interesting or the most disappointing course during your studies.", 
                "won't have control over like WiFi and self-managed machines which are provided. If you have previous experience then take thisDon't take it unless you have free time to research research and research. Expect so many hiccups and problems with stuff you", 
                "struggling with Lego.Don't. Majority of your time you will be confused about what is expected of you, writing reports, arguing with teammates and", 
                "The key is to get a good team. If you got excited about the course as I told you, you are halfway there. Now get excited about yourGet excited about it! This course was much better than all my other courses in the first 3 years combined!", 
                "Organise your team efficiently and make sure you complain early if something does not work.Make enough research before you decide what you want the robot to do, as in the end it might turn out to be too hard.", 
                "stop as you don\u2019t know what problems may take longer in future weeksMake sure that your team is organised, try and do things as quick as you can and if you finish your goal for the week don\u2019t just", 
                "control, so hopefully feedback is taken into account.Make sure you get clear requirements and the same client, or your grades will be affected for no real reason. It's out of your", 
                "Planning and communication with your team mates is key to survival.", 
                "Prepared to work hard with students you've never met before and build the team environment from the very start.", 
                "This is a definitely take course. It will not only enhance your coding ability but also team collaboration skills.", 
                "Try to make sure your team gets along, otherwise you'll be in 10 weeks of hell.", 
                "communicate with your team members about any worries/changes.Make sure to figure out how much time you can put in each week without overworking & what your goals each week are, and", 
                "A chance to work with electronics and coding a complete system.", 
                "Building a robot, learning a lot about team work, working on large group projects.", 
                "semester.Engagement with the course from the very start. Well-designed submission deadlines to engage students throughout the", 
                "Garry, the technician, is incredibly useful and a pleasure to work with. Definitively an invaluable part of the course!", 
                "Gary", 
                "Group work", 
                "Learning about EV3, arduino, robotics, working efficiently in a team, splitting up tasks", 
                "Meeting new people", 
                "Nothing especially valuable. Mainly, it made me appreciate other courses more.", 
                "been no discussion whatsoever between markers, clients etc. Everybody kept telling us conflicting stuff and in the end, I don't evenNothing honestly. This course was very bad. The feedback and requirements were so inconsistent. It really looks like there has", 
                "Solving problems that are specific to your group and having to come up with solutions to things not on the internet.", 
                "The ability to think out of the box and working as a team.", 
                "The actual idea behind the course is interesting. I liked that I had the opportunity to learn something about robotics.", 
                "learn something is by doing it, failing, and then fixing my mistakes. SDP provided a huge opportunity for developing a range of softThe opportunity to work in a group in a similar fashion to a tech start up or an agile team in a bigger company. The best way to", 
                "The whole idea, really. Also: Garry and the fact that we had a budget we could work with. Also, good that you were using Slack :-)", 
                "First and foremost, I would like to thank Garry. He is certainly the best part of this course for me! Friendly, helpful, nice - To an extentWhile I mostly disliked this course, it is undeniable that there are valuable parts to it.", 
                "interesting.Working in a team and developing the business side of things is interesting. Also, learning how to operate hardware is also quite", 
                "Working in teams and having access to materials and a whole floor to ourselves.", 
                "Learning to work within a group, communicate, and figuring out how to schedule your time was valuable.Doing programming that wasn't about filling in a skeleton file like it is in most courseworks, but allowed us to build a full system.", 
                "The experiences to work within a group, to communicate with others and to solve problems together.", 
                "we have received weren't well explained, and in places we have got inconsistent feedback).Clear expectations, either increasing the credit count, or significantly decreasing workload, transparent marking guide (the marks", 
                "Clearer assessment criteria, better organization", 
                "Clearer instructions on what is required.", 
                "Either stop making the course about robots (IoT instead would have been soo amazing!) or make it voluntary.", 
                "Give better indications as to what we are supposed to build. It is not fair to take a low mark in a demo, just because the milestonesGive ability to fire team-mates. It is only so much a team of actually 2-3 people who work can do.", 
                "different from other courses and hence it makes sense that many students will want to work harder than usual and they might easilyI would make marking criteria clearer and would not try make the average mark for the course be between 60 and 65. SDP is very", 
                "heard similar remarks from many students taking this course. Personally, I would increase the credit worth of the course, which willIn my opinion the course workload did not resemble a 20 credit course. While I realize that can be entirely team specific, I have", 
                "a rough idea of what is and isn't feasible (given no prior experience building robotic systems, using Arduino/Pi and many otherLess hurried start of semester. Like, come on, 3.5 days is not enough to come up with good ideas, do background research to get", 
                "More guidance on the documentation portions.", 
                "robotics if the task is making a robot! The management of the team should have been by the mentor. A peer management is not aMore time is needed to actually decide on the idea of what to do. More lectures and workshops on actually learning how to do", 
                "From the beginning, it has been unclear what level of robot is expected. The feedback from our reports and the demos arePlease do not do the same structure again, it's very confusing for everyone involved.", 
                "Firstly, naturally I understand that changing the format will increase the amount of confusion -- and that industrial action was notPlease, please, please take this feedback on board. I really want to be as constructive as possible, although there is a lot to say.", 
                "overall mark was deducted from the different parts. The organisation could also be improved, for example letting us know aboutThe feedback from the reports was not adequate, there were only minor comments and not even an explanation of how the", 
                "be more transparent and please for the love of god don't use curves. A lot of people put in a lot of effort into projects and even byThe number of credits should be increased for this course and it should run during the entire length of the year. Marking should", 
                "There should be more guidance on the first week to help get started and to decide the project and milestones correctly.", 
                "as key to getting good grades. We had a DIFFERENT client for every graded part of the course, making it impossible to predict whatThis course simulates working for a real client. As such, the course organisers describe getting to know your clients preferences", 
                "for a 20 credits course.Workload for this course is beyond a 20 credits course, so either makes it to 30 or 40 credits or reduce the workload to be fitting", 
                "robot football).A lot of the specifications were given late, changed, or were inconsistent with the new setup of the course (changed away from", 
                "more support for ideas in the beginning", 
                "Mentor meetings were mostly a waste of time.", 
                "The workshops at the beginning of the semester were about as useful as a rotten fish, literally a waste of time as they provided noMentorship went fine, our group had no problems there.", 
                "year it wasn't just following some previous year project like a football player robot, it was brand new ideas of our own creation andOnly three workshops at the beginning and these weren't enough at all. There was no workshop on building a robot, and this", 
                "The tutorials taught me nothing. You could have just e-mailed me a list of useful links.", 
                "Which one? There are no workshops?"
            ]
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR10057", 
            "Name": "Software Testing", 
            "Level": "10", 
            "Acronym": "ST", 
            "Average": "76.62", 
            "Area": "Software Engineering", 
            "Summary": "This module is intended to provide in-depth coverage of software testing further to develop the introductory material covered in Informatics 2C - Software Engineering. The goal of the course is to provide students with the skill to select and apply a testing strategy and testing techniques that are appropriate to a particular software system or component. In addition the student will become a capable user of test tools; will be able to assess the effectiveness of their testing activity; and will be able provide evidence to justify their evaluation. The course will be supported by two practical exercises involving the development of appropriate tests and the application of a range of testing tools. This course is based on the IEEE Software Engineering 2004 Software Testing syllabus.", 
            "Delivery": "S2", 
            "Credits": "10", 
            "Course Description": "# Testing techniques and principles: Defects vs. failures, equivalence classes, boundary testing.\n\n# Types of defects.\n\n# Black-box vs. Structural testing.\n\n# Testing strategies: Unit testing, integration testing, profiling, test driven development.\n\n# State based testing; configuration testing; compatibility testing; web site testing.\n\n# Alpha, beta, and acceptance testing.\n\n# Coverage criteria.\n\n# Test instrumentation and tools.\n\n# Developing test plans.\n\n# Managing the testing process.\n\n# Problem reporting, tracking, and analysis.\n\n\n\nRelevant QAA Computing Curriculum Sections: Software Engineering", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr10057.htm", 
            "Coordinator": "Ajitha Rajan", 
            "Year": "3", 
            "Coursework/Exam": "25/75", 
            "Feedback": [
                "Check the slides and textbook before the lectures.", 
                "submission a little before the deadline because of some last-minute clarifications)Do all the tutorials before class, make sure to start courseworks early (there was a time when we had to alter our", 
                "It's a nice course. Take it if you like. :-)", 
                "Just take, it's useful, quite easy and the exam is open book", 
                "Learn how to test before you start the courseworks, because the supervisors will not help you", 
                "simply to gain the useful confidence that will pay off in any software engineering interview or job.Many of the software testing approaches may seem intuitive and even obvious but I highly recommend taking the course", 
                "Show up and make sure you get your work done. Ask questions if you're confused.", 
                "This course is worth taking if you are interested in software testing methods and concepts.", 
                "later on, and the coursework is quite fun.it's a pretty easy course, but I\u2019d recommend paying attention as the concepts can come in useful when working in industry", 
                "Both the courseworks are really good. I was not able to secure good marks, but I enjoyed it", 
                "Different software techniques.", 
                "Exploring various testing techniques and doing assignments with them was very helpful.", 
                "Also, I very much liked that the coursework was done in groups (which I could choose). This little thing made it a much, much betterProbably the tutorials. Although the lectures were also good and I very much like Ajitha as a lecturer.", 
                "Change the TAs, literally never answer Piazza questions and extremely unclear instructions on courseworks", 
                "did not meet the definition from the class of how mutation testing should be applied (definition in class: software tester knowCoursework 2: Mutation testing was just a \"random\" try and error approach which took so much time! I think this coursework task", 
                "structure and the relationship between the sections. It would be much better to add these into the PPT.From my point of view, the course can be organized more clearly. I know many times the teacher would help us understand the", 
                "during lecture was quite different from what is written in the slides.I think the lecturer needs to put in more effort to prepare her slides, instead of just taking from the internet. What she teaches", 
                "actual code written on PC (it's faster and closer to reality) or by using such code as the starting point (as simple as, say, taking theI would add even more examples in the lectures. BUT I'd definitely have them better prepared and present more of them either as", 
                "method was placed in the dev cycle and what it aims to achieve only during the last lecture (the revision lecture).I would focus a bit more on making the structure of the ST methods more clear and easier to digest. I understood where each", 
                "coursework for the uncovered testing techniques.Later parts of the course were covered too quickly, maybe because of the strike? Would be a good idea to add one more", 
                "Should include not just testing but keeping something secure too.", 
                "didn't do for assignment 1. Assignment 2 seemed to require us to guess at what we had been marked off on in assignment 1.The feedback received on assignment 1 was minimal at best, and assignment 2 was very difficult if you did not know what you", 
                "The speed of the lecture is a little bit fast.", 
                "impossible without having a look at the actual source files.The second coursework involves \"guessing\" mutations from JAR files without any extra information given, which is kind of", 
                "Having a tutorial was good, I just struggled with understanding the way my tutor was explaining things.", 
                "seemed to be one of the few dedicated teachers I've had during my 4 years at UoE.I really enjoyed the lecturer and I think she did a great job at explaining and making sure we understand what is going on. She", 
                "The tutorial leaders did not always know what was going on, but generally were useful and kind.", 
                "The tutorials were awesome! There was a lot to go through though. What about having more tutorials?", 
                "Would be helpful", 
                "being able to work on the tutorial step-by-step during the tutorial was quite useful"
            ]
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR11158", 
            "Name": "Usable Security and Privacy", 
            "Level": "11", 
            "Acronym": "USec", 
            "Average": "Not Available", 
            "Area": "Security", 
            "Summary": "Humans are a vital component of secure and private systems, they are also one of the most expensive components and the most challenging to reason about. In this course, students will learn about how to create systems that are usable while still fulfilling their primary security or privacy mission. Students will also learn about research topics such as designing user studies to critically evaluate interfaces and reading academic papers to create an academically-informed view of the topic.", 
            "Delivery": "S2", 
            "Credits": "10", 
            "Course Description": "- Introduction: History and overview of the Usable Security and Privacy research area including the transition from blaming users to treating them as valued components of a secure system.\n\n- Study design: Security and privacy activities tend to be secondary tasks. The student will learn how to design and analyze usability studies that are common in security and privacy such as targeting secondary tasks or using some deception.\n\n- Privacy: Basic overview of the definitions of privacy as well as some of the legal and social aspects of it. Analysis of common privacy issues and how they are expressed through user interaction with systems.\n\n- Security: Overview of common security technologies and how they are impacted by usability. In- depth look at select topics such as password construction and management.\n\n- Ethics: Discussion of ethics, particularly around research in topics in security and privacy where participants can be particularly vulnerable.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11158.htm", 
            "Coordinator": "Kami Vaniea", 
            "Year": "4", 
            "Coursework/Exam": "20/80", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "December", 
            "Code": "INFR11114", 
            "Name": "Types and Semantics for Programming Languages", 
            "Level": "11", 
            "Acronym": "TSPL", 
            "Average": "93.38", 
            "Area": "Programming Languages", 
            "Summary": "Type systems and semantics are mathematical tools for precisely describing aspects of programming language. A type system imposes constraints on legal programs in order to guarantee their safe execution, whilst a semantics specifies what a program will do when executed. This course gives an introduction to the main ideas and methods of type systems and semantics. This enables a deeper understanding of existing programming languages, as well as the ability to design and specify new language features.\n\n\n\n**PLEASE NOTE - THIS COURSE HAS REPLACED Types and Semantics for Programming Languages (INFR10040)**", 
            "Delivery": "S1", 
            "Credits": "10", 
            "Course Description": "*Inductive definitions and proof by induction\n\n*Untyped and simply-typed lambda calculus. Variable binding.\n\n*Small step and big step semantics.\n\n*Progress and preservation theorems.\n\n*Products, sums, and list types.\n\n*Reference types and exceptions.\n\n*Subtyping. Subsumption and its understanding as inclusion or coercion.\n\n*Principles of operational semantics.\n\n*Key concepts of semantics: compositionality, adequacy, observational equivalence, full abstraction, and definability.\n\n\n\nRelevant QAA Computing Curriculum Sections: Comparative Programming Languages, Compilers and Syntax Directed Tools, Programming Fundamentals, Theoretical Computing", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11114.htm", 
            "Coordinator": "Philip Wadler", 
            "Year": "4", 
            "Coursework/Exam": "25/75", 
            "Feedback": [
                "Check your timetable. PATH lists tutorials as \"choose 1 out of n\", but you are actually expected to attend all of those.", 
                "Do the assignments.", 
                "with partially programming languages as an application. Highly recommended.It is a great course for computer science students even the students out of the faculty to learn fundamental concept of logic", 
                "my opinion.It is not easy, as the material is quite abstract. The coursework takes a lot of time. But it is really well taught and worth it in", 
                "Small class. Better learning experience.", 
                "Very clear explanations of complex ideas. Lot of practical work in a highly theoretical course.", 
                "Perhaps it would be better to choose you topic in depth.Guest lectures at the end of the course are difficult to follow as they try to cover one broad topic during one or two lectures.", 
                "lecturer will be away for 2 weeks, this is the only best compromise solution.Having 3 lectures + 3 tutorials per week in the first two thirds of the semester is a bit demanding. But taking into account that the", 
                "I have no idea, it was a good course.", 
                "however, so I'd personally increase it to a 20 credit course, and maybe add a couple of extra lectures of content, but not much moreThere was a lot more work needed for this course than for most 10 credit courses; none of it felt unnecessary or worth removing", 
                "Tutorials are actually more like lab sessions / coursework help sessions. It helped me a lot in understanding the materials."
            ]
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR11178", 
            "Name": "Threaded Programming", 
            "Level": "11", 
            "Acronym": "EPCC/19", 
            "Average": "Not Available", 
            "Area": "Parallel Programming", 
            "Summary": "This course is a practical introduction to parallel programming using the threading model, which is commonly used on shared memory and multicore hardware. The majority of the course is focused on teaching the use of the industry standard OpenMP API.", 
            "Delivery": "S1", 
            "Credits": "10", 
            "Course Description": "After taking this course students should have a good practical understanding of multithreaded programming and be competent OpenMP programmers.\n\n\n\nThe course will cover the following topics:\n\n- Basic concepts of shared memory: threads, tasks, shared/private data, synchronisation.\n\n- Concepts of OpenMP: parallel regions, shared/private variables, parallel loops, reductions\n\n- OpenMP parallel regions and associated clauses\n\n- OpenMP worksharing directives, scheduling of parallel loops\n\n- OpenMP synchronisation: barriers, critical sections, atomics, locks.\n\n- OpenMP tasks\n\n- Additional features of OpenMP: nesting, orphaning, threadprivate globals, OpenMP 4.0 features\n\n- OpenMP implementations\n\n- Memory models.\n\n\n\nLectures will be followed by tutored practical sessions illustrating the key concepts. Students will have the choice of using either C or Fortran in the practical programming sessions on OpenMP.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11178.htm", 
            "Coordinator": "not allocated", 
            "Year": "5", 
            "Coursework/Exam": "100/0", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR11141", 
            "Name": "The Human Factor: Working with Users", 
            "Level": "11", 
            "Acronym": "THF", 
            "Average": "70.48", 
            "Area": "Human Computer", 
            "Summary": "This is an introduction to the fields of Human Factors and User Experience with an emphasis on developing practical skills that are grounded in a strong knowledge of theory.", 
            "Delivery": "S2", 
            "Credits": "10", 
            "Course Description": "\"If the user can't use it, then it doesn't work at all.\" (Susan Dray) When technical systems that have been crafted in years of painstaking work fail in practice, more often than not this is due to a lack of fit between the complex system, the people who interact with it, and the contexts in which it is used. In the best case, failure is just annoying, in the worst case, it costs lives.\n\nIn this course, we will look at the art and craft of building technical systems that people can actually use successfully. To this end, we will draw on relevant findings from anthropology; behavioural, cognitive and social psychology; human-computer interaction; and sociology. The course will be taught using a flipped classroom - before class, you will work through materials; in class, we will work on activities designed to review the material and deepen your learning.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11141.htm", 
            "Coordinator": "Benjamin Bach", 
            "Year": "5", 
            "Coursework/Exam": "100/0", 
            "Feedback": [
                "would want to take this course would be for doing basically nothing and getting good grades, but be smarter and don't do it/Do not take this course, you will not learn anything here, your time is much better spent elsewhere. I guess the only reason you", 
                "Do not take this course.", 
                "Doing reading in advance.", 
                "Good course, if you attend HCI first, it would be better", 
                "I took the HCI course which helped me to better understand the content of The Human Factor.", 
                "had hoped.If you want a laid back course, with a lot of initial reading - go for it. But it is a lot of effort and the class is not as engaging as I", 
                "Just take this course as it's extremely helpful, even for software engineers", 
                "Only take this course if you haven't already taken the Human-computer Interaction course.", 
                "the different classes linked together.The content is not difficult and the lecturer is extremely clear in her teaching methods, but I struggled to see how the content of", 
                "to get some value from this course.This course has a small workload and actually interesting material, but you have to dedicate time to do the readings if you want", 
                "self-explanatory and you would do better doing all of the readings and not going to the lectures.This is a flipped classroom so you spend most of the two hours in the lecture not doing a lot or playing with cat apps. It is very", 
                "sort of people. It does covers some very useful concepts. The lectures though are not too interesting as they cover the materialThis is an interesting class which is relevant for understanding how technology needs to be developed while keeping in mind all", 
                "Take it!", 
                "- Do not call it a flipped classroom - it's not a flipped classroom (reading before the course does not make it a flipped classroom).- A better structure to the course webpage", 
                "Completely revamp the course material and design to complement the Human-computer Interaction course. Replace the lecturer.", 
                "do not believe this to be in any way the fault of Dr Wolters, it is nonetheless difficult for me to feedback on a course in which, for aI cannot reasonably assess this course as I was deprived of most of the contact time, and thereby content, by the strike. Though I", 
                "design. All the activities we did in class reminded me of things we would do in kinder-garden. The quality of teaching was absolutelyI would rewrite the whole course from scratch. It's unclear how any topics that we studied relate to each other and/or app/tech", 
                "More practice.", 
                "None, it was just perfect.", 
                "you to do so for her. That makes learning harder and also the content each week does not have much link to each other, making itThe course material could be better organized. It is hard to find as she did not prepare one set of slides per lecture but expects", 
                "about in advance anyways. The assignments were interesting but I think that having a group assignments might be more useful forThe lecturer often covered topics in a two hour lecture which: 1) could have been covered in 20 minutes, and 2) we had to read", 
                "The methodology in HCI should be introduced more.", 
                "The venue of the course.", 
                "able to answer for themselves. A lot of the material taught in the course was common sense. It was the start of an interesting courseThere is no clarity to the course, it seems to be that the main goal is just to ask questions of the students that they are already", 
                "to find information on what I needed to do for a given week, what the assessment was, what the assessments were worth, etc. I thinkThere was a lot of conflicting information and the course website is extremely nested and difficult to navigate. I found it very hard", 
                "confusing emails and the website is very poorly organised with too many sections that have different information for the same topicsThis course is not well organised - which is ironic given the course's aims. Maria tries to be informative, but sends too many", 
                "Timetabling screwed up big time which meant teaching was hard generally. This course needs a lecture theatre for teaching.", 
                "make the release and deadline of quiz and question & comments more clear, I have missed many of them at the beginning", 
                "the lecture format was very unstructured and sometimes I think I would have learnt more if there was a set lecture structure", 
                "No tutorials, workshops or labs for this course."
            ]
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR11172", 
            "Name": "Software Development", 
            "Level": "11", 
            "Acronym": "EPCC/18", 
            "Average": "Not Available", 
            "Area": "Software Engineering", 
            "Summary": "Software development is more than just writing programs and this course provides an introduction to the complete range of software development activities, from gathering requirements through to evaluation of a finished product. The course describes how software development projects are created and managed to achieve the delivery of high-quality, efficient, robust, portable, usable software products. You will be introduced to areas of increasing prominence in both academia and industry including the importance of software sustainability and the rise of agile methods and extreme programming. The course should support in the understanding of the value of practical software development skills to the HPC, computational science and engineering.", 
            "Delivery": "S2", 
            "Credits": "10", 
            "Course Description": "Course Topics:\n\n- Software Development Projects and Processes\n\n- Development Models\n\n- Project Approaches including Agile and PRINCE2\n\n- Project Planning: Task Scheduling and Risks\n\n- Design: Requirements Capture and Prioritisation, Interfaces, Code, System\n\n- Software Testing \n\n- Usability and Evaluation \n\n- Project Teams and Communications\n\n- Project Reviews", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11172.htm", 
            "Coordinator": "not allocated", 
            "Year": "5", 
            "Coursework/Exam": "100/0", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "December", 
            "Code": "INFR10064", 
            "Name": "Software Design and Modelling", 
            "Level": "10", 
            "Acronym": "SDM", 
            "Average": "Not Available", 
            "Area": "Software Engineering", 
            "Summary": "This course introduces the design and modelling of software systems using object-oriented techniques. We start by exploring the use of modelling in software development. Students learn to document designs in the Unified Modeling Language, UML, with emphasis on class, sequence and state diagrams and the Object Constraint Language, OCL. We use modern model-driven development tools and discuss their strengths and weaknesses. We study criteria that make one design better than another in context and introduce design principles and patterns that capture good practice.\n\n\n\nThis course replaces INFR10056 - Software Engineering with Objects and Components.", 
            "Delivery": "S1", 
            "Credits": "20", 
            "Course Description": "The course begins by placing design and modelling in the context of the various software engineering processes in widespread use today. Via labs, lectures and self-study using readings, videos and formative exercises, it teaches students to produce (initially straightforward) designs and to document them using UML models, both on paper and with an appropriate tool. We discuss the different affordances of these modes and how models may be used (i) purely informally, (ii) as reviewed documentation for designs, and/or (iii) in model-driven development in which models are formal artefacts and code may be generated from them.\n\n\n\nThe second part of the course focuses on identifying and producing good designs. What principles should a good object-oriented design follow? We learn some common design patterns and their role in development and learning.\n\n \n\nFinally we turn to practical model-driven development: how can the cost-benefit ratio of modelling be improved, now and potentially in the future? Students will learn about model transformations, both model-to-model and model-to-text (e.g., code generation) and be introduced to current tools supporting these. We discuss the role of domain specific languages and the integration of model driven development with agile processes. Throughout the course, we identify the deficiencies as well as the benefits of the fast-changing state of the art, aiming to equip students to critically evaluate tools and techniques that become available to them in future.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr10064.htm", 
            "Coordinator": "Perdita Stevens", 
            "Year": "3", 
            "Coursework/Exam": "50/50", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR11038", 
            "Name": "Software Architecture, Process, and Management", 
            "Level": "11", 
            "Acronym": "SAPM", 
            "Average": "66.45", 
            "Area": "Software Engineering", 
            "Summary": "Large-scale systems differ from small-scale system in the challenges they pose in capturing, and\n\nmanaging the process of delivering systems that conform to, quality attribute requirements (e.g.\n\navailability, performance, security). Software Architecture provides a framework for managing\n\nthese aspects of systems. This course introduces Software Architecture concepts and provides\n\nexperience of the use of Software Architecture in the development process and management of\n\nsystems.", 
            "Delivery": "S2", 
            "Credits": "10", 
            "Course Description": "Software Architecture: Quality Attributes; Large-scale systems; Quality Attribute Scenarios;\n\nArchitectural Tactics; Design Checklists; Tradeoffs; Architectural Patterns; Product Lines; Exemplar\n\nQuality Attributes (Availability; Performance; Security; Testability; Usability; \u00bf); Case Studies\n\n(Apache, Linux, Real-time Architecture, Medical Systems, Banking Systems, \u00bf).\n\n\n\nSoftware Architecture in the Development Process: Architecture in Processes (Traditional \u00bf Vmodel,\n\nRisk-centric, Agile), Process Improvement, Modern Developments (e.g. DevOps).\n\n\n\nManagement Aspects: Tools through the process; planning; tracking; cost management; people and teams.\n\n\n\nRelevant QAA Computing Curriculum Sections: Professionalism, Software Engineering, Systems\n\nAnalysis and Design", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11038.htm", 
            "Coordinator": "Stuart Anderson", 
            "Year": "4", 
            "Coursework/Exam": "25/75", 
            "Feedback": [
                "Good overview and lecturer but content wise is a bit too light.", 
                "Groupwork with 8-10 people per group (which were assigned by lecturer) is challenging.", 
                "Anderson.Sometimes help could be late and delayed because of other duties and traveling of course organizer and lecturer Stuart", 
                "does develop some useful skills.This course if definitely interesting for understanding the structure of software architecture and the group assignment", 
                "more than often lacks the time. This course should have one more lecturer to help with his teaching and admin duties in this course.Course organizer and lecturer, Stuart Anderson, has too many other commitments and way too busy. He is willing to help but", 
                "We never got the email feedback for our homework draft, this would have been helpful for the final submission!Group work with 8 people in a group is challenging, it would have been easier if we could have chosen the groups ourselves!", 
                "content. One example on NHS does not illustrate the concepts well.I think the slides can be made clearer with more concrete examples and case studies rather than just going through the textbook", 
                "also in-textShifting focus more to concepts explanation not just reading from the slides (way too much text), providing formative feedback", 
                "back with the feedbacks he told us he would get back to us in writing (we had a quick meeting with him where he told us he wouldThe lectures were a bit boring and even though the material is interesting they weren't very stimulating. The lecturer never got", 
                "The structure and the key point of each lecture should be more clear, because it is an open book exam, so it will be much helpful.", 
                "No tutorials, workshops or labs for this course."
            ]
        }, 
        {
            "Exam Diet": "VUG: December; April/May", 
            "Code": "INFR11124", 
            "Name": "Social and Technological Networks", 
            "Level": "11", 
            "Acronym": "STN", 
            "Average": "72.40", 
            "Area": "Networks", 
            "Summary": "In this course, we will study core properties of networks arising in various social, scientific and technological contexts. We will see techniques for their analysis, and applications in social networks, World Wide Web, Internet, IoT etc. The course will cover fundamental theories and techniques from machine learning, algorithms and mathematics. We will see the relevance of these techniques in real networks, as well as use of network-based techniques in more general data analysis. The course will involve theoretical analysis in class, development of algorithms, and writing of programs to analyse network data.", 
            "Delivery": "S1", 
            "Credits": "10", 
            "Course Description": "The course will study computational, mathematical and data analysis aspects of networks. Typical topics will include properties of social networks, epidemics, spread of innovation, random graphs, metric properties, preferential attachments and power law networks. It will cover relation to data analysis and machine learning: including clustering and community detection, submodularity, optimization, embedding (dimension reduction) and classification. Other current topics will be covered as appropriate.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11124.htm", 
            "Coordinator": "Rik Sarkar", 
            "Year": "4", 
            "Coursework/Exam": "40/60", 
            "Feedback": [
                "Attend all the lectures", 
                "No idea how the exam is going to be, but the course was really fun! It was the most interesting coursework for me.", 
                "vague and too open.Plan enough time for the coursework and meet the lecturer in his office to talk about your project. The descriptions are too", 
                "This course is about graphs and networks; not social networking, not Facebook.", 
                "attendance to all the lectures and read them and the extra material after the lecture in order that you can follow the topics", 
                "Be prepared for the project, pick the topic wisely.", 
                "Project was interesting.", 
                "bag of words thrown there.Lecture recordings and more structured slides. I don't have the lecture recordings on learn and reading the slides it's like reading a", 
                "Maybe the lectures can be recorded", 
                "More mathematical formulation and algorithms.", 
                "Too few guidance for project, eg the expected level of difficulty, etc", 
                "coursework was a struggle as I have never implemented some of the algorithms before.There should be labs or tutorials to go over implementations of the algorithms mentioned in the lecture. Without that, the", 
                "add more material of examples in real problems"
            ]
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR11098", 
            "Name": "Secure Programming", 
            "Level": "11", 
            "Acronym": "SP", 
            "Average": "61.51", 
            "Area": "Security", 
            "Summary": "This course studies the principles and practices of secure programming. Secure programming means writing programs in a safe fashion, to avoid vulnerabilities that can be exploited by attackers. It also means using security features provided by libraries, such as authentication and encryption, appropriately and effectively. A range of programming platforms will be considered, ranging from low-level (e.g. Android OS), through web programming (e.g., JavaScript and Python) to high-level large-scale languages (e.g., Java). New and emerging language-based security mechanisms will be examined, including ways of specifying and enforcing security policies statically and dynamically (e.g., to enforce access controls or information flow policies).", 
            "Delivery": "S2", 
            "Credits": "10", 
            "Course Description": "- Security maintainance of deployed software systems, including \"penetrate-and-patch\", vulnerability enumeration (CVE IDs) and classification (CWE taxonomy).\n\n- Secure programming techniques and common pitfalls, covering input validation, output filtering, use of cryptography and authentication. Standards such as the OWASP guidelines and the CERT Secure Coding Standards.\n\n- Malware (including adware, spyware) and its use of software vulnerabilities as an attack vector. Programming resilience against malware.\n\n- Low-level programming platforms, VMs and their security provisions, for example including process isolation, capabilities and permissions. Mobile operating system platforms as examples.\n\n- Web programming platforms and security provisions. HTTP protocol, forms, clientside and server-side threats and their avoidance.\n\n- High-level and Enterprise security programming, including cryptography via cryptographic libraries, authentication via GSSAPI.\n\n- Security APIs and their distinction from cryptography APIs. Use and design of security APIs for key management, hashing and encryption. Implementation in hardware and software.\n\n- Language-based techniques for assisting security programming, using dynamic enforcement via runtime monitoring and static enforcement via program analysis. Example tools.\n\n- Methods and tools for taint checking and information flow tracking to manage programming with sensitive data. Privacy risks with lack of encapsulation.\n\n- Methods and tools for controlling resource usage with permissions and capabilities, and static analysis for guarantees in advance.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11098.htm", 
            "Coordinator": "David Aspinall", 
            "Year": "4", 
            "Coursework/Exam": "30/70", 
            "Feedback": [
                "It was an unfortunate year where we had lots of missing lectures and unfortunate events. Not sure that could be improved.", 
                "\"Secure Software\" to better reflect the content.Lectures always overrun/not enough time to cover all materials intended. The course name could be \"Software Security\" or", 
                "Less strikes.", 
                "Not have a strike in the middle of it.", 
                "It also seems that labs and lectures are a bit out of sync. Lectures are too much theoretical and the labs seems to require to getUse piazza! No one uses Learn!", 
                "words...'Less theory in courseworks, or otherwise make the theory more usable than just 'look this CWE up and explain it in your own", 
                "Could have more detailed explanations in the solution sheet", 
                "I felt that the lab was a little more challenging since I wasn't able to make it and had to do it in my own time later.", 
                "No feedback at all.", 
                "divide labs into smaller chunks and deliver them every week.There were way too many exercises to do and it was hard to focus for 3 hours straight doing them. I think it would be better to"
            ]
        }, 
        {
            "Exam Diet": "December", 
            "Code": "INFR11092", 
            "Name": "Robotics: Science and Systems", 
            "Level": "11", 
            "Acronym": "RSS", 
            "Average": "77.21", 
            "Area": "Artificial Intelligence", 
            "Summary": "This course will be a Masters degree level introduction to several core areas in robotics: kinematics, dynamics and control; motion planning; state estimation and signal processing, localization and mapping. Lectures on these topics will be complemented by a large practical that exercises knowledge of a cross section of these techniques in the construction of an integrated robot in the lab, motivated by a task such as robot navigation. Also, in addition to lectures on algorithms and lab sessions, we expect that there will be several lecture hours dedicated to discussion of implementation issues - how to go from the equations to code.\n\n\n\nThe aim of the course is to present a unified view of the field, culminating in a practical involving the development of an integrated robotic system that actually embodies key elements of the major algorithmic techniques.", 
            "Delivery": "S1", 
            "Credits": "20", 
            "Course Description": "The tentative coverage of topics is as follows:\n\n- Kinematics - forward and inverse\n\n- Dynamics\n\n- Control - classical and modern control theories\n\n- Sensing - proprioception, etc.\n\n- Motion planning - basics and sampling based methods\n\n- State estimation, localization and mapping\n\n- Implementing SLAM; Multi-modal sensor fusion", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11092.htm", 
            "Coordinator": "Zhibin Li", 
            "Year": "5", 
            "Coursework/Exam": "50/50", 
            "Feedback": [
                "Be prepared to have it take up way more time than you expect.", 
                "Maybe it is because robotics is a really board area.Be very careful when trying to choose this course. It does give you something but personally I don't think I gain much.", 
                "deadline for presentation quickly approaching.Do everything incredibly early as the hardware will break constantly and you will be stuck without working parts with the", 
                "Don't waste time on too many tests of your robot without considering why the test failed.", 
                "make sure, you have a fundamental knowledge of Bayesian probability.For the lab session, make sure to have a clear idea about your robot to reduce time waste on rebuilding. Also, for theory,", 
                "Make lots of notes when making the robot", 
                "Practical\u2019s will take a lot of time, but they are fairly fun and rewarding. Recommend taking the course.", 
                "theoryGood lectures and good material for the course. Tutorials have been really useful for a proper understanding of the studied", 
                "Change the class room, and get a microphone for the professors", 
                "therefore delaying any development of the robot to a later date as no testing was able to be done on the robot. This was extremelyFirstly I would provide hardware that is actually reliable and works. The amount of issues with hardware was absolutely ridiculous,", 
                "Also give more time for the final report - Thursday sessions are given Monday deadline, which is a bit unfairFix robot parts please", 
                "1.Improvements I would make to the course:", 
                "of doubt clearing sessions.Instead of practical sessions, a theory based discussion of topics as a tutorial would have been more productive. There was a lack", 
                "Lecture recordings would be very useful, as there's a lot of information to take in and try to note down.", 
                "The practicals take a lot of time, and can be frustrating, but also rewarding. Updated equipment could be nice.", 
                "More practical examples and solutions during lectures on the techniques learnt.", 
                "Providing more robust hardware.", 
                "tackled but none of them with a proper degree of detail.Reduce the content of the course to really fundamental topics in Robotics and go in depth in them. Too many topics have been", 
                "1) I also feel that the equipment provided in the labs were outdated for 2017 - people are using gyros, accelerometers for basicWhat would make the labs great:", 
                "Very helpful tutors.", 
                "to get. Henrique Ferrolho, one of our demonstrators, was very impressive for his coming to help on weekends when our hardwareWe do not have these sections. But our demonstrators in the practical labs are helpful in explaining the goals we are supposed", 
                "Workshop very good, tutors so professional specially Vlad."
            ]
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR11118", 
            "Name": "Robotics and Autonomous Systems Research Thesis", 
            "Level": "11", 
            "Acronym": "RASRT", 
            "Average": "67.62", 
            "Area": "Artificial Intelligence", 
            "Summary": "Under the guidance of the supervisor, the student conducts a program of independent research in an area of Robotics and Autonomous Systems, and writes an extended dissertation on the topic. The dissertation must demonstrate a critical survey of knowledge in the field, a capability for pursuing research and a satisfactory plan for a more advanced research project, presented in a critical and scholarly way.", 
            "Delivery": "B5+", 
            "Credits": "100", 
            "Course Description": "Project Dependent", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11118.htm", 
            "Coordinator": "Michael Herrmann", 
            "Year": "5", 
            "Coursework/Exam": "100/0", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR11184", 
            "Name": "Practical Introduction to High Performance Computing (Distance Learning)", 
            "Level": "11", 
            "Acronym": "EPCC/15", 
            "Average": "Not Available", 
            "Area": "Parallel Programming", 
            "Summary": "High Performance Computing (HPC) is a fundamental technology used in solving scientific and commercial problems. Many of the grand challenges of science depend on simulations and models run on HPC facilities to make progress, for example: protein folding, the search for the Higgs boson and developing nuclear fusion. In industry, sophisticated computer models are integral to the development of products such as jet engines, wind turbines and new drugs.\n\n\n\nModern supercomputers are parallel computers, gaining their power from many thousands of individual processors. Developing software to run on these systems requires using new parallel programming techniques.\n\n\n\nThe course will cover all the fundamental concepts that underpin modern HPC. The course is practical in the sense that you will explore these topics by running parallel programs on real HPC systems such as the UK national supercomputer ARCHER.\n\n\n\nThe course will be delivered entirely online, and videos, notes and exercises will be released as the course progresses.\n\n\n\nN.B. This has a non-standard duration (20 weeks) which will be incompatible with many programmes.", 
            "Delivery": "S2", 
            "Credits": "20", 
            "Course Description": "Modern supercomputers are parallel computers, gaining their power from many thousands of individual processors. Developing software to run on these systems requires using new parallel programming technologies. The course will cover all the fundamental concepts that underpin modern HPC. The course is practical in the sense that you will explore these topic by running parallel programs on real HPC systems such as the UK national supercomputer ARCHER. The same techniques can also be applied to smaller systems such as multi-core desktops, graphics processors and computing clusters. \n\n\n\nThe course has three main themes:\n\n\n\n1) Hardware, Architectures, System Software\n\nHow are HPC systems constructed and what impact do components play in performance of applications? What system software is used on HPC systems and how does it impact the user experience?\n\n\n\n2) Parallel Programming\n\nWhat are the key parallel programming paradigms in use on modern HPC systems and how are they implemented and made available to users in practice? How do you measure parallel performance and scaling? How do you debug and profile parallel applications?\n\n\n\n3) Applications on HPC systems\n\nWhat types of applications run on modern HPC systems and what are the limiting factors to scaling and performance in these areas? What does the future hold for HPC applications - how will they run on next generation HPC systems.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11184.htm", 
            "Coordinator": "not allocated", 
            "Year": "5", 
            "Coursework/Exam": "100/0", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR11183", 
            "Name": "Practical Introduction to Data Science (Distance Learning)", 
            "Level": "11", 
            "Acronym": "EPCC/14", 
            "Average": "Not Available", 
            "Area": "Data Science", 
            "Summary": "This course is ONLY available to students on the online DSTI programmes (please see below* for alternatives).\n\n\n\nThis online course will provide a practical introduction to data science. It will have two broad themes, namely Data Management and Data Analytics.\n\n\n\nData Science is an emerging field, which is becoming very important both in research, business and industry. The amount of data that is being generated and stored is greater than it has ever been, and this brings both challenges in terms of how you work with the data and - importantly - rewards in terms of new insight gained from analysing the data.\n\n\n\nThe course is practical in the sense that you will have the chance to use R and Python to explore the techniques and ideas described in the course videos.\n\n\n\nThe course will be delivered entirely online, and videos, notes and exercises will be released as the course progresses.", 
            "Delivery": "S2", 
            "Credits": "20", 
            "Course Description": "Data Science means different things to different people. In this course, we interpret the term fairly broadly, and look at the various aspects of the process of extracting knowledge from data. This course is intended to give a broad introduction to the topic but it will get into sufficient detail to provide practical, hands-on experience of some of the tools and techniques used widely in academic research and in commercial environments.\n\n\n\nData Science is a very interdisciplinary field and so the course will expose students to aspects of computer science, software engineering, maths and statistics. It is designed to be accessible whether you come from one of these backgrounds, or whether you come from an applications area (be that in business, science, or elsewhere). \n\n\n\nThe course will have two main (intertwined) strands that will cover \"looking after data\" so that it can be used for analysis and the actual processing of this data to provide insight and answers to specific questions.\n\n\n\nThe course will cover:\n\n- Why managing data better matters, and why it's hard\n\n- Data formats: structuring data and keeping them useful Metadata: describing data and keeping them useful Research data management planning \n\n- Publication and citation of research data\n\n- Persistence, preservation and provenance of research data \n\n- Licensing, copyright and access rights: some things researchers need to know \n\n- Key data analytical techniques such as, classification, optimisation, and unsupervised learning \n\n- Key parallel patterns, such as Map Reduce, for implementing analytical techniques \n\n- Practical introductions to key Data Science tools and their application to data science problems, e.g., R, Python \n\n- Case studies from academia and business", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11183.htm", 
            "Coordinator": "not allocated", 
            "Year": "5", 
            "Coursework/Exam": "100/0", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR09047", 
            "Name": "Operating Systems", 
            "Level": "9", 
            "Acronym": "OS", 
            "Average": "71.63", 
            "Area": "Architecture", 
            "Summary": "This course provides an introduction to the design and implementation of general purpose multi-tasking operating systems. It concentrates on the kernel aspects of such systems with the emphasis being on concepts which lead to practical implementations. Throughout the course reference is made to a number of significant actual operating systems (Linux, Windows variants etc.) to illustrate real implementations.\n\n\n\nThis 20 credit course replaces INFR09015 - Operating Systems (10 credits).", 
            "Delivery": "S2", 
            "Credits": "20", 
            "Course Description": "Process management\n\n*The process concept, synchronisation, mutual exclusion, semaphores and monitors. Threads. Inter-process communication.\n\n\n\nResource Allocation\n\n*Deadlock prevention, avoidance and detection.\n\n\n\nThe OS Kernel\n\n*Micro and Monolithic kernels. Multi-tasking, privilege, interrupt handling. System and user processes. System calls.\n\n\n\nMemory Management\n\n*Description of problems of allocation, protection and sharing. Virtual Physical memory mapping schemes.\n\n*Segmented paged virtual memory. Paging control, replacement algorithms; the working set model. Sharing code and data.\n\n\n\nTime Management\n\n*CPU scheduling algorithms. Real-time scheduling. Disc access scheduling.\n\n\n\nFile Management\n\n*Naming and Directory schemes. Disc space allocation. File protection and access control. System security.\n\n\n\nOther Topics\n\n*Various additional topics may be included from year to year.\n\n\n\nRelevant QAA Computing Curriculum Sections: Operating Systems", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr09047.htm", 
            "Coordinator": "Michael O'Boyle", 
            "Year": "3", 
            "Coursework/Exam": "30/70", 
            "Feedback": [
                "Do the individual reading.", 
                "exam to be not really about OS but about ideas and fundamentals like scheduling in a weird essay formatted question, which ifGet ready for hours and hours of learning to understand errors from cpp gnu compiler and qemu. Expect the questions on the", 
                "well rested. It is somewhat difficult to understand at first but once you do, the implementation is reasonably straightforward.Go for it, both the lectures and the coursework are quite enjoyable. Make sure you read the coursework assignments while", 
                "It's easy to follow and understand.", 
                "Quite interesting and very good lecturers!", 
                "Recommended.", 
                "Start the assignments early.", 
                "to use an IDE that will highlight pointer assignment inconsistencies :-)Get started on the coursework early, as C++ and pointers can be quite confusing to wrap your head around! Also, make sure", 
                "Add some tutorials, maybe once every two weeks.", 
                "stupid mistakes, for example if the marker wants me to comment or log more.I am not pleased that we didn't receive feedback from CW2 before submitting CW3. They are similar and I don't want to repeat", 
                "know how to do such a task because much of the complexity was abstracted away, either by the lecturer's provided code or byI know it's probably hard to do it the proper way, but after doing the coursework assignments I didn't feel like that I, even partly,", 
                "in a group, practice c++ to train for coursework since c++ was never taught and that makes it difficult to do the coursework. ProvideProvide more information for tasks to be completed in the coursework. Add tutorials and or workshops to practice exam questions", 
                "study everything without lectures.Recordings! There were NO recordings and I could not make it to most of them due to personal issues so I'm basically having to", 
                "The code for the coursework is a bit of a mess in places. I would work on that a bit.", 
                "The coursework was hard to get started on, as there was no help given regarding C++. Also, the lecturer speaks very fast.", 
                "No tutorials, workshops or labs for this course."
            ]
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR11157", 
            "Name": "Natural Language Understanding, Generation, and Machine Translation", 
            "Level": "11", 
            "Acronym": "NLU+", 
            "Average": "Not Available", 
            "Area": "Natural Language Processing", 
            "Summary": "**This course replaces Natural Language Generation (Level 11) (INFR11060), Machine Translation (Level 11) (INFR11062) and Natural Language Understanding (Level 11) (INFR11061).**\n\n\n\nThis course explores current research on processing natural language: interpreting, generating, and translating. The course will focus mainly on deep learning approaches to various NLP tasks and applications. It will provide an introduction to the main neural network architectures used in NLP and how they are used for tasks such as syntactic and semantic parsing, as well as end-user applications such as machine translation and text summarization.\n\nBuilding on linguistic and algorithmic knowledge taught in prerequisite courses, this course also aims to further develop students' understanding of the strengths and weaknesses of current approaches with respect to linguistic and computational considerations. Practical assignments will provide the opportunity to implement and analyse some of the approaches considered.", 
            "Delivery": "S2", 
            "Credits": "20", 
            "Course Description": "The course aims to familiarize students with recent research across a range of topics within NLP, mainly within the framework of neural network models, and with a focus on applications such as machine translation, summarisation, and semantic parsing. As an MSc-level course that assumes previous experience with NLP, it will discuss a range of different issues, including linguistic/representational capacity, computational efficiency, optimization, etc. There is no textbook for the course; readings will come from recent research literature.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11157.htm", 
            "Coordinator": "Adam Lopez", 
            "Year": "4", 
            "Coursework/Exam": "30/70", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "December", 
            "Code": "INFR11165", 
            "Name": "Natural Computing (Distance Learning)", 
            "Level": "11", 
            "Acronym": "NAT-DL", 
            "Average": "Not Available", 
            "Area": "Misc.", 
            "Summary": "*Please note that this is an online learning course, aimed at students on the DSTI or Informatics distance learning programmes*.\n\n\n\nThis module teaches you about bio-inspired algorithms for optimisation and search problems. The algorithms are based on simulated evolution (including Genetic algorithms and Genetic programming), particle swarm optimisation, ant colony optimisation as well as systems made of membranes or biochemical reactions among molecules. These techniques are useful for searching very large spaces. For example, they can be used to search large parameter spaces in engineering design and spaces of possible schedules in scheduling. However, they can also be used to search for rules and rule sets, for data mining, for good feed-forward or recurrent neural nets and so on. The idea of evolving, rather than designing, algorithms and controllers is especially appealing in AI. In a similar way it is tempting to use the intrinsic dynamics of real systems consisting e.g. of quadrillions of molecules to perform computations for us. The course includes technical discussions about the applicability and a number of practical applications of the algorithms.\n\n\n\nIn this module, students will learn about\n\n\n\n- The practicalities of natural computing methods: How to design algorithms for particular classes of problems.\n\n\n\n- Some of the underlying theory: How such algorithms work and what is provable about them. \n\n\n\n- Issues of experimental design: How to decide whether an metaheuristic algorithm works well. \n\n\n\n- Current commercial applications. \n\n\n\n- Current research directions.", 
            "Delivery": "S1", 
            "Credits": "10", 
            "Course Description": "The lectures will cover the following subjects:\n\n\n\n- Computational aspects of animal behaviour and of biological, chemical or physical systems.\n\n- The basics of Genetic Algorithms: selection, recombination and mutation, fitness and objective functions\n\n- Variants of GAs: different types of crossover and mutation, of selection and replacement. Inversion and other operators, crowding, niching, island and cellular models\n\n- Theory: the schema theorem and its flaws; selection takeover times; statistical mechanics approaches as a theoretical basis for studying GA issues\n\n- Hybrid algorithms, memetic algorithms\n\n- Pareto optimisation\n\n- Ant Colony Optimisation: Basic method for the travelling salesperson problem, local search, application to bin packing, tuning, convergence issues and complexity.\n\n- Swarm intelligence, particle swarms, differential evolution.\n\n- Greedy randomized adaptive search procedure\n\n- DNA computing, molecular computing, membrane computing.\n\n- Applications such as engineering optimisation; scheduling and timetabling; data-mining; neural net design.\n\n- Comparisons among metaheuristic algorithms, no-free-lunch theorems \n\n- Experimental issues: design and analysis of sets of experiments.\n\n\n\nRelevant QAA Computing Curriculum Sections: Artificial Intelligence, Data Structures and Algorithms, Simulation and Modelling", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11165.htm", 
            "Coordinator": "Michael Herrmann", 
            "Year": "5", 
            "Coursework/Exam": "30/70", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "December", 
            "Code": "INFR11161", 
            "Name": "Natural Computing", 
            "Level": "11", 
            "Acronym": "NAT", 
            "Average": "Not Available", 
            "Area": "Misc.", 
            "Summary": "This module teaches you about bio-inspired algorithms for optimisation and search problems. The algorithms are based on simulated evolution (including Genetic algorithms and Genetic programming), particle swarm optimisation, ant colony optimisation as well as systems made of membranes or biochemical reactions among molecules. These techniques are useful for searching very large spaces. For example, they can be used to search large parameter spaces in engineering design and spaces of possible schedules in scheduling. However, they can also be used to search for rules and rule sets, for data mining, for good feed-forward or recurrent neural nets and so on. The idea of evolving, rather than designing, algorithms and controllers is especially appealing in AI. In a similar way it is tempting to use the intrinsic dynamics of real systems consisting e.g. of quadrillions of molecules to perform computations for us. The course includes technical discussions about the applicability and a number of practical applications of the algorithms.\n\n\n\nIn this module, students will learn about\n\n\n\n- The practicalities of natural computing methods: How to design algorithms for particular classes of problems.\n\n\n\n- Some of the underlying theory: How such algorithms work and what is provable about them. \n\n\n\n- Issues of experimental design: How to decide whether an metaheuristic algorithm works well. \n\n\n\n- Current commercial applications. \n\n\n\n- Current research directions.", 
            "Delivery": "S1", 
            "Credits": "10", 
            "Course Description": "The lectures will cover the following subjects:\n\n\n\n- Computational aspects of animal behaviour and of biological, chemical or physical systems.\n\n- The basics of Genetic Algorithms: selection, recombination and mutation, fitness and objective functions\n\n- Variants of GAs: different types of crossover and mutation, of selection and replacement. Inversion and other operators, crowding, niching, island and cellular models\n\n- Theory: the schema theorem and its flaws; selection takeover times; statistical mechanics approaches as a theoretical basis for studying GA issues\n\n- Hybrid algorithms, memetic algorithms\n\n- Pareto optimisation\n\n- Ant Colony Optimisation: Basic method for the travelling salesperson problem, local search, application to bin packing, tuning, convergence issues and complexity.\n\n- Swarm intelligence, particle swarms, differential evolution.\n\n- Greedy randomized adaptive search procedure\n\n- DNA computing, molecular computing, membrane computing.\n\n- Applications such as engineering optimisation; scheduling and timetabling; data-mining; neural net design.\n\n- Comparisons among metaheuristic algorithms, no-free-lunch theorems \n\n- Experimental issues: design and analysis of sets of experiments.\n\n\n\nRelevant QAA Computing Curriculum Sections: Artificial Intelligence, Data Structures and Algorithms, Simulation and Modelling", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11161.htm", 
            "Coordinator": "Michael Herrmann", 
            "Year": "4", 
            "Coursework/Exam": "30/70", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR11109", 
            "Name": "MSc by Research Thesis (Pervasive Parallelism)", 
            "Level": "11", 
            "Acronym": "RTPP", 
            "Average": "76.89", 
            "Area": "Misc.", 
            "Summary": "Under the guidance of the supervisor, the student conducts a program of independent research in an area of Pervasive Parallelism, and writes an extended dissertation on the topic. The dissertation must demonstrate a critical survey of knowledge in the field, a capability for pursuing research and a satisfactory plan for a more advanced research project, presented in a critical and scholarly way.", 
            "Delivery": "YR", 
            "Credits": "140", 
            "Course Description": "Project dependent.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11109.htm", 
            "Coordinator": "Murray Cole", 
            "Year": "5", 
            "Coursework/Exam": "100/0", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR11107", 
            "Name": "MSc by Research Thesis (Data Science; 120pt)", 
            "Level": "11", 
            "Acronym": "RTDS+", 
            "Average": "72.00", 
            "Area": "Misc.", 
            "Summary": "Students will pursue a year long research project in Data Science which results in a written dissertation. The research must demonstrate competence, knowledge, and be presented in a critical and scholarly way, demonstrating that the student is capable of undertaking independent research.\n\n\n\nFor this 120 credit project, the dissertation will normally include a more extensive investigation and critical evaluation of the topic, the use of more advanced methodology, or more time-intensive research methods than in a 90 credit project.", 
            "Delivery": "YR", 
            "Credits": "120", 
            "Course Description": "Project dependent.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11107.htm", 
            "Coordinator": "Adam Lopez", 
            "Year": "5", 
            "Coursework/Exam": "100/0", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR11106", 
            "Name": "MSc by Research Thesis (Data Science)", 
            "Level": "11", 
            "Acronym": "RTDS", 
            "Average": "75.89", 
            "Area": "Misc.", 
            "Summary": "Students will pursue an eight-month research project in Data Science which results in a written dissertation. The research must demonstrate competence, knowledge, and be presented in a critical and scholarly way, demonstrating that the student is capable of undertaking independent research.", 
            "Delivery": "B5+", 
            "Credits": "90", 
            "Course Description": "Project dependent.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11106.htm", 
            "Coordinator": "Adam Lopez", 
            "Year": "5", 
            "Coursework/Exam": "100/0", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR11077", 
            "Name": "MSc Dissertation (Informatics)", 
            "Level": "11", 
            "Acronym": "DISS", 
            "Average": "63.86", 
            "Area": "Misc.", 
            "Summary": "This is a major piece of full-time independent work which occupies the final months of the MSc course. It is intended to allow students to demonstrate their ability to organise and carry out a substantial investigation into a problem in Informatics, according to sound scientific and engineering principles. The project involves both the application of skills learnt in the past and the acquisition of new skills.\n\n\n\nThe types of activity involved in each project will vary but will include most of the following:\n\n\n\n    * Researching the literature and gathering background information.\n\n    * Analysing requirements, comparing alternatives and specifying a solution.\n\n    * Analysing and extending relevant theory in novel ways.\n\n    * Designing and implementing the solution.\n\n    * Experimenting with and evaluating the solution.\n\n    * Discussing existing results and presenting new research.\n\n    * Developing written and oral presentation skills.\n\n\n\nThe project is conducted individually by the student under the supervision of a member of teaching staff. Students are formed into groups for the purpose of a Review Meeting.", 
            "Delivery": "B5+", 
            "Credits": "60", 
            "Course Description": "Project dependent", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11077.htm", 
            "Coordinator": "Richard Mayr", 
            "Year": "5", 
            "Coursework/Exam": "100/0", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR11093", 
            "Name": "MInf Project (Part 2)", 
            "Level": "11", 
            "Acronym": "MIP2", 
            "Average": "74.81", 
            "Area": "Misc.", 
            "Summary": "This is the second half a major project that runs over the fourth and fifth years. It is intended to allow students to demonstrate their ability to organise and carry out a substantial piece of work. The project involves both the application of skills learnt in the past and the acquisition of new skills. Typical areas of activity will be: gathering and understanding background information; solving conceptual problems; design; implementation; experimentation and evaluation; writing up.\n\nThe project is conducted individually by the student under the supervision of a member of teaching staff. The project specification is usually provided by a member of staff, but students are also free to specify their own project. All project specifications must be approved by the Project Coordinator.\n\nThe project will normally involve the construction of an artifact, whether software, hardware, a robotic device, some other artifact incorporating computation, or some combination of these.\n\nThis second half continues from MInf Project (Part 1) starting with work identified in the Conclusion section of the report for MInf Project (Part 1). It is expected that work here will go into greater depth, the work carried out is not necessarily limited to that which was identified in MInf Project (Part 1).", 
            "Delivery": "FLEX", 
            "Credits": "40", 
            "Course Description": "Project dependent", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11093.htm", 
            "Coordinator": "Don Sannella", 
            "Year": "5", 
            "Coursework/Exam": "100/0", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR10051", 
            "Name": "MInf Project (Part 1)", 
            "Level": "10", 
            "Acronym": "MIP1", 
            "Average": "63.35", 
            "Area": "Misc.", 
            "Summary": "This is the first half a major project that runs over the fourth and fifth years. It is intended to allow students to demonstrate their ability to organise and carry out a substantial piece of work. The project involves both the application of skills learnt in the past and the acquisition of new skills. Typical areas of activity will be: gathering and understanding background information; solving conceptual problems; design; implementation; experimentation and evaluation; writing up.\n\n\n\nThe project is conducted individually by the student under the supervision of a member of teaching staff. The project specification is usually provided by a member of staff, but students are also free to specify their own project. All project specifications must be approved by the Project Coordinator.\n\n\n\nThe project will normally involve the construction of an artifact, whether software, hardware, a robotic device, some other artifact incorporating computation, or some combination of these.\n\n\n\nThis first half consists of a project that is essentially self contained but it should be planned in such a way as to allow for expansion and greater depth for the following year. Note that as this is the first half of an 80 point project it is recognized that a longer planning phase might be involved as compared to a standard UG4 project. In any case, the report should include a clear account of this aspect along with a justification.", 
            "Delivery": "FLEX", 
            "Credits": "40", 
            "Course Description": "Project dependent", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr10051.htm", 
            "Coordinator": "Don Sannella", 
            "Year": "4", 
            "Coursework/Exam": "100/0", 
            "Feedback": [
                "Choose a dedicated supervisor - ask older students about their experience.", 
                "mechanism for a student to report this and ask for help.Supervisors should be held accountable for being available to their students, and in case they are not, there should be a safe", 
                "No student comments"
            ]
        }, 
        {
            "Exam Diet": "December", 
            "Code": "INFR11152", 
            "Name": "Introductory Applied Machine Learning (Distance Learning)", 
            "Level": "11", 
            "Acronym": "IAML-DL", 
            "Average": "60.50", 
            "Area": "Machine Learning", 
            "Summary": "*This course is for distance learning students within the School of Informatics and students on the Data Science, Technology & Innovation programme*.\n\n\n\nOrganisations seek to make better decisions by examining their data with an aim to discovering and/or drawing conclusions about the information contained within. This course is about the principled application of machine learning techniques to extracting information from data. The main area that will be discussed is supervised learning, which is concerned with learning to predict an output, given inputs. A second area of study is unsupervised learning, where we wish to discover the structure in a set of patterns, i.e. there is no output \"teacher signal\". The primary aim is to provide the student with a set of practical tools that can be applied to solve real - world problems in machine learning, coupled with an appropriate, principled approach to formulating a solution.\n\n\n\nThis distance-based course is aligned with the on-campus Introductory Applied Machine Learning course (INFR11181), which uses a flipped classroom delivery approach. Distance students will cover the same or similar materials, have the same coursework, engage in the same or similar classroom activities, and take the same exam as the on-campus students.", 
            "Delivery": "S1", 
            "Credits": "20", 
            "Course Description": "This course is delivered using \"flipped-classroom\" methods. Intellectual content will be delivered via a combination of online short video segments (overall, per topic, approximately the same length as a traditional lecture). Some of the topics have online quizzes associated with them, intended for you to review your understanding. During most of the lecture slots we will have other activities to review the topic material, also available by online recording.\n\n\n\nWe expect to cover the following general areas:\n\n\n\n1.\tReview of maths and probability\n\n2.\tFeature engineering (e.g., basis transforms, selection , Principal Components Analysis)\n\n3.\tClassification vs. Regression\n\n4.\tSupervised methods (e.g., Naive Bayes, Decision Trees and Random Forests, Linear & Logistic Regression, Support Vector Machines, Nearest Neighbours, Neural Networks)\n\n5.\tUnsupervised clustering methods (e.g., k-Means, Gaussian Mixture Models, Hierarchical Clustering)\n\n\n\nWe will use a modern machine learning programming environment and industry-standard libraries.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11152.htm", 
            "Coordinator": "Nigel Goddard", 
            "Year": "5", 
            "Coursework/Exam": "50/50", 
            "Feedback": [
                "Be prepared for a lot of work", 
                "much help from the course organisers.Don't take this course unless a) you fully understand the pre-requisites b) meet them. If distance students, don't expect", 
                "to class sessions/Q&A - this is your only chance to see \"live\" delivery. Expect to be ignored on forums - do not expectDo expect subjective assessments of your work, do not expect any meaningful feedback on your assessments. Do listen", 
                "techniques in a machine environment.Good to know as much of the maths background as possible before hand so you can focus on the application of the", 
                "you know is Windows.Install python and test Jupyter BEFORE you start. Pay someone to do it if you can\u2019t. And ignore all Unix Dice stuff, if all", 
                "They explain things at a level which (quite rightly) is not explained on a MastersDo the Andrew Ng Stanford University Machine Learning course on Coursera first. If I hadn\u2019t done that I would have failed.", 
                "get the maths and python nailed before you start", 
                "Can't think of any it met all my requirements.", 
                "students. Completely reorganise and record new lectures - neither current materials nor delivery are acceptable. Hold timely classClearly state EVERY pre-requisite BEFORE course starts. Clearly segregate requirements for Distance Learning and ordinary", 
                "were not your responsibility but you only need to do a little more to help students like me a great deal. I'm willing to bet most studentsFirstly to set the context: I was the best student on my last masters and I struggled on this one. Quite a lot of the issues I faced", 
                "2. Offer one simple installation guide - instead of 3-5 unaligned pages with conflicting info, no machine, putty the things I wasted time1. Upload all information at least 1 month in advance", 
                "None, I think it is excellent.", 
                "At least touch on more advanced topics. Like where to go next. In the end these models are only the beginning.", 
                "learning etc and beyond.Would have been nice to have a section that just briefly introduced the latest cutting edge like deep learning and reinforcement"
            ]
        }, 
        {
            "Exam Diet": "December", 
            "Code": "INFR11182", 
            "Name": "Introductory Applied Machine Learning", 
            "Level": "11", 
            "Acronym": "IAML-PG", 
            "Average": "Not Available", 
            "Area": "Machine Learning", 
            "Summary": "Organisations seek to make better decisions by examining their data with an aim to discovering and/or drawing conclusions about the information contained within. This course is about the principled application of machine learning techniques to extracting information from data. The main area that will be discussed is supervised learning, which is concerned with learning to predict an output, given inputs. A second area of study is unsupervised learning, where we wish to discover the structure in a set of patterns, i.e. there is no output \"teacher signal\". The primary aim is to provide the student with a set of practical tools that can be applied to solve real - world problems in machine learning, coupled with an appropriate, principled approach to formulating a solution.", 
            "Delivery": "S1", 
            "Credits": "20", 
            "Course Description": "This course is delivered using \"flipped-classroom\" methods. Intellectual content will be delivered via a combination of online short video segments (overall, per topic, approximately the same length as a traditional lecture). Some of the topics have online quizzes associated with them, intended for you to review your understanding. During most of the lecture slots we will have other activities to review the topic material, also available by online recording.\n\n\n\nWe expect to cover the following general areas:\n\n\n\n1. Review of maths and probability\n\n2. Feature engineering (e.g., basis transforms, selection , Principal Components Analysis)\n\n3. Classification vs. Regression\n\n4. Supervised methods (e.g., Naive Bayes, Decision Trees and Random Forests, Linear & Logistic Regression, Support Vector Machines, Nearest Neighbours, Neural Networks)\n\n5. Unsupervised clustering methods (e.g., k-Means, Gaussian Mixture Models, Hierarchical Clustering)\n\n\n\nWe will use a modern machine learning programming environment and industry-standard libraries.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11182.htm", 
            "Coordinator": "Nigel Goddard", 
            "Year": "5", 
            "Coursework/Exam": "50/50", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "December", 
            "Code": "INFR11153", 
            "Name": "Introduction to Vision and Robotics (Distance Learning)", 
            "Level": "11", 
            "Acronym": "IVR-DL", 
            "Average": "40.25", 
            "Area": "Artificial Intelligence", 
            "Summary": "*This course is available to distance learning students within the School of Informatics and students on the Data Science, Technology & Innovation programme.*\n\n\n\nThe course introduces the basic concepts and methods in the field of robotics and computer vision.", 
            "Delivery": "S1", 
            "Credits": "10", 
            "Course Description": "Robotics and Vision applies AI techniques to the problems of making devices capable of interacting with the physical world. This includes moving around in the world (mobile robotics), moving things in the world (manipulation robotics), acquiring information by direct sensing of the world (e.g. machine vision) and, importantly, closing the loop by using sensing to control movement. Applying AI in this context poses certain problems, and sets certain limitations, which have important effects on the general software and hardware architectures. For example, a robot with legs must be able to correct detected imbalances before it falls over, and a robot which has to look left and right before crossing the road must be able to identify approaching hazards before it gets run over. These constraints become much more serious if the robot is required to carry both its own power supply and its own brain along with it. This course introduces the basic concepts and methods in these areas, and serves as an introduction to the more advanced robotics and vision modules.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11153.htm", 
            "Coordinator": "Timothy Hospedales", 
            "Year": "5", 
            "Coursework/Exam": "30/70", 
            "Feedback": [
                "Learn python first", 
                "Brush up on trigonometry", 
                "Assignment due date was only finalised 3 days before. Submission details were only supplied two days before due date and did notCourse description should state that the assignment is python heavy. This was not even mentioned", 
                "went along.To have more clear structure from the beginning and organise the course a little better. It all seemed a bit adhoc, made up as it", 
                "Course TA was very difficult to get hold of and not very willing to help."
            ]
        }, 
        {
            "Exam Diet": "December", 
            "Code": "INFR09019", 
            "Name": "Introduction to Vision and Robotics", 
            "Level": "9", 
            "Acronym": "IVR", 
            "Average": "63.65", 
            "Area": "Artificial Intelligence", 
            "Summary": "Robotics and Vision applies AI techniques to the problems of making devices capable of interacting with the physical world. This includes moving around in the world (mobile robotics), moving things in the world (manipulation robotics), acquiring information by direct sensing of the world (e.g. machine vision) and, importantly, closing the loop by using sensing to control movement. Applying AI in this context poses certain problems, and sets certain limitations, which have important effects on the general software and hardware architectures. For example, a robot with legs must be able to correct detected imbalances before it falls over, and a robot which has to look left and right before crossing the road must be able to identify approaching hazards before it gets run over. These constraints become much more serious if the robot is required to carry both its own power supply and its own brain along with it. This module introduces the basic concepts and methods in these areas, and serves as an introduction to the more advanced robotics and vision modules.", 
            "Delivery": "S1", 
            "Credits": "10", 
            "Course Description": "The issues addressed will include the following:\n\n\n\n* Applications of robotics and vision; the nature of the problems to be solved; historical overview and current state of the art.\n\n* Robot actuators and sensors. Parallels to biological systems.\n\n* Robot control: Open-loop, feed-forward and feedback; PID (proportional integral differential) control.\n\n* Image formation, transduction and simple processing; thresholding, filtering and classification methods for extracting object information from an image.\n\n* Active vision and attention.\n\n* Sensors for self monitoring.\n\n* General approaches and architectures. Classical vs. behaviour-based robotics. Wider issues and implications of robot research. \n\n\n\nThe course also involves hands-on practicals in which vision and robot systems will be programmed.\n\n\n\nRelevant QAA Computing Curriculum Sections:  Artificial Intelligence; Computer Vision and Image Processing", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr09019.htm", 
            "Coordinator": "Michael Herrmann", 
            "Year": "3", 
            "Coursework/Exam": "30/70", 
            "Feedback": []
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR10059", 
            "Name": "Introduction to Theoretical Computer Science", 
            "Level": "10", 
            "Acronym": "ITCS", 
            "Average": "72.74", 
            "Area": "Theory of Computation", 
            "Summary": "This course introduces the fundamental concepts of the theory of computer science: what does `computing' mean? Are all `computers' basically the same? Can we tell whether our programs are `correct' - and what does `correct' mean, anyway? Can we solve problems in reasonable time, and can we tell whether we can?\n\nThe course concentrates primarily on conceptual understanding, but adds enough detail to allow students to go on to further courses, and illustrates how the fundamental concepts are reflected throughout the discipline.", 
            "Delivery": "S2", 
            "Credits": "10", 
            "Course Description": "The first section of the course asks the question, what does it mean to compute? We start with very simple abstract computers, and argue they can do everything real computers can do. We then ask, can we solve every computational question? The answer, which which Turing shocked the mathematicians of the 1930s, is \"no\", with a remarkably easy but beautiful argument (introduced at the end of Inf2A). We then explore some different, but always equivalent, ways of defining \"a computer\". We finish the section by asking how we can compare the difficulty of different problems, and introduce the idea of \"reduction\" as a way of compiling one problem into another. Technically, this covers register machines, undecidability, Turing machines, and reductions. \n\n\n\nThe second section thinks about how hard it is to solve solvable problems, leading to one of the most important problems in all mathematics, and the foundation of internet security. We start by reprising Inf2A analysis of algorithms, and then discuss the idea of classifying problems as `tractable' (easy) or `intractable' (hard). We find that the idea of algorithms whose running time grows polynomially in the problem size is a good mathematical definition of `tractable', though not always a practical one. After making this more precise, we ask what happens if we're allowed to just check all the possible answers in parallel - does this give us more problem-solving power? The question is made precise by the concept of NP, and we show that there are \"hardest\" such problems, such as the famous Travelling Salesman. Although the question is easy to ask, nobody knows how to answer it. This is P = NP - if you can solve it, you win a million dollars, and fame for as long as civilization lasts.   So far, NP problems are very hard to solve in practice, so we discuss how to deal with them. We finish the section by talking about much harder problems still. Technically, this section covers P, NP, hardness and completeness, Cook's Theorem, P = NP, and the complexity hierarchy above NP. \n\n\n\nThe third section considers a different way of seeing computation. Haskell needn't be seen as a programming language, it can be the computer itself. We'll show how the lambda-calculus (on which Haskell is based) can do all the computing our other models could. Unlike the register and Turing machines, lambda-calculus lets us easily use types, which get rid of a whole class of possible bugs from our programs. This \"typing\" underlies almost all modern languages, including such recent things as generics in Java. We'll show how we can decide whether a lambda program is correct in its type, and even how we can do the typing automatically, instead of making the programmer do it. It turns out that this latter is one of those weird problems that is ridiculously hard in theory, but perfectly doable in practice, which bring us back to the complexity hierarchies of the second section. Technically, this covers lambda-calculus, simple types, polymorphism, type checking and type inference. \n\n\n\n\n\nRegister and Turing machines, undecidability, reductions. Intractability and growth rates. P and poly-time reductions, NP, hardness and completeness. Cook's Theorem. P = NP. Beyond NP. Lambda-calculus, through to simply-typed lambda, type safety, polymorphism, type inference and Hindley-Milner.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr10059.htm", 
            "Coordinator": "Chris Heunen", 
            "Year": "3", 
            "Coursework/Exam": "30/70", 
            "Feedback": [
                "to material taught each week.Do the coursework as the semester progresses - it makes it a lot more manageable, and the questions roughly correspond", 
                "Hard work if you're not already proficient at this type of thing but worth it.", 
                "would recommend.Mathematics and proofs heavy, but extremely well explained so that even if you're struggling you're unlikely to fall behind,", 
                "Read the notes! They are good! And do the coursework as soon as you can!", 
                "It would be better if there's more examples and some interesting questions that inspires", 
                "throughout about all aspects of the situation.Overall I think this is a good course, it was only set back die to the strikes, but the lecturer communicated with us before and", 
                "Spend more time covering basics", 
                "to put my answer into a good, logical format.Talk through more how to construct your answers to the types of questions asked in tutorials and the exam as I found it difficult", 
                "I found the tutor's explanations difficult to follow.", 
                "helpfulI like the idea of dividing tutorial groups into two kinds (for people more interested and less interested in the subject). Tutors were", 
                "They weren't as good as the lectures, but I have found the questions in the tutorials really interesting.", 
                "They're not helpful unless you're prepared", 
                "Tutors were helpful and willing to go beyond the basic material.", 
                "it would be helpful if we can get the answer for the tutorial"
            ]
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR11138", 
            "Name": "Introduction to Research in Data Science", 
            "Level": "11", 
            "Acronym": "IRDS", 
            "Average": "73.71", 
            "Area": "Data Science", 
            "Summary": "This course provides students with an overview of current research topics in data science. This overview is provided by guest lectures from researchers working throughout different areas of data science, including databases, machine learning, maths, natural language processing, computer vision, speech processing, and related areas.\n\n\n\nSecond, this course also features a small project to provide students with experience in applying data science methods. The goal of the project is to apply an existing data science method to a interesting real or realistic problem. The student will produce a short project report and poster presentation based on the project.", 
            "Delivery": "S1", 
            "Credits": "20", 
            "Course Description": "This course provides students with an overview of current research topics in data science. This overview is provided by guest lectures from researchers working throughout different areas of data science, including databases, machine learning, maths, natural language processing, computer vision, speech processing, and related areas.\n\n\n\nSecond, this course also features a small project to provide students with experience in applying data science methods. The goal of the project is to apply an existing data science method to a interesting real or realistic problem. The student will produce a short project report and poster presentation based on the project.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11138.htm", 
            "Coordinator": "Amos Storkey", 
            "Year": "5", 
            "Coursework/Exam": "100/0", 
            "Feedback": [
                "Get to know others in the class and learn from them.", 
                "and had to go and look up. I still don't feel confident that I've understood it correctly, but I'm too embarrassed to ask. It would also beI feel that too much background knowledge of data analysis and statistics was assumed. There were a lot of terms I didn't know", 
                "for a conference. If IRDS runs for two semesters, we could submit the IRDS project on the first semester and the literature review onThe course could run for two semesters. This allows more time deal with important topics such as how to properly write a paper", 
                "did not seem open to new ideas, or views from the students to improve their work.Something more intellectual, and unbiased talks from others (the talks were a little biased and not \"real-world\"). Visiting speakers", 
                "No student comments."
            ]
        }, 
        {
            "Exam Diet": "VUG: December; April/May", 
            "Code": "INFR11099", 
            "Name": "Introduction to Quantum Computing", 
            "Level": "11", 
            "Acronym": "IQC", 
            "Average": "67.00", 
            "Area": "Theory of Computation", 
            "Summary": "The aim of this course is to give students a basic overview of the rapidly growing field of Quantum Computation (QC). The course will start with a brief introduction of the mathematical framework of QC. The two models of quantum circuit and measurement-based quantum computing, will be introduced. Through these models various key concepts in QC such as entanglement and teleportation will be discussed. In order to compare QC and classical computing, simple quantum algorithms with their complexity analysis will be presented. We finish the course by highlighting the recent development of the field in secure delegated QC.", 
            "Delivery": "S1", 
            "Credits": "10", 
            "Course Description": "- Basic concepts from Linear Algebra necessary for understanding the axioms of Quantum Mechanics,\n\n- Axioms of Quantum Mechanics, describing quantum system, quantum operators, composition, entanglement and measurements\n\n- The no cloning, no deleting theorems and the consequences for computation\n\n- Quantum Computing via quantum circuit model: Description of qubit and universal set of gates.\n\n- Quantum space and depth complexity and oracle model\n\n- Classical simulation of quantum circuit and Gottesman-Knill Theorem\n\n- Quantum Algorithms: Grover\u00bfs Search and Deutsch-Jozsa problem\n\n- The first quantum protocols: Quantum teleportation and super dense coding\n\n- Quantum Computing via measurement-based model: Description of graph state and measurement calculus\n\n- Advanced Topics: Information flow in measurement-based model, unconditionally secure quantum cloud computing", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11099.htm", 
            "Coordinator": "Petros Wallden", 
            "Year": "4", 
            "Coursework/Exam": "10/90", 
            "Feedback": [
                "Go through Berkeley's QC course at the same time. It will be much easier to understand the basic QM and algorithms.", 
                "This is a great introduction to quantum computing that would probably be difficult to get introduced to otherwise.", 
                "stuff completely at home is hard.Keep up with the subjects from the beginning. Otherwise it is nearly impossible to follow the next lectures, and learning the", 
                "- Look into setting up a Piazza forum, when people can ask and answer questions.Most importantly:", 
                "- An assignment part with Liquid would be interesting or perhaps even a second assignment dedicated to Liquid.These are minor, in no particular order:", 
                "The intuition given in the tutorials was very helpful."
            ]
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR11131", 
            "Name": "Introduction to Modern Cryptography", 
            "Level": "11", 
            "Acronym": "IMC", 
            "Average": "63.93", 
            "Area": "Security", 
            "Summary": "Cryptography is the formal study of the notion of security in information systems. The course will offer a thorough introduction to modern cryptography focusing on models and proofs of security for various basic cryptographic primitives and protocols including key exchange protocols, commitment schemes, digital signature algorithms, oblivious transfer protocols and public-key encryption schemes.   Applications to various problems in secure computer and information systems will be briefly discussed including secure multiparty computation, digital content distribution, e-voting systems, digital payment systems, cryptocurrencies.", 
            "Delivery": "S2", 
            "Credits": "10", 
            "Course Description": "The area of cryptography focuses on various problems pertaining to secure communication and computation. It entails the study of models that express security properties as well as the algorithms and protocols that are the implementation candidates for satisfying these properties. An important dimension of modern cryptography is the design of security proofs that establish security properties. Such proofs are conditional on assumptions that fall in two categories: \"system assumptions\" such as the faithful execution of code, or the availability of private randomness and \"computational assumptions\" that are related to the computational complexity of various problems (including factoring large numbers and others). Students will learn to model security problems, design protocols and prove them secure under precisely formulated system and computational assumptions.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11131.htm", 
            "Coordinator": "Vassilis Zikas", 
            "Year": "4", 
            "Coursework/Exam": "10/90", 
            "Feedback": [
                "Go to all the lectures.", 
                "is needed. Attendance is highly recommended.Have a clear understanding of probabilities and math. Furthermore, at least a basic understanding of computer security topics", 
                "lecturer provides 3-4 problems (including the assignment). If you know good maths you'll find the course very easy.If you want to delve deeper into the material get also a textbook and study it in parallel and solve exercise from there. The", 
                "Learn group theory fast.", 
                "Cryptography by Katz and Lindell covers many of the same topics, but offers a different perspective).Make sure to attend all lectures, and use another textbook if the notes aren't too clear (e.g. Introduction to Modern", 
                "during class and ask questions whenever explanations are not clearOnly take this course if you have strong foundations in proofs and probability theory, and make sure to take good notes", 
                "Revise the material many times at home and seek explanation in the recommended reading.", 
                "Very mathematical. This course is about why (mathematically) something is cryptographically secure.", 
                "probability questions. If you are not very interested in cryptography you may find this course unrewarding and very difficult.For the course in its current form, make sure that you have a solid background in probability and are comfortable with", 
                "and the notation used was overwhelming, inconsistent with the notes and within the lecture itself. The notes also are notFrom the third lecture on, quality seem to decline rapidly. Explanations on the algorithms were often rushed to finish the proofs,", 
                "even mentioned.The website was never up to date, and the topic of the last lecture (which doesn't seem to be even covered by the notes) is not", 
                "It would also have been nice to have some extra information on the coursework before its release.", 
                "given a proof without the context -- the lecturer had been writing it for a straight hour before saying why we are doing this. QuestionsI am sorry to say that I am disappointed with this course. First of all, lectures were chaotic. For example, at one lecture we were", 
                "understand (because this is not a trivial course).I'd see more structure in the lecture, maybe dividing some big problem into sub-problems -- the material would be much easier to", 
                "Introduce lecture recording from the first lecture. The depth of this course is too much.", 
                "Record lectures. Add tutorials for students to discuss and ask questions. Ensure substitute teachers are better prepared.", 
                "Have a discussion forumRecord the lectures. Write clearer on the board as it can be hard to read it and there are no slides. Make coursework clearer.", 
                "needed to reinforce the material. The lecturer has given very few. Ideally we should have weekly or biweekly tutorials. If this is notThe course material is far too easy for a level 11 course. I think it should be given at a much faster pace. Also exercises are", 
                "syllabus was established, and additional reading given from books.The lectures don't really seem to follow the provided notes and no other reading material is given - it would be helpful if a clearer", 
                "Weekly slides, homework in smaller chunks instead of one big coursework", 
                "Add tutorials as it is incredibly difficult just having lectures.", 
                "Record lectures as if you miss a lecture it is impossible to catch up.", 
                "question and 1 sample exam. None of which have solutions. This means throughout the course there has only been theory coveredIt is very difficult to study for this course as there is only a textbook/notes from class to learn from. There is also 1 practice exam", 
                "form.Seems like this course needs to be restructured to aid student learning and create clarity. The course is very difficult in its current", 
                "No tutorials, workshops or labs for this course."
            ]
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR09050", 
            "Name": "Introduction to Java Programming (Distance Learning)", 
            "Level": "9", 
            "Acronym": "IJP-DL", 
            "Average": "61.13", 
            "Area": "Programming Languages", 
            "Summary": "*This course is for distance learning students within the School of Informatics and students on the Data Science, Technology & Innovation Programme*.\n\n\n\nThis module is intended for students who have some previous programming experience, but would like to develop their ability to write complete, practical applications. Students with no programming experience should be able to complete the course, although this will almost certainly be challenging and will require additional time. The course uses an object-oriented approach, based around the Java language, but no previous experience of specific languages or technologies is assumed. \n\n\n\nThis distance-based course is aligned with the on-campus Introduction to Java Programming course (INFR09021) which uses a flipped classroom delivery approach. Distance students will cover the same materials, engage in the same classroom activities (but using Collaborate) and undertake the same assessment as the on-campus students.", 
            "Delivery": "S1", 
            "Credits": "10", 
            "Course Description": "Learning to program requires practice, and students on this course typically have very diverse programming backgrounds. Locating and working with online materials is also an essential skill for developing real applications. For these reasons, the course has no regular lectures on the content - it is facilitated by structured assignments, a recommended textbook, online materials, well-supported lab sessions (or online tutorials for distance learning students), and an online forum. This provides a flexible learning environment, and students should be prepared to manage their own schedule and to take advantage of the resources in a way which is most appropriate to their own experience.\n\n\n\nThe course content includes the following topics: \n\n- Object-oriented design - classes, objects, inheritance, coupling, cohesion, responsibility.\n\n- The basics of the Java programming language.\n\n- The use of external libraries - collections, graphical interfaces, networking.\n\n- Development tools.\n\n- Code readability and documentation.\n\n- Graphical user interfaces.\n\n\n\nRelevant QAA Computing Curriculum Sections: Programming Fundamentals.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr09050.htm", 
            "Coordinator": "Paul Anderson", 
            "Year": "5", 
            "Coursework/Exam": "100/0", 
            "Feedback": [
                "Embrace the forum. Ask questions, respond to questions, instigate discussions, question answers.", 
                "Have some experience in programming and Java to be able to achieve a good mark.", 
                "Not value for money.", 
                "course begins.Read the Blue Jay book in advance and get as much knowledge about the general constructs of Java before the", 
                "is no way to get around to pass this course. You have to work for it!You have to be fully committed to doing this course especially if you have zero background in programming. There", 
                "A starting places for learning Java", 
                "Hands on experience with using Java", 
                "high as now I am confident to create something that can be used for real world applications or at least have enough knowledge toIt is a self-learning course in a very well-made guideline with a support from community. I think practicality of this course is very", 
                "Self discovery of Java", 
                "The comprehensive approach to the whole development process from inception of ideas to the coding.", 
                "The forum. The response time of the tutors was remarkable and always helpful.", 
                "people who already had experience kept being made, showing this course had a range of students with different experience which IAs someone new to Java & programming, I feel this course was not properly suited as the course title suggests. References to", 
                "Better inter communication between students", 
                "programming' and I struggled(still struggling!) with this course. I did not find the course format easy to deal with but I suspect that isCan't really suggest any. I don't think I'm a particularly 'natural programmer'. I struggle with the structured formality of 'proper", 
                "combining lab session and forum together to form a sort of more two-way community feeling where I actually want to do something toI think forum and lab sessions are a good concept but I feel there is a room for improving engagement levels - something like", 
                "questions. So what is the added value of doing a module at university like this.It needs actual structure. If you have no experience with Java (like myself) you are basically just told to go through a book and ask", 
                "aspects of the module and coursebook on the forum.Paradoxically, the forum. As a distance learning student, I would love to see more engagement on discussions about various", 
                "through so we used all the time properly.As a distance learner, this was my only 'face time' so was really useful, but would have liked more structure or exercises to go", 
                "Great course, and my tutor was very helpful.", 
                "follow as a good a process.Really enjoyed the course. I would definitely recommend this course to my friends and hope that the next modules on my MSc", 
                "couldn\u2019t show our code for the assignments.The students are varied and there was no structure. It was a bit like \u2018come with a question\u2019 but there was no exercises and we", 
                "disadvantage over on site students. I felt I was very much on my own at times with only the book and the website videos(and piazzaYes helped somewhat for pointing me in the correct direction. As a distance learning student I think the course format puts us at a"
            ]
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR09021", 
            "Name": "Introduction to Java Programming", 
            "Level": "9", 
            "Acronym": "IJP", 
            "Average": "66.48", 
            "Area": "Programming Languages", 
            "Summary": "This module is intended for students who have some previous programming experience, but would like to develop their ability to write complete, practical applications. Students with no programming experience should be able to complete the course, although this will almost certainly be challenging and will require additional time. The course uses an object-oriented approach, based around the Java language, but no previous experience of specific languages or technologies is assumed.", 
            "Delivery": "S1", 
            "Credits": "10", 
            "Course Description": "Learning to program requires practice, and students on this course typically have very diverse programming backgrounds. Locating and working with online materials is also an essential skill for developing real applications. For these reasons, the course has no regular lectures on the content - it is facilitated by structured assignments, a recommended textbook, online materials, well-supported lab sessions (or online tutorials for distance learning students), and an online forum. This provides a flexible learning environment, and students should be prepared to manage their own schedule and to take advantage of the resources in a way which is most appropriate to their own experience.\n\n\n\nThe course content includes the following topics: \n\n- Object-oriented design - classes, objects, inheritance, coupling, cohesion, responsibility.\n\n- The basics of the Java programming language.\n\n- The use of external libraries - collections, graphical interfaces, networking.\n\n- Development tools.\n\n- Code readability and documentation.\n\n- Graphical user interfaces.\n\n\n\nRelevant QAA Computing Curriculum Sections: Programming Fundamentals.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr09021.htm", 
            "Coordinator": "Paul Anderson", 
            "Year": "5", 
            "Coursework/Exam": "100/0", 
            "Feedback": [
                "Be prepared to learn everything on your own. Lynda tutorials were infinitely more helpful than the book.", 
                "Don't be scared of trying different approaches for the final project - quite often it is not as scary as it sounds.", 
                "anything may lead to misunderstanding. Work hard, and enjoy your course.Study the textbook (I prefer to buy your own copy). Plan your work before start coding. Ask the instructor about", 
                "Take this course but make sure to ask very specific questions to the lab assistants to get the needed help.", 
                "The second assignment is a huge jump from the first. Prepared to work on it early", 
                "do your own research and work before de lab sessions and just clarify your ideas with the demonstratorsread the book, it is very useful", 
                "gained a lot of experienceA lot of practical experience, programming an app from scratch is challenging but once you finish you can feel that you have", 
                "Assignments gave a good focus and opportunity to learn with good guidance given in the tutorials.", 
                "Gives the students a real feel of what it\u2019s like to work on java projects.", 
                "The course introduced object-oriented programming in Java well.", 
                "ideas, rather than relying on someone else to come up with a fix). I found it fun to work on it - feeling now much more confident aboutThe final project was very useful (and I would claim that doing it individually would be the best - it pushes you to deliver your own", 
                "The lab tutors were very approachable and helpful", 
                "especially because there was limited other guidance.The practical aspect of learning through the project was very helpful. The tutors in the lab sessions were incredibly helpful", 
                "Although I have taken other programming courses, I learned new concepts in this one very useful.", 
                "outside lab hours or if we are without an internet connection to ask in Piazza.Change the text book or give us the answers to the exercises, otherwise we won't have any kind of feedback while studying", 
                "we know exactly what level of Java programming we should be at for the first and then second assignment. Also getting the answersI would like to have a more structured course with more exercises at the beginning in the lab sessions (non-graded ones) so that", 
                "last minute I was discovering some (important) requirements.I would prefer if there was some mandatory sessions during the semester to review the assignment with the instructor. Until the", 
                "than Java itself) - that would have been amazing. Otherwise the only teaching we get is from the lab assistants (who were brilliant),I would think that if there were some lectures on approach to software engineering, tackling problems, designing UX etc (rather", 
                "much stronger on this, since exams and assignments often depend on material covered in lectures and tutorials. Here there are noIncentivise going to tutorials. The whole point of university is to strongly incentivise the student to learn stuff. Other courses are", 
                "Maybe a couple more lectures on some fundamental java related aspects would have been helpful.", 
                "The lecturer should also chip in and have more lectures (not just 2) to help explain concepts. It is an introductory course after all.More lab tutors per session. 2 is insufficient.", 
                "would help to improve their interests in the course.Some additional lectures to the students new to java on some basics and techniques of programming in java would be useful and", 
                "introductory class. At least getting started there should have been basic instruction to main concepts that would have been useful toThere was virtually no instruction, not even getting started, which was really disappointing considering this was supposed to be an", 
                "Give a summary of good practices for java programming.", 
                "approach is wrong, I feel that it will keep stay the same after the courseMost of the labs are during the assignment and you cannot really talk with the demonstrators trying to improve your work. If your"
            ]
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR11146", 
            "Name": "Internet of Things Systems, Security, and the Cloud (IoTSSC)", 
            "Level": "11", 
            "Acronym": "IoTSSC", 
            "Average": "68.48", 
            "Area": "Internet of Things", 
            "Summary": "IoTSSC will teach students fundamentals concepts of Internet of Things (IoT) systems, wireless communication paradigms employed in IoT, security and privacy issues, and cloud integration. The course will involve a major coursework that will require students to work in pairs to design, build, and evaluate a practical IoT system. Students will be required to demonstrate their prototypes and present orally their projects at the end of the course, and document their designs and results in a workshop style research paper.", 
            "Delivery": "S2", 
            "Credits": "20", 
            "Course Description": "The course will cover IoT systems architecture, hardware platforms, relevant wireless technologies and networking protocols, security and privacy concepts, device programming and debugging, cloud integration, simple data analytics, and commercialisation challenges. The students should expect to be able to apply the taught concepts in the development of an IoT prototype.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11146.htm", 
            "Coordinator": "Paul Patras", 
            "Year": "4", 
            "Coursework/Exam": "55/45", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR11136", 
            "Name": "Informatics Research Review", 
            "Level": "11", 
            "Acronym": "IRR", 
            "Average": "66.75", 
            "Area": "Misc.", 
            "Summary": "This course provides students with the opportunity to explore an area of interest in more depth than allowed in a standard taught course. For MSc students this is expected to take the form of reviews of the literature in topics related to their specialism.\n\n\n\nThis 10 credit course replaces Informatics Research Review (Level 11) (INFR11034) - 20 credit course.", 
            "Delivery": "S1", 
            "Credits": "10", 
            "Course Description": "Students and tutors will be matched up based on interests/specialisms at the start of semester 1. Students will be given examples of good reviews, guidance on literature reviewing, literature searching and citation methods. In addition they may be directed towards research seminars in relevant topics. The student should then explore the general area over the semester in consultation with their tutor. It is expected that each student will submit two minor reviews that critically evaluate a single research paper or seminar presentation during the first half of the semester. During the latter half of the semester, students will produce a substantial review of a research area.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11136.htm", 
            "Coordinator": "Bjoern Franke", 
            "Year": "5", 
            "Coursework/Exam": "100/0", 
            "Feedback": [
                "properly to research writing.Ask for as much help as you need. Don't be afraid of reaching out. This is a really amazing course, they will introduce you", 
                "understands the existence of deadlines from other courses.Choose your group wisely. Some tutors require students to do a lot of (useless and unnecessary) work, while some", 
                "Do not leave the work for this course for the last minute.", 
                "compare other people's ML models)Have a narrow focus within a topic, and pick a topic where you learn things you can use in your own research (don't just", 
                "I don't know. This course needs a redesign.", 
                "It's compulsory :P", 
                "soon as you know your topic.Read as much as you can at the start, as quickly as you can. You will not have time later in the term. Ideally start writing as", 
                "Reads more during extra time", 
                "help you formulate a topic much faster.Start looking into the seed papers at the beginning of the semester, just to get an idea of what you find interesting. This will", 
                "Start working on your review early on the semester, preferably before midterms or the semester will catch up with you", 
                "reading!The earlier you start thinking about it the better, if nothing else just pick some things that sound interesting and start", 
                "This course is interesting only if you choose a topic which you are really interested in.", 
                "Start working early.", 
                "take each lecture seriously", 
                "to choose a topic from the beginning in order to apply all the knowledge saw in tutorial each week", 
                "review that I will be doing, rather than wasting 1 hour every week in meetings, with the majority of the time listening to otherI would rather have 1-to-1 10-15 minutes meeting every 1-2 weeks with my tutor to discuss about the topics and the literature", 
                "some research review together (on a topic that none of us takes).During tutorials, I could've used more guidance in how to approach the IRR, for example analysing a past IRR together, or doing", 
                "The course organisers could put plenty of tutorial material online, i.e. notes on how to ace the IRR.", 
                "Have it a bit more structured with bi-weekly meetings.", 
                "meeting, and also on a week to week basis) would have been useful to make sure everyone kept up and was on the same page.I appreciate the flexibility given by my tutor (Stuart Anderson), but perhaps a little more structure to the weekly meetings (per", 
                "Include an overview on the selected focus area.", 
                "Make the lectures more interesting and engaging", 
                "Many lectures were not useful if you already knew the topic (e.g., how to use Latex or Mendeley), but lectures were mandatory.", 
                "covered in lectures, but unlike lectures you don't know how to meet other students working on a similar topic.Maybe clearer goals for each week - and help with learning challenging material: Often you're reading material far beyond stuff", 
                "Maybe limit the group to a smaller size", 
                "More communication among group members, maybe an online chatting group would be helpful.", 
                "reviews (which makes sense) but we didn't go into many discussions regarding our chosen topic.More discussion on the topic area. We chose an area of interest, but the tutorials were about academic writing and research", 
                "More help in deciding on a group, for example ML applications v models.", 
                "More readings", 
                "switch).Please send the link to the seed papers before asking us to choose the groups - it was very confusing this time (and many had to", 
                "Spend less time on the basic principles of academic writing.", 
                "Start early?", 
                "papers in depth but have read 40 so the bibliography should contain approx. 40 paper, no other tutor did demand that many (as iThe different tutors demand different things, I think this should not be the case. My tutor for example told us to summarise 3-4", 
                "I would appreciate a general guideline (consistent over all tutorials) about how much we have to read.", 
                "familiar with research as any student should be after a thesis.And I would find it better if the tutorial was optional, or at least not starting from scratch, as mentioned below, I am already a bit", 
                "much more structure.There is too much variation between IRR groups. I had no assignment, and no clear goals given. Others had deadlines and", 
                "Update the wiki to be a little more organized. It felt outdated and at times contradictory. This wasn't too big a deal though", 
                "Fairly good."
            ]
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR11147", 
            "Name": "Informatics Project Proposal", 
            "Level": "11", 
            "Acronym": "IPP", 
            "Average": "67.56", 
            "Area": "Misc.", 
            "Summary": "The aim of this course is to develop generic research and/or practical skills that can be deployed in academic or commercial environments. Students will demonstrate their ability to develop interesting concepts and/or hypotheses into proposals appropriate for a larger research- or implementation-based project and demonstrate their ability to identify legal, social, ethical and professional issues.", 
            "Delivery": "S2", 
            "Credits": "10", 
            "Course Description": "Structure and delivery of this course will vary according to the nature of the project, and will be agreed between student and supervisor at the start of the semester. Representative activities might include literature review, data preparation, preliminary implementation, or establishing connections and gathering requirements from stakeholders. The student will then produce a project proposal that explains the hypotheses and/or goals, project management, and milestones with approximate times with some justification for these decisions. Key methodologies should be introduced.\n\nThis 10 credit course replaces Informatics Research Proposal (Level 11) (INFR11137) and Informatics Research Proposal (Level 11) (INFR11071) - 20 credit course.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11147.htm", 
            "Coordinator": "Bjoern Franke", 
            "Year": "5", 
            "Coursework/Exam": "100/0", 
            "Feedback": [
                "Go with whatever your supervisor suggests as they have the final say", 
                "talking to your project supervisor.It is compulsory but it won't give you much (or any) useful advice honestly. Mostly likely you need to find the answer by", 
                "Look at the good IPP examples on the wiki. Talk to your supervisor to ask what they want the IPP to be like.", 
                "contact your supervisor timely and often enough. They're supposed to conduct a part of the 'teaching' for IPP, so if they don'tSelect your tutor carefully and don't be afraid to ask them what they plan to do in their tutorial slots. Also, make sure you", 
                "exactly they want/expect. The IPP tutorial classes are only helpful in a vague big picture sense. (Unless you're unlucky andSince the supervisor is the marker, I'd advise future students to get in touch with their supervisors ASAP to find out what", 
                "The quality of IPP really depends on how good and interested in it your tutor is.", 
                "Unfortunately, you are forced to take this course. Too bad.", 
                "Make clear what the IPP tutor and the supervisor should do.More coordination between supervisors and the IPP course.", 
                "following the same schedule and content.No meetings with IRR/IPP group, instead just meetings with supervisor. Or make sure that the different groups are actually", 
                "No, cancel this course, keep the wiki page and that's enough.", 
                "Not enough time to work on it because the projects were assigned too late in the course", 
                "so different, and numerical marks will be difficult to standardise. Maybe push deadline back a bit later as the period for completingReturn to pass/fail as it is very difficult to establish a standard across the board when the requirements from each supervisor are", 
                "list of things we need to do.Standardize the proposals (format) across ALL supervisors and projects and provide students with an objective marking scheme/", 
                "gathering the same group of students in IRR and force them to attend a weekly tutorial.The tutorial section is not suitable here, switch to a workshop, lab or discussion between students with similar project. Instead of", 
                "different IPP experience. Some people did not have tutorials for a few weeks, others had them weekly; some tutorials taught thingsUnify the content of the tutorials! I think it's very strange that depending on the tutorial you go to, you can have a completely", 
                "understand why we have an IPP tutorial. Except the first tutorial we did not do anything.This course was mainly useless! Just a waste of time. The meetings with my supervisor are very beneficial but I still don't"
            ]
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR09051", 
            "Name": "Informatics Large Practical", 
            "Level": "9", 
            "Acronym": "ILP", 
            "Average": "Not Available", 
            "Area": "Misc.", 
            "Summary": "**This course replaces AI Large Practical (INFR09043), Software Engineering Large Practical (INFR09045) and Computer Science Large Practical (INFR09044).**\n\n\n\nThe Informatics Large Practical exposes students to the problems that arise with the design and implementation of large-scale software systems, and to methods of coping with such problems.\n\n\n\nStudents will gain experience in how to:\n\n- Schedule their work load\n\n- Design clearly and coherently structured systems\n\n- Discover and use relevant technical information\n\n- Implement a large-scale software system\n\n- Design and run experiments and tests\n\n- Analyse and report results\n\n- Present their work in a clear and concise way.", 
            "Delivery": "S1", 
            "Credits": "20", 
            "Course Description": "The Informatics Large Practical gives students experience in developing a non-trivial software system and reporting on the end product. In this way, the practical provides an introduction to the issues and requirements of the more demanding fourth-year project. In particular, the student gains practical experience of:\n\n\n\n- Reading technical material and identifying the important content\n\n- Identifying and formalising project requirements\n\n- Identifying computational problems and inventing algorithmic solutions\n\n- Constructing a detailed design which does not over-commit to implementation detail\n\n- Implementing and testing a software application which realises the design\n\n- Experimenting with the implementation to explore the solutions to the computational problems\n\n- Writing a report which documents the solutions and the implementation\n\n- Managing a software project using a source-code repository.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr09051.htm", 
            "Coordinator": "Pavlos Andreadis", 
            "Year": "3", 
            "Coursework/Exam": "100/0", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR08010", 
            "Name": "Informatics 2D - Reasoning and Agents", 
            "Level": "8", 
            "Acronym": "INF2D", 
            "Average": "68.70", 
            "Area": "Artificial Intelligence", 
            "Summary": "This course focuses on approaches relating to representation, reasoning and planning for solving real world inference. The course illustrates the importance of (i) using a smart representation of knowledge such that it is conducive to efficient reasoning, and (ii) the need for exploiting task constraints for intelligent search and planning. The notion of representing action, space and time is formalized in the context of agents capable of sensing the environment and taking actions that affect the current state. There is also a strong emphasis on the ability to deal with uncertain data in real world scenarios and hence, the planning and reasoning methods are extended to include inference in probabilistic domains.", 
            "Delivery": "S2", 
            "Credits": "20", 
            "Course Description": "1.  Intelligent Agents: Introduction\n\n* Nature of agents, performance measures and environments\n\n* Wumpus World Problem : An example thread (Programming environment setup \n\n\n\n2. Search based Planning\n\n* Planning as a Search Problem: In deterministic, observable, static and known environments\n\n* Smart Searching 1: Using constraints\n\n* Smart Searching 2: Exploiting subproblems/Memoisation\n\n* Informed Search and Exploration for agents \n\n\n\n3. Logical Representation and Planning\n\n* Propositional Logic Revisited (Shortcomings)\n\n* First Order Logic & Encoding facts/rules in FOL\n\n* Inference Rules for Propositional & FOL Calculus\n\n* Unification and Generalized Modus Ponens\n\n* Resolution based Inference and directing search with it\n\n* Knowledge representation : Using FOL to represent action, space, time -- Wumpus Example\n\n* Situation Calculus: Representing time in plans \n\n\n\n4. Scaling Planning for Complex Tasks\n\n* Representing States, Goals and Actions in STRIPS\n\n* Partial Order Planning\n\n* Planning and Acting in the Real World \n\n\n\n5. Acting in Uncertain (real world) Environments\n\n* Representation with Bayes Net\n\n* Probabilistic Reasoning in Bayes Net\n\n* Planning under Uncertainity : Wumpus world revisited\n\n* Probabilistic Reasoning over Time I: hidden markov models\n\n* Probabilistic Reasoning over Time II: dynamic Bayesian networks\n\n* Markov Decision Processes \n\n\n\nRelevant QAA Computing Curriculum Sections:  Artificial Intelligence, Human-Computer Interaction (HCI), Intelligent Information Systems Technologies, Simulation and Modelling", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr08010.htm", 
            "Coordinator": "Vaishak Belle", 
            "Year": "2", 
            "Coursework/Exam": "25/75", 
            "Feedback": [
                "Brush up on Haskell, don\u2019t start your assignments too late", 
                "Do take this course, but be prepared for some discouraging surprises.", 
                "ask on Piazza if you don't get something. Also read the textbook, it's really good and explains things better than the lectureDon't worry too much if you don't understand something right away, do all of the tutorial questions and ask your tutor or", 
                "when you first get started. Especially the first coursework can feel a bit funky if you've forgotten most of the Haskell you learntGet started on the coursework early, they're both really short (second one literally takes a day) but can be a bit confusing", 
                "Get the textbook and actually read it. Start the coursework early.", 
                "Good luck.", 
                "If you're interested in AI, take it. The material is interesting, but be prepared that the delivery may not be the best.", 
                "Ignore negative comments from previous years (2017) - the course has been much improved.", 
                "different to object-oriented programming.Mug up on Haskell, the biggest hurdle to starting cw1 is remembering the syntax and functional mode of thinking, so", 
                "the years and you won't believe all the cool theory that's out there just waiting to be used.Please take this course - it opens up your mind to all sorts of solutions to very abstract problems people have tackled over", 
                "Study the slides beforehand, familiarise yourself with Haskell and don't lose track of the course, everything is connected!", 
                "them for a while)The probability derivations use generalised bayes' rule! (I hadn't heard of the generalised version so I didn't understand", 
                "Try not to take it, if you do, do the coursework early", 
                "Pay attention to your lectures it is vital. Just spend more time.", 
                "you will learn a lot, beneficial to do it as a CS student even though it is optional", 
                "gone into more depth with certain things.At the beginning of the course the lectures ended very early most of the time, I feel that because of this the lecturer could have", 
                "Clearer goals/motives", 
                "then tried to explain the slides on the spot. Also they simply repeated the lecture slides which made the lectures a bit boring. For theI didn't really enjoy the first two lecturers. It seemed to me that Stefano didn't really look at the lecture slides before the lecture and", 
                "I would like to have received feedback from the first coursework by now but I suppose the strikes might be the cause of that.", 
                "More Alex", 
                "written in Haskell but in a debugging-friendlier language, i.e. somewhere where you can use print statements - because we basicallyNot have Dr. Stefano Albrecht skim through the lecture slides without really explaining stuff. Have the first coursework not be", 
                "heavy than othersSlides in first 1/2 of course need review - as sometimes felt as if content was not in right order & some lectures were more content", 
                "Some labs to familiarise us with the languages used in the courseworks,like the content for prolog for last year", 
                "Stefano could spend more time explaining his part of the course, and not to finish each lecture in 20-30 minutes", 
                "Stephano to give a full lecture instead of doing 30minute ones", 
                "overkill for many parts of the course.Supplementary practise exercises outside of tutorials. Perhaps lecture notes similar to INF2B, as I believe the textbook is a little", 
                "office hours/resources for students who have not previously studied this language.The first assignment was basically impossible if you don't know Haskell, which was very frustrating. There were not nearly enough", 
                "be helpful\u2026Well... there is a lot of new things, and not much enough time to explain in lectures so maybe some more drop in workshop would", 
                "assignment.I liked my tutorial instructor, though was frustrated that the things I learned in my tutorial were marked incorrect on my second", 
                "Can't be helped.I was very fond of my tutor and encourage him to work to tutor undergrads again. Unfortunately for us he chose to strike ardently.", 
                "My tutor Sarrene Wallbridge is very helpful.", 
                "My tutor was OK and the material discussed in tutorials was helpful.", 
                "Ramsey El-naggar is the best", 
                "The tutorials were always a good practice for the lecture material and my tutor was brilliant.", 
                "topics related to the tutorials.The tutorials were very helpful in understanding the topics. I like that the last few tutorials had more detailed explanations of the", 
                "Tutor is good.", 
                "but a lot of tutors went on strikeWere useful to learn."
            ]
        }, 
        {
            "Exam Diet": "December", 
            "Code": "INFR08019", 
            "Name": "Informatics 2C - Introduction to Software Engineering", 
            "Level": "8", 
            "Acronym": "INF2C-SE", 
            "Average": "63.42", 
            "Area": "Software Engineering", 
            "Summary": "This course gives an overview of the engineering of software systems.  It introduces the main activities and concerns of industrial and commercial software engineering, and enables students to go beyond programming towards software engineering in their own work.", 
            "Delivery": "S1", 
            "Credits": "10", 
            "Course Description": "The aim is to understand and execute the process of building software systems. The process will entail capturing requirements as use-cases, modelling the system using class and sequence diagrams, implementing the system using Java and running requirements-based tests and system level tests. Beyond the construction process itself, some important surrounding concerns are\n\nintroduced including: satisfying non-functional requirements, building good human interfaces, and considering various software licensing models.\n\n\n\nThe core topics covered, all at introductory level, in this course are:\n\n* Software engineering as a discipline: history, professionalism, ethics\n\n* Software engineering activities: requirements capture; design; implementation; testing, debugging\n\nand maintenance; software process management.\n\n* Modelling in UML (use cases, class diagrams, sequence diagrams).\n\n* Design principles and their influence on maintainability of software.\n\n* Software configuration management.\n\n* Verification, validation and testing.\n\n* Software usability and HCI issues.\n\n* Economic and social aspects of software ownership, patents and licensing.\n\n* Software quality assurance.\n\n\n\nSome further topics will also be covered, depending on topicality and lecturer's expertise. These might include, for example:\n\n* Model-driven development: how to use UML for construction, not just description, of systems\n\n* Software in the world: embedded systems, web services, cloud computing, autonomous computing and other means of delivering functionality\n\n* Agile software development.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr08019.htm", 
            "Coordinator": "Paul Jackson", 
            "Year": "2", 
            "Coursework/Exam": "40/60", 
            "Feedback": [
                "Going through a software development process as part of the coursework", 
                "Clearer learning outcomes!", 
                "Content is very boring, the lectures are dry and difficult to follow. Very hard to determine what is course content and extra items.", 
                "coursework and struggle doing something nice if I knew what I had to do. Asking 1000 questions on piazza and going to labs is justFeedback is not very helpful. Also, the actual tasks for the courseworks are so fuzzy all the time, I'd happily work for weeks on a", 
                "programming practicals, as only one part of the assignment is programming (and it's not truly following your own design). This wouldI believe the course was really dry, and not too engaging. I think the course would be better if it was tied in more closely with", 
                "felt the software processes and process improvement sections could have done with more of an explanation of what the abstract ideaI felt there were some areas in the second half where we dived in to solutions without really addressing the problem. For instance, I", 
                "especially much more coding, testing. I felt that we spent too much time on the general ideas like requirements analysis and design.I have to admit that I was very disappointed with this course. I was expecting the course to be far more practical and hands-on,", 
                "and obstacles were on the way and how they were overcame. The lectures were too abstract, making them difficult to follow and notI'd explain the topics covered by the course basing on one or a few real systems, analysing how they were built, what challenges", 
                "git and write tests rather than relying on them doing it in their own time. Would be a lot better if there were case studies to look at largeLearn a lot of outdated techniques for a large part of the course. Could be more interactive and actively teach students how to use", 
                "Lectures were literally boring.", 
                "Less memorisation-intensive exam. Make version control non-optional for coursework and let students better experience git, etc.", 
                "Make the delivery more interesting and stimulating.", 
                "Stark! His course is also quite heavy in theory, but he puts a lot of work into adding real life examples and so it's actually fun.Make the lectures more applicable to real life, more interactive. It is very dry at the moment. Inspiration could be taken from Ian", 
                "interactive way during lessons, and some nice photos (and examples!) here and there is all that is required to make the lectures...More interactive and less dry lectures: the slides have a large amount of content, and can be demonstrated in a much more", 
                "Real-world use of the material of the course is not really clear until we start doing the assignments.", 
                "waterboarding. It just needs to stop all together.Suggesting what improvements need to be made to the course would be like suggesting how can you can you improve", 
                "would allow the individuals to not stray from goal.The course work requirements are very vague. Generally solutions to questions are too. References or more specific requirements", 
                "Instead we only had to fill in a template to pass some test cases. Very disappointing.The coursework is low quality. I was hoping to create a proper piece of software given the course is called 'software engineering'", 
                "CW3.The coursework one and two tasks were so heavy on writing. Cut this back and more programming would be great. I really enjoyed", 
                "unclear as most of the practices are things that you would probably be better off learning about once you get into industry anyway,The topic as its core either really isn't that interesting or the course just presents it in a very uninteresting way. Learning aims were", 
                "then learn bunch of definitions which most people will never use anyway. I think this course is helpful for people who have alreadyThis course should be cancelled or at least it should be required, I would much rather do something interesting and challenging", 
                "Use less bureaucratic language (in slides and coursework). Spend more time on motivation to learn this course.", 
                "At least it helped us through the awful coursework so I can't complain too much about the tutorials", 
                "Doing the tutorial work definitely made the content make more sense", 
                "Felt like lab demonstrators were reading from a script a lot of the time.", 
                "were only 1 or 2 other students show up in the tutorial.I can feel the importance and usefulness of the tutorial, but it was a pain in the ass to attend the tutorials, since very often there", 
                "Mai Ahn Nguyen is a very good tutor, very good at explaining the content.", 
                "My tutor Rado Kirilchev was fantastic", 
                "Small tutorials especially useful since answers can be so subjective", 
                "them were too long to be fully covered in-depth.The tutorials were helpful, but some of the question sets were too short - we could finish them in about 30 minutes, and some of", 
                "Tutorial sheets are good quality. No complaints about them.", 
                "Tutorials definitely helped me with the course, my tutor was very good and always came prepared with questions for s", 
                "Tutorials helped and were well led"
            ]
        }, 
        {
            "Exam Diet": "December", 
            "Code": "INFR08018", 
            "Name": "Informatics 2C - Introduction to Computer Systems", 
            "Level": "8", 
            "Acronym": "INF2C-CS", 
            "Average": "64.79", 
            "Area": "Architecture", 
            "Summary": "This course is concerned with the design, implementation and engineering of digital computer systems. It offers an introduction to the internal structure of digital computers.", 
            "Delivery": "S1", 
            "Credits": "10", 
            "Course Description": "The primary aim of the course is to convey an understanding of the internal structure and implementation of digital computers. To impart this knowledge, we first explain how the interface between hardware and software is typically constructed. This interface consists of several key components:\n\n\n\n* The binary representation and manipulation of atomic data.\n\n* The structure of a typical instruction set.\n\n* The environment in which a program executes, and the notion of processes and virtual memory.\n\n\n\nIn addition to explaining the interface between hardware and software, this course introduces the ideas behind the hardware implementation of a processor. This consists of several further components:\n\n\n\n* Combinational logic - how simple stateless building blocks such as adders, multiplexers and decoders can be constructed from logic \n\nelements.\n\n* Sequential logic - how components with state, such as latches,\n\nregisters, register files and memories can be constructed from logic elements.\n\n* Processor structure - how a simple instruction set can be implemented using combinational and sequential logic components.\n\n\n\nThis material is prefaced by a brief introduction to the C programming language, which is widely used as a systems programming language.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr08018.htm", 
            "Coordinator": "Boris Grot", 
            "Year": "2", 
            "Coursework/Exam": "40/60", 
            "Feedback": [
                "other, hence not understanding one topic immediately prevents you from understanding the other.As Boris mentioned tons of time, start with the assignments early! Revise throughout the semester, as topics build on each", 
                "Be more careful when selecting tutors", 
                "rewarding in terms of learning how actual computers work.Be prepared for a course that feels like double the amount of credits it is advertised for. It is a lot of work but amazingly", 
                "Be prepared for the fact that the course is demanding. Start assignments early.", 
                "Be prepared to work, start the assignments as soon as you get them. Do the tutorials", 
                "Brace yourselves.", 
                "Brush up on your C.", 
                "Courseworks are really interesting but take longer that you may expect,", 
                "Definitely start learning about MIPS from the very beginning, otherwise you will feel bad.", 
                "the material like I did because it will take A LOT of time whether you understand it or not.Do the assignments as soon as you can to get the help you need in case you need it. Don't overestimate your understanding of", 
                "Don't panic about the coursework, just try your best, It will all fall into place once you start making progress.", 
                "Last minute starts will almost guarantee you submitting a program with bugs. With a lot of time the coursework is very easy andDon't start this coursework just before the deadline. The programs are very unpredictable to know how long it will take to debug.", 
                "Don't underestimate coursework 1", 
                "think a lot rather than directly starting to write code or rush through material because things can get very confusing easily next timeExpect this course to be super-hard however when getting it done you will feel that is 10 credits you fully deserve. Take time to", 
                "Having some prior exposure to MIPS will be very helpful.", 
                "It is very challenging and the coursework requires a lot of work so don't go in thinking you'll manage to do it all in one night", 
                "It's a great course which covers a variety of topics taught by a very enthusiastic lecturer.", 
                "It gives you an insight into the way hard- and software work together.", 
                "It\u2019s nice, with a lot of work.", 
                "Make notes in lectures as you can't always rely on recordings.", 
                "Read the textbook. Start the coursework early.", 
                "Read up everything beforehand, lectures barely touch up on topics", 
                "Start assignments early, pay attention", 
                "courseworks and prioritise passing as many tests as possible while having clear, commented code. Keep up with the readings, theStart coursework 1 as soon as it\u2019s out, it will take you the whole time up until the deadline, try and balance this with the other", 
                "Start coursework1 straight away and try not to let it overwhelm you.", 
                "Start early on the MIPS coursework, otherwise you'll be spending your nights in Appleton till 9AM.", 
                "Work hard on the coursework.", 
                "Assessed assignments, lectures.", 
                "Boris is probably the most engaging lecturer you will ever have. Inspiring, fun, relatable.", 
                "The professor is responsive on Piazza, and really willing to help.", 
                "Boris.", 
                "Boris. Getting into the nitty-gritty. Processor Design.", 
                "which is what you usually do when doing a project. So, we had to take time to actually understand someone else's code. It would beCoursework structure, although they were quite challenging and hard, I really liked that we had to work with partially written code", 
                "Courseworks were nice and challenging", 
                "Essential course as part of the Computer Science program", 
                "and enhanced.Every aspect, from learning how near-to-metal programming is done to how the very hardware these codes run on are designed", 
                "Everything.", 
                "actually behaves and the reasons behind it, this was done beautifully in the courseGeneral knowledge about computer systems is vital in bridging the gap between only programming and knowing how hardware", 
                "also really eager to continue this kind of coursework by taking Computer Architecture and Operating Systems as I found it reallyI absolutely loved learning more about the basics of computer systems, built on of my previous knowledge only from books. I am", 
                "I honestly don't know. I adored MIPS, was enamoured by processor design and loved the lectures on virtual memory and caching.", 
                "I think all topics are very important things to know as a computer scientist", 
                "Incredibly interesting introduction to computer systems. Learn a lot of new skills, including MiPS and C.", 
                "other courses.It was really interesting to learn something about the connection between hardware and software which isn't really the case in", 
                "Learning C and MIPS programming.", 
                "Learning MIPS assembly and C programming.", 
                "Learning MPIS and C, also knowledge about processor", 
                "Learning about how a computer processes and deals with information", 
                "Lectures", 
                "MIPS was a great experience. Nice to finally see C. Learnt quite a bit!", 
                "Probably my classmates. Other students on the piazza forum etc. have been the most helpful thing for me.Other students, speaking to other students about the courseworks and content has been more helpful than posting on piazza.", 
                "Programming assignments, Overall course material", 
                "Recorded lectures, lab sessions with demonstrators", 
                "The assignments. Getting my hands dirty by implementation was the crucial part of me actually understanding the topics.", 
                "each topic in detail.The lectures. They lectures were phenomenal. The pace was just right - challenging and yet such, that I was able to understand", 
                "interestingThe breadth of the material covered - the chance to get an insight into the low level features of computers has been very", 
                "coursework you actually created things from scratch which is far more satisfying.The coursework was really good. For some of the other inf2 classes it just felt like you were filling in the blanks, but in the inf2c", 
                "some insight into these matters. The lecturer was great, very enthusiastic and engaging.The crossover between hardware. I've never thought about what happens in the computer when we use it so it was good to gain", 
                "The lectures", 
                "The lectures - learning about computers from the level of assembly to logic gates, and then back to the operating system.", 
                "well the material.The lectures, which are not only helpful but entertaining, but the assignments are absolutely essential to make sure we understand", 
                "The understanding of the low-level operations of computers it gives.", 
                "course I liked and found interesting in that particular semester. The MIPS Assembly language gives a good introduction to how theThis gives you a very good basic background of how computers operate, mainly with the hardware side of things. This is the only", 
                "slides and notes", 
                "the tutorials", 
                "assignments were also a good learning experience", 
                "If more time was spent explaining concepts that were taught after 5", 
                "that it is 10 credits just so that students can take both Inf2C courses). When we felt behind (in week 2-3), I feel that the lecturerIn my opinion, it should be a twenty credit course given the demanding coursework and the volume of material covered (I feel", 
                "important information at the end. The first coursework could be made more enjoyable, because a large part of it consists of justIt'd be useful to fit into the schedule better. The lecture recordings were cut off at: 00 minutes, which sometimes left out some", 
                "Less memorisation-intensive exam. More focus on skills. Expand the course and make it 20 credits.", 
                "Make it 20 credits and provide more support", 
                "to the understanding of computer science. The operation of the processor wasn't well explained with confusing diagrams.Make this a 20 credit course and compulsory instead of inf2a to more students pursuing joint degrees. This is very fundamental", 
                "Maybe clearer slides.", 
                "studentsMore lab demonstrators, they very often tend to be preoccupied with other students, due to the imbalance of demonstrators to", 
                "None! This course is good because it's clear that the lecturer actually *cares* and is passionate about this course.", 
                "Not make the coursework quite so intense. It feels like 20 credits' worth.", 
                "Quality of the tutorials, my tutor was not capable to clearly explain course content", 
                "Spend more time going through MIPS assembly before giving us the first assignment. It took me 40 hours to complete it.", 
                "also the content is not very hard. So instead by directly starting with MIPS and let people learn from reading materials would beTaking less time for initial data representation lectures. To be honest most people starting this course do already know about it,", 
                "The feedback for the assignments is too superficial and doesn't help us understand where we went wrong.", 
                "so I suggest making the task at hand smaller or moving the deadline from 2 weeks after release to 3 weeks after release.The first coursework (MIPS programming) is far too demanding in terms of hours that need to be put into for a 10 credit course,", 
                "The first coursework was too hard, something easier would have definitely been enough to understand how assembly works.", 
                "the course and the time/resource constraints, I can understand if this is not feasible.There's a bit of me which would have liked additional feedback from the coursework. However, given the number of students in", 
                "This course should be a 20 credit course.", 
                "This should be 20 credits course.", 
                "Try to stay on schedule more, spend less time reviewing previous lecture (but it is still useful to do this to some level)", 
                "credit course. This would give more time for the assignments as well as more time for lectures which would be really helpful.Unfortunately we were behind by two lectures and I think the course content and assignments justify this being a singular 20", 
                "better time management because we hadn't learnt all the relevant material before the assignments were out"
            ]
        }, 
        {
            "Exam Diet": "December", 
            "Code": "INFR08008", 
            "Name": "Informatics 2A - Processing Formal and Natural Languages", 
            "Level": "8", 
            "Acronym": "INF2A", 
            "Average": "65.42", 
            "Area": "Natural Language Processing", 
            "Summary": "This course is about processing natural and artificial languages, building on material covered in Informatics 1 concerning finite state machines and regular expressions. This course will consider how the same models of language can be used to describe and analyse both formal languages (such as programming languages) and natural languages (text and speech). It will include material on formal languages and grammars, probabilistic grammars (including hidden Markov models), semantic analysis and human language processing. Examples will be drawn from computer languages and natural language.", 
            "Delivery": "S1", 
            "Credits": "20", 
            "Course Description": "* Grammars and the Chomsky Hierarchy\n\n* Regular languages, Finite state automata (FSA), probabilistic FSAs\n\n* Context-free languages and Push-down automata\n\n* Ambiguity and solutions to the problem\n\n* Deterministic parsers\n\n* Chart parsers\n\n* Probabilistic context-free grammars\n\n* Modelling semantics\n\n* Context-sensitive languages\n\n* Turing machines and computability\n\n* Models of human language processing\n\n* Overview of language technology\n\n\n\nRelevant QAA Computing Curriculum Sections:  Natural Language Computing; Theoretical Computing; Compilers and Syntax Directed Tools", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr08008.htm", 
            "Coordinator": "Shay Cohen", 
            "Year": "2", 
            "Coursework/Exam": "25/75", 
            "Feedback": [
                "the time.Although no one checks whether you do any tutorial work apparently my friends found the tutorials very useful so do them all", 
                "Study the content of previous lectures before attending next otherwise you will find it hard to follow.", 
                "Ask for help if you need it!!!", 
                "Be prepared to work!", 
                "Do the assignments well in advance, especially if you take simultaneously the other Informatics courses.", 
                "Do the tutorials.", 
                "be fine. Don\u2019t be like me. Try to engage more.Don't worry if you don't understand the algorithms at the start. Try examples on your own, do the tutorial question and it should", 
                "the coursework, because then you will see how magical all the different parts of the material actually are.Expect the lectures to be extremely theoretical but keep reminding yourself of the bigger picture. Wait with your judgement for", 
                "appreciate him.Get an outside tutor or meet with Dr. Longley -- he is very helpful and friendly and appears to enjoy helping his students. I", 
                "Go to the tutorials!! And do the reading especially for natural language.", 
                "Go to tutorials, they help so much more than simply going through lecture material", 
                "Good course, highly recommended.", 
                "totally worth it when you \"get it\".If possible, try to read ahead a little, as there are some ideas which take a while to wrap your head around. That being said, it's", 
                "If you are interested in formal languages, it\u2019s good for you.", 
                "best lecturers in the School.If you are interested in theoretical computer science, you will love this course! John Longley and Shay Cohen are some of the", 
                "Be prepared to study by yourself, there is a lot of content.", 
                "all of the tutorials, as some stuff is completely different to anything in year 1If you haven't done INF1 CogSci previously, or not done much Linguistics before, then make sure to go to all lectures and to do", 
                "Make sure to learn how all algorithms covered in the course work, don't rely on figuring out on your own - you won't.", 
                "Make sure to understand the key principles of each topic.", 
                "Make sure you know FSMs and regex.", 
                "Read the textbooks", 
                "understand it, it is easy!Some of the concepts and ideas are tricky at first to get your head around but stick with it as it is useful and once you", 
                "before it's due. You will only end up submitting something full of bugs, time management is key.Start the assignments early, you will have many at once but don't think that means you can leave Inf2a until the last weekend", 
                "people know you don't understand something, they are some of the most helpful tutors in the school.Start the coursework early so you can enjoy them! They are really fun if you give yourself enough time, don't be afraid to let", 
                "Use the examples to learn the algorithms", 
                "Good luck", 
                "make sure you revise your English grammar before starting", 
                "Clear learning objectives, good foundation for a wide range of language tasks, topics on decidability are interesting.", 
                "Coursework - was helpful in understanding the course.", 
                "Courseworks were great", 
                "Definitely the tutorials", 
                "Everything basically.", 
                "Honestly, I really enjoyed the whole course - it had a wonderful mix of theory and practical implementations.I really enjoyed the whole section of language semantics, using FOPL & lambda calculus to formulate some sort of meaning.", 
                "succeed as well.I was introduced to coding in Java in this course and it was a great immersion. I really appreciated how hard they pushed us to", 
                "the assignments, especially the second one. The motivation behind the second assignments was very interesting and it was reallyIt was an interesting introduction to how formal and languages are processed from raw input to some kind of meaning. I enjoyed", 
                "of this course was how good John and Shay were at welcoming questions in lectures.John's style of teaching is great. Shay is also great at explaining some of the trickier parts of his part of the course. The best part", 
                "Knowledge about formal languages - Chomsky Hierarchy and Second coursework.", 
                "In terms of how I gained the knowledge - mostly on tutorials/tutorial sheets.", 
                "Learning how programming languages are interpreted.", 
                "languages, and learning how computers deal with the processing languages. The examples that Shay used showing the full processLearning the methods that are used for the processing of different types of languages, learning about the different types of", 
                "One of the best courses in the School.", 
                "which makes it interesting.Very well organised and structured, prof. Longley and prof. Cohen are prepared, approachable and passionate about the subject", 
                "Genuinely fun coursework, which was unexpected.", 
                "that the coursework was doing programming that Cognitive Science students are probably looking to do in future. Also, it gave moreOther than INF1 CogSci, this has been the first course that was exactly what I was looking for at Uni. The most valuable thing was", 
                "Programming assignments where very good, challenging and useful.", 
                "The content is very interesting - it gives a great insight into the structure of languages and follows on well from INF1-CL.", 
                "The coursework were quite interesting", 
                "coursework assignments and they might just be my favourite part about the entire course.The coursework. The course is often times very abstract but it is beautifully applied within the work to be done for the both of the", 
                "The formal half.", 
                "The formal languages which work pretty demonstrably well are more interesting.", 
                "The tutorials and to a lesser extent the assignments, particularly the second one.", 
                "The formal languages which work pretty demonstrably well are more interesting.", 
                "The tutorials and to a lesser extent the assignments, particularly the second one.", 
                "like that from a lecture and it really helped to try questions for myself and get help from my tutor when I was stuck.The tutorials were definitely the most valuable part of the course. Especially with so many algorithms, it's hard to learn a process", 
                "The way it is taught", 
                "very clear how these techniques are applied to real life programming problems which made the course really engaging.This course built really well onto Inf1 Cognitive Science, and the assignments were really interesting and engaging. It was made", 
                "it be natural languages like English or formal languages like Java. But only if it was made more clear rather than blindly followingThis course sounds useful in theory since human interaction is important and this is how to recognize the languages we use either", 
                "Tutorials, assessed assignments, lectures (especially those on formal languages).", 
                "Tutorials.Tutorials, they covered a wide range of content and it was really helpful to do some questions on the more confusing algorithms.", 
                "Tutorials. Absolutely.", 
                "Very interesting for learning about language processing and introduces a lot of new concepts.", 
                "slides and tutorials", 
                "tutorials", 
                "Tutorials are good.", 
                "tutorials helped a lot", 
                "More help on Piazza.", 
                "More/clearer feedback on the coursework", 
                "Saying \"good job\" doesn't give me many ideas for improvement", 
                "without a plain and simple definition to go along with it. I found that when I only had the formal definition, it took quite a long time toMost of the time when any new concepts or algorithms were introduced, the lecture slides provided only a formal definition,", 
                "Nothing as of now.", 
                "use top hat or anything to keep us awake, difficult to pay attention for 50mins.Please update tutorials (references to lecture slides) before uploading them, sometimes these references are misleading Please", 
                "However, seeing as not everyone may have done it (and it was a year ago) I guess it makes sense.Regular expressions are sort of covered last year in Computation and Logic, so there were some elements which felt repetitive.", 
                "The grammar writing exercise was fun, however, I feel that this should never, as suggested it might next year, be for credit.", 
                "challenging examples instead of explaining the content beforehand.The natural language lectures are extremely difficult to wrap our heads around the first time, but Shay Cohen goes right into", 
                "common for there to be a lot of excess and unnecessary information. The slides could be more conciseThere's a lot of material covered in each lecture, which results in a huge amount of work needed to keep on top. It's also quite", 
                "more examples to help understand", 
                "the lectures for the natural language section were boring and hard to follow", 
                "As I mentioned - tutorials great, but labs poor (but good sheets for labs)", 
                "Dr Cohen was a great tutor and I really enjoyed the tutorials, they were really helpful for grasping the problems", 
                "only explained them in terms that he understood. I also hated that everyone was competing with each other to answer things ratherI feel as though my tutor was not the best at explaining things to us. He took a lot of roundabouts in answering our questions and", 
                "He contributed a lot to my understanding of the materials, and overall I find the tutorials very enjoyable.I love my tutor (Paul Sinclair I think, 1pm every Tuesday). He explains very well, and he is very approachable and friendly as well.", 
                "struggling with something or even didn't understand it at all, without being embarrassed. She's always willing to go back to the basicsI wanted to mention my tutor Sarenne Wallbridge. She has been super patient and has made it really easy to admit when I was", 
                "even when I pretty much knew it all anyway as I could have helped my peersIf the tutorials/labs were compulsory (marked), then I'd have gone to more, and I feel like I probably should have been to the ones", 
                "My tutor has been very helpful.", 
                "Paul Sinclair is an amazing tutor, please tell him!", 
                "worked get caught very effectively so it really helps understanding the material more thoroughly.The tutorial exercises are more often easy than they are hard. However, little mistakes and things you thought you knew how they", 
                "makes it difficult to discuss problems. I would recommend group discussion activities since it will allow us to understand the workThe tutors went over homework quickly regardless of how well I understood it and time pressure of the tutor has to go through", 
                "They were very helpful in understanding the concepts learned in lectures.", 
                "have been nice if details for Tutorials came out midway through the week of the last tutorial.Tutorials helped me to understand what I was supposed to do for various processes and gave me experience on the work. Would", 
                "more difficult algorithms and was happy to explain it as many times as possible until we all understood, i also emailed her about anTutorials were the most helpful and enjoyable part of this course, our tutor Sarenne was really good at explaining some of the", 
                "Tutorials where very useful, My tutor was excellent", 
                "Honestly, I'd rather drop a couple of lectures and have another hour of tutorials in this. Just seemed so much more helpful.", 
                "most of my learning came from doing the tutorials exercises and attending the tutorials", 
                "put the times on the website"
            ]
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR08014", 
            "Name": "Informatics 1 - Object-Oriented Programming", 
            "Level": "8", 
            "Acronym": "INF1-OP", 
            "Average": "65.76", 
            "Area": "Programming Languages", 
            "Summary": "This course presents a conceptual and practical introduction to object oriented programming, exemplified by Java. As well as providing a grounding in the use of Java, the course will cover general principles of programming in imperative and object oriented frameworks. After completing the course successfully, students will be able to develop programs that support experimentation, simulation and exploration in other parts of the Informatics curriculum (e.g. the capacity to implement, test and observe a particular algorithm).", 
            "Delivery": "S2", 
            "Credits": "10", 
            "Course Description": "An introduction to the concepts of programming using a object oriented programming language.\n\n\n\nRelevant QAA Computing Curriculum Sections:  to be confirmed", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr08014.htm", 
            "Coordinator": "Volker Seeker", 
            "Year": "1", 
            "Coursework/Exam": "0/100", 
            "Feedback": [
                "Although you may know java, go to the tutorials!! The exercises made you understand the concepts rather than just programming", 
                "Do all the labs", 
                "Do as many of the exercises as soon as possible, do some past papers on DICE so that you know how it works", 
                "Do the exercises and go to tutorials", 
                "syntax and you'll get a better idea of what might come up in the exam.Don't dodge the lectures even though you feel confident doing the tutorials yourself - there's extra content in the lectures beyond", 
                "Don't fall behind with the lab exercises; programming can only really be learned by doing it. Also, try out the programming club.", 
                "Don't let exercises pile up. Study systematically and ask questions.", 
                "Don't rely on this course to learn programming. You will need to learn a lot more to be considered even an average programmer.", 
                "Don\u2019t fall behind on the labs", 
                "Explore the advanced section of the lab exercises.", 
                "class who have done Java before and can help you out, don't be afraid to approach them in labs or ask on Piazza.Get into groups with other students and seek out advice from your peers. There's definitely going to be at least a few people in the", 
                "Get to grips with data structures before arriving in Edinburgh", 
                "Go to tutorials, and try to keep up with the lab exercises - practice is essential.", 
                "that thing - something you feel invested in completing will do more for your general work ethic and confidence in a language than anHave fun with the labs and by extension the language. If you have an idea for something small you could do with the language, do", 
                "Don't bother with lectures or tutorials.If you already know OOP, just do all the labs at the beginning of the semester and do exam practice for the rest of the semester.", 
                "If you are new to objects and classes, do read around the subject. It might be difficult to understand from lectures alone.", 
                "Learn Java in the summer before you come to uni because Calculus will demand all of your time.", 
                "Make sure you keep up to date with the lab exercises", 
                "necessary for the exam questions, so just take care that you now the organisational stuff such as passing the basic tests, autoNo advice, the course is easy -> you don't have to go to the lectures, if you want look at the tutorial exercises, but it's probably not", 
                "Practice makes perfect", 
                "Practice more.", 
                "Sure.", 
                "This is the basic things about java.", 
                "do all the lab exercises", 
                "java courseif you\u2019ve never done object oriented programming before familiarise yourself with the basic concepts and maybe take an online", 
                "A book that is actually available online (the link doesn\u2019t work). More support for those who want it! Help using own machine!", 
                "Felt it didn\u2019t really cover that much of Java", 
                "would rename this course to \"Java syntax\", because that more accurately represents what was taught. I would have actually enjoyedGo at a faster pace and cover more material. Just like how I would rename \"Functional Programming 1\" to \"Haskell syntax\", I", 
                "really happens when you 'assign' an object to a variable and show it how it's different from primitives.I would put greater emphasis on explaining what an object is. On a related note, I would also put more time into explaining what", 
                "small, optional, submittable coursework throughout the semester? Kind of in the style of the past paper auto-marker, but on a muchI'm not quite sure - this felt a lot more like a 'here's a language, learn it', which I understand is kind of the desired approach. Maybe", 
                "would run an alternate advanced programming pathway, that would be much more accelerated than INF1-FP and INF1-OPIf there were enough people (can be found out by doing a survey before the year starts, like the mathematics diagnostic test), I", 
                "bit more straightforward help for doing some advanced projects would be great. I'd would have loved to do something, but it is notIt was too boring. In the beginning far too slow, but of course it is not easy to organise a course that is challenging for everyone. A", 
                "Less Java focus, but more programming concepts themselves", 
                "Teaching how to use programming tools", 
                "The exam not allowing USBs like in FP is less than ideal.Make past exam solutions available.", 
                "Make the course a bit harder, go a bit more in depth", 
                "separated and self-guided. I'm not too sure why though, I would be open to discussion [content deleted]. It would especially be nice toMaybe have more extra stuff that isn't \"Go to Oracle and do X exercises\" idk my motivation really dropped when it was completely", 
                "any of the lab exercises in the tutorial and they were not organised.More attention to tutorial exercises and improvement of tutorials overall. We didn't get any feedback from the tutors, we didn't solve", 
                "More lectures", 
                "More practice questions for beginners.", 
                "More theory would be great.", 
                "No improvements to suggest", 
                "No.", 
                "The exam grading criteria seems quite harsh, and I would make it a bit more lenient.", 
                "that was the purpose of inf1-fp and every student will need to learn programming on their own in the future anyway.The syllabus is very limited for a university course. It shouldn't be tailored to students who have no programming experience as", 
                "have more lectures", 
                "more lectures and tutorials", 
                "none this has been my favourite course all year not sure", 
                "Hugh was largely supportive but intolerant to those who fell behind.", 
                "Make the tutorials more consistent across the board (i.e. have all tutorials the same as some groups had different things to others)", 
                "those students who decide to sign up for them)More challenging tutorials for people with Java experience would be nice (advanced tutorials that replace the normal tutorials for", 
                "taught), I stopped attending them.My tutor seemed like he did not want to be there, and in addition to the content of tutorials not being useful (ie. nothing new", 
                "The tutorial time was too short.", 
                "other people listening to someone slowly explain these OOP concepts everyone is already very familiar with is just painfully mind-The tutorials have been mind-blowingly boring. To be fair the lectures were probably just as boring, but being in a room with just 5", 
                "The tutorials were the most helpful part of the course", 
                "The tutorials were very helpful, see above comment.", 
                "room for discussionTutor was great and stimulated my interest more than the lecture, but attendance was low which meant there was not so much", 
                "Tutorials are so good", 
                "were wonderful.Tutorials were quite standard, and somewhat boring in my opinion. I much enjoyed the other aspects of the course, and the labs", 
                "core exercises (and they are in terms of difficulty).Unlike inf1-fp this course doesn't have a lot of advanced (optional) exercises. The ones which exist should have been part of the", 
                "having a consistent tutor would have benefitted my learning.While finding my tutorials beneficial - personally, my tutorials weren't well run because we had a different tutor each week. I think", 
                "none"
            ]
        }, 
        {
            "Exam Diet": "December", 
            "Code": "INFR08025", 
            "Name": "Informatics 1 - Introduction to Computation", 
            "Level": "8", 
            "Acronym": "INF1A", 
            "Average": "Not Available", 
            "Area": "Theory of Computation", 
            "Summary": "**This 20 credit course replaces the two 10 credit courses - 'Informatics 1 - Functional Programming INFR08013' and 'Informatics 1 - Computation and Logic INFR08012' from 2018/19**.\n\n\n\nAn introduction to concepts of programming, using a functional programming language, and to concepts of computation and specification using finite-state systems and propositional logic. These provide examples of the logical ideas of syntax and semantics and the computational ideas of structure and behaviour. Students learn to specify, model and solve small-scale problems succinctly and at an abstract level.", 
            "Delivery": "S1", 
            "Credits": "20", 
            "Course Description": "An introduction to concepts of programming, using the Haskell functional programming language, and to concepts of computation and specification, using finite-state machines and propositional logic. The use of sets, functions and relations to describe models of logic and computation. Programming using functions and data structures including lists and trees; case analysis, recursion and higher-order functions. Finite-state machines as a basic model of computation: deterministic and non-deterministic automata; regular expressions; acceptors; structured design of finite state machines. Propositional logic: truth tables; satisfiability; deduction. Applications from different areas will be used to illustrate and motivate the material.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr08025.htm", 
            "Coordinator": "Michael Fourman", 
            "Year": "1", 
            "Coursework/Exam": "5/95", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR08015", 
            "Name": "Informatics 1 - Data and Analysis", 
            "Level": "8", 
            "Acronym": "INF1-DA", 
            "Average": "73.74", 
            "Area": "Data Science", 
            "Summary": "An introduction to collecting, representing and interpreting data across the range of informatics. Students will learn the different perspectives from which data is used, the different terminology used when referring to them and a number of representation and manipulation methods. The course will present a small number of running, illustrative examples from the perspectives of hypothesis testing and query formation and answering.", 
            "Delivery": "S2", 
            "Credits": "10", 
            "Course Description": "Structured data and relational databases. Semistructured data and XML. Text corpora. Unstructured data and its analysis.\n\n\n\nRelevant QAA Computing Curriculum Sections:  to be confirmed", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr08015.htm", 
            "Coordinator": "Ian Stark", 
            "Year": "1", 
            "Coursework/Exam": "0/100", 
            "Feedback": [
                "Attend the tutorials! And do the tutorial work. It doesn't take very long, and really helps you get to grips with the material.", 
                "Attend tutorials! Tutors are non-judgemental and enthusiastic.", 
                "Complete all the (slightly obscure) tasks that Ian sets; they are actually helpful in the end.", 
                "directly used in class, it can help you understand more advanced concepts.Do the reading before lectures and if you have time, do more than is required - most of it is interesting and even if not", 
                "you have already done half your exam preparation if you participate in the tutorials.Do the tutorial exercises and go to the tutorials! The tutorial exercises are quite similar to the actual exam questions and", 
                "Do the work that is asked, and you'll need to cover very little in revision time!", 
                "Enjoy it! And do the extra reading.", 
                "Go to tutorials, do the homework", 
                "I would advice him/her to attend every tutorial.", 
                "time, as they are good practice and definitely help you gradually prepare for the exam.It's a very well organised course with a great lecturer and useful topics. Try the extra tutorial questions too if you have", 
                "Just do your stuff - go to the lectures, do the tutorial exercises and you'll be fine.", 
                "Make sure you complete the tutorials in proper time and not in a rush, that way you'll take the information in.", 
                "N/A", 
                "Not too sure, it's very well paced and balanced", 
                "Prepare that there is a lot of theory which is need to memorise.", 
                "Study systematically and pay attention to the tutorial exercises.", 
                "Tutorials are the most important thing", 
                "keep working on tutorials and enjoy how this could help you in the future", 
                "not sure", 
                "self-study", 
                "watch lectures online, much easier to keep up with content", 
                "Getting started with data science", 
                "SQL", 
                "Sql", 
                "Very wide overview of varying range of topics. Clearly presented and well developed. Lots of extra reading provided.", 
                "XML", 
                "corpus", 
                "lecture slides were detailed enough", 
                "lecturer", 
                "tutorials", 
                "For lectures, possibly leave the non-examinable interesting stuff till the end of the lecture if possible", 
                "Less mentions about stuff outside of the course and less distractions in the slides", 
                "Less revision in every lecture.", 
                "More open-ended extension exercises in tutorials, rather than just based on past exam questions.", 
                "online assessments for the 'calculation' questions eg tuple relational calculus and stats. Moreover, sometimes there wasn't enoughMore questions/practice. For example tutorials should have questions that are more about the understanding of the material and", 
                "N/A", 
                "No strikes", 
                "None. Please keep this course exactly as it is!", 
                "that they will get a good pension, but it doesn't seem fair that students are punished for stupid things done by UUK. I was a bitNot going on strike, it was annoying from a student's perspective. I can understand why lecturers are going on strike and I hope", 
                "Not sure I would! On the whole it was pretty great.", 
                "Please explain the missing stuff because of the strike next semester.", 
                "Strikes have severely disrupted this course", 
                "course and talking about interesting stuff like the Facebook graph search, skyscanner etc.The lectures just seemed too dry and boring sometimes because of the content, but the lecturer did his best by going beyond the", 
                "There could be more exercises.", 
                "manage to cover all of the content, finish off in the first five minutes of the next lecture.Try not to run over. We feel rude leaving while you're still talking, but we have other lectures to get to. Perhaps if you don't", 
                "Just leave w3school to us is fine.", 
                "none", 
                "All things are clear", 
                "Did not feel tutor knew subject very well and did not fill me with confidence.", 
                "I had a really great tutor which helped. The tutorial sheets were great for exam prep, and our tutor discussed things beyond that.", 
                "I haven't been able to attend a single tutorial for this course (sick leave and strike)", 
                "I liked that additional exam practice was included at the end of each tutorial sheet.", 
                "reference to the mark scheme that we are the accessed to after tutorial.My tutor from workshop has been friendly and interactive. However, our tutorials can be summarised into the explanation with", 
                "Pretty key to making you actually take in the material rather than just hear it", 
                "Really helpful", 
                "The tutorial sheets are excellent as they contain worked examples", 
                "Tutor is patient and knows much things", 
                "Tutorial is fine, get more details from the lecture.", 
                "Tutorials are pretty boring when you do everything at home and have 0 questions. Would be nice if they weren't obligatory.", 
                "Tutorials are too easy.", 
                "Very good student tutors, and helpful worksheets", 
                "happen were enormously helpful, and I feel I have missed out crucial pieces of the course as a result of missed tutorials.Workshop disruption (due to strike) has not been accounted for in examinable material. This is a shame as the tutorials that did", 
                "good", 
                "none"
            ]
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR08020", 
            "Name": "Informatics 1 - Cognitive Science", 
            "Level": "8", 
            "Acronym": "INF1-CG", 
            "Average": "49.18", 
            "Area": "Artificial Intelligence", 
            "Summary": "This course is designed as a first introduction to Cognitive Science. It will provide a selective but representative overview of the subject, suitable for all interested students, including students on the Cognitive Science degrees and external students.\n\n\n\nThe aim of the lecturing team is to present a unified view of the field, based on a computational approach to analysing cognition. The material is organized by cognitive function (e.g., language, vision),\n\nrather than by subdiscipline (e.g., psychology, neuroscience).\n\n\n\nThe course covers language, vision and attention, memory, motor control and action, and reasoning and generalization. All topics will be presented from a computational point of view, and this perspective\n\nwill be reinforced by lab sessions in which students implement simple cognitive models. The course will also provide a basic grounding in the methods of Cognitive Science, focusing on\n\ncomputational modelling and experimental design.", 
            "Delivery": "S2", 
            "Credits": "20", 
            "Course Description": "Course Description\n\n\n\nThe syllabus covers the following topics.\n\nThey are listed separately here, but in some cases they will be presented in an interleaved fashion:\n\n\n\n1. Language\n\n- the language faculty\n\n- models of linguistic data, words and rules theory\n\n- Connectionist models of language\n\n- language acquisition: speech segmentation, word learning, learning\n\nsyntactic categories\n\n- categorization and models of word meaning\n\n- understanding sentences\n\n\n\n2. Vision\n\n- the anatomy of vision, neural correlates of visual perception\n\n- Marr's model\n\n- fine vs. coarse coding\n\n- face recognition\n\n- reading\n\n\n\n3. Memory and Attention\n\n\n\n- types of memory, memory impairments, models of memory\n\n- attention, neglect\n\n\n\n4. Cognition and neuroscience\n\n- an introduction to cognitive neuroscience\n\n- some philosophical perspectives on the brain\n\n\n\n\n\n5. Reasoning and generalization\n\n- inductive reasoning\n\n- fallacies and (ir)rationality\n\n- models of abstraction and generalisation\n\n- theory formation and the origins of knowledge\n\n\n\n\n\nNote that this course is intended to give a high-level introduction to the topics listed; subsequent courses (e.g., Computational Cognitive Science) will then provide a more detailed coverage.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr08020.htm", 
            "Coordinator": "Frank Keller", 
            "Year": "1", 
            "Coursework/Exam": "40/60", 
            "Feedback": [
                "Be aware how much coding there is.", 
                "computer science. If you have not taken any programming modules before, and you are uncertain about how much you would enjoyBe aware of what you are getting yourself into - it is a highly demanding course in terms of programming and concepts related to", 
                "Be familiar with computer programming, have a basic understanding how to do it or, have a qualification in computing.", 
                "start before assignments are released. Go to ever help session for assignments as you can to help with these.Be prepared for very difficult coding if you have never done any before. Look at the documentation online and try and get a head", 
                "Don't be scared of the assignments, they are marked kindly. Make study groups to understand lectures and go through them.Be prepared to do independent learning, be prepared to step out of your comfort zone and tackle stuff you've never done before.", 
                "Be prepared to spend lots of time in the lab if you don't have relevant prior experience; seek help in lab sessions.", 
                "Do not take if you have no programming knowledge", 
                "Do the readings and keep up with understanding the lectures - it's easy to fall behind", 
                "Don't take it unless you have already taken computer science.", 
                "Don't worry if you fall behind on the readings - this will happen for sure.", 
                "Don\u2019t take this class - if you do prepare to do a lot of work which makes no sense with no support.", 
                "150 pages of reading a week).Don\u2019t assume all the reading needs to be done thoroughly (please make this clear to students as the class believes there was", 
                "Ensure that you know what you're putting yourself in for, particularly with regard to programming assessments", 
                "codacademy.If they are a non-informatics student, I would tell them to take a course in python first semester or complete the python course in", 
                "things.If you don\u2019t like maths or computation, think twice or even thrice about taking this course. It\u2019s extremely complex in the delicate", 
                "It's neither for informatics student not for psychology students. So it's useless.", 
                "Know how to code already", 
                "beginners and there is no guidance for those struggling.Make sure you are familiar with coding and computing, as although not a pre-requisite, this is clearly not a course targeted at", 
                "Make sure you have knowledge on computer coding and jupyter", 
                "might discourage non-informatics students but don't let it keep you from taking the course as it is very interesting and rewarding inOnly take the course if you are interested in it, since it is very challenging and requires a lot of reading. The programming part", 
                "Please only take the course if you\u2019re genuinely interested", 
                "Pre-existing knowledge of programming is beneficial, it is difficult to learn in such a short amount of time", 
                "They should definitely know how to program before starting this course", 
                "derivations)Think about it twice, you really need to be interested in cognitive science and understand more than basic maths (eg partial", 
                "programming coursework. Currently it is unrealistic for non-informatics students to be able to cope with the programming and maths- the course either needs prerequisites of programming background, needs to teach programming, or needs to get rid of", 
                "pythons etc. before. The course is advertised in such a way on DRPS that, although it discusses coding, it invites those from out withAssignment 1 and 2 were not 'beginner' coding level, especially for those from outside informatics who have no experience of", 
                "non-informatics students, this course was terribly organised.Do not advertise it as a course for all students, programming proficiency required cannot be learned in 3 simple lab sessions. For", 
                "part of the course less demanding/provide more support for students who are completely new to programming. Also to make it moreEither make it a prerequisite to have taken some programming module(s) before entering the course, or make the programming", 
                "tutorial questions and the tutorial is absolutely useless because no learning is taken place. The prof need to be more interested andEverything needs to be improved. The way the classes are taught, I always go out of the lecture not understanding anything. The", 
                "I have no idea what we were supposed to learn. The course is so random it\u2019s actually amazing.", 
                "were full with only two people to answer everyone's questions. I felt very disadvantaged in this course because I had never done anyI really disliked this course. The informatics section of the course was not taught and we had to teach ourselves through labs that", 
                "It might be a bit too challenging, and often I couldn't keep up with the readings.", 
                "Make learning outcomes clearer, work on communication with students (like deadlines of assignments)", 
                "instructions sheet and two hours of contact time with two postgraduate students shared between 50 people makes it very difficult forMake the learning aims clear, including the relative difficulty of programming assessments for non-Informatics students. An", 
                "Make the second half of the course a bit clearer, cover more of neural networks", 
                "assignments very difficult.More labs on coding before the assignments and more help in the labs, particularly for those who haven\u2019t coded before as the", 
                "More reaching in programming and better instructions for the assignments in programming.", 
                "N/A", 
                "Put a maths and physics prerequisite on everything.", 
                "spreadsheet.So many, I am going to be submitting a separate feedback essay to Vali and my Tutorial leader in hopes that it isn't lost in the", 
                "does not say you do need but two of the assignments include coding and this is not explained well for those with no experienceThat when choosing the course for an elective that they tell students that you do need knowledge on coding when he the course", 
                "assignments 1 and 2 (which are a significant proportion of the grading) and the material on perceptrons/neural networks - there is aThe course has no pre-requisites, but in reality is out of reach for those who lack a computing background, particularly the labs,", 
                "tutorials?). Even as an inf student, I found assignments 1 and 2 cryptic and very difficult to interpret. Notably, assignment 3 was veryThe course would have been significantly easier had there been an appropriate introduction to python (perhaps in the form of", 
                "I'm not very familiar with the discipline. Having a clearer understanding of what exactly is examinable.The readings attached to each lecture where difficult to read and I struggled to have enthusiasm to read a scientific paper when", 
                "a lot with completely foreign content.There should be maths and com sci pre reqs mandatory for this course. I, along with so many of different backgrounds, struggled", 
                "computational aspects. Therefore, I'd suggest making a note of the advanced level of computational programming involved in theAs a non-informatics student I found this course quite hard, especially with the lab assignments and when the topics relate to the", 
                "have been nice to get intellectually involved with some of the topics a bit more deeply. It's always a bit scratching on the surface.Cut it shorter in volume and in exchange go into more detail on a specific topic. I know it's an introduction course, but it would", 
                "background). The classes were very confusing and it was hard to follow how one class related to the other. The overall aim seemedThe organisation is very confusing, as well as the level required for it (lots of maths and programming for people with little", 
                "use simple word to explain the lecture", 
                "I liked meeting psychology students and having discussions.", 
                "Labs did not help at all with the second assignment.", 
                "Labs were very dense and not really related to programming assignments", 
                "did not complete many of them to a high standard as they were unhelpful in grasping concepts.Mathais is an excellent tutor. The 2 tutorials I had with him were fantastically engaging. Labs are as cryptic as assignments and I", 
                "N/A", 
                "Not enough tutors for the workshops, also more/better instructions would have been useful.", 
                "lectures. So more communication across staff.See above. A lot of the time the supporting staff and tutors were unprepared or were unaware of what we were learning in the", 
                "students who were struggling with fundamental aspects. I would stress that this is not the fault of the tutors, but a flaw in the courseThe people running the labs did their best to be helpful, but clearly felt out their depth explaining quite difficult material to beginner", 
                "There was confusion over tutorial exercises in the second half of the course.", 
                "lectures we didn't understand or see). They weren't negative to my learning but they could've been a lot more informative. My tutorThese ranged from sort of good (running through perceptrons by hand without algorithms) to pointless (discussions about", 
                "Too few tutors in Labs", 
                "Too much reading for a first year course - a whole book for one tutorial!?", 
                "same page.Tutorial arrangement got a bit messy towards the end of the course, making it hard for both tutors and students to be on the", 
                "more structured to give students with less computing experience more teaching and tutoringTutors are always helpful and reply to emails quickly which is very helpful. Lab sessions were beneficial but could have been", 
                "was expected from the students. Labs were a lot more demanding than may be expected from two scheduled hours each week - itTutors seemed to be just as uncertain about the course content as the students, in terms of what level and depth of knowledge", 
                "Well aware tutors, please. Ours hardly knew what was happening in the course herself.", 
                "understanding of the languageWhile tutorials where helpful, I think the python labs were extremely disappointing and didn't really leave me with much", 
                "the tutorial question could be more"
            ]
        }, 
        {
            "Exam Diet": "December", 
            "Code": "INFR11155", 
            "Name": "Image and Vision Computing (Distance Learning)", 
            "Level": "11", 
            "Acronym": "IVC-DL", 
            "Average": "Not Available", 
            "Area": "Artificial Intelligence", 
            "Summary": "Distance Learning version of 'Image and Vision Computing ' (INFR11140). In this course we will learn how images are formed given the objects in the three dimensional world, and the basics of how computer vision inverts this process - computing properties of the world from digital images. We will cover topics including basic image formation, image processing, detection, matching and recognition that allow computers to understand the world based on image content.", 
            "Delivery": "S1", 
            "Credits": "10", 
            "Course Description": "Learning Experience: The course will be delivered in a flipped format, with students watching recorded lectures and reading material, with the lecture functioning as a discussion session.\n\n\n\nContent: The course proceeds in five parts from foundational concepts such as image formation, through to low-level image processing operations, before building upon those to develop image representations, and use those representations for higher level tasks such as recognition and detection. The following four parts are roughly two weeks each.\n\n\n\nImage formation. The basic mathematics and physics of how images are formed based on light reflected by real-world objects. Includes ideal pinhole camera and lens models. Some basic 3D geometry, radiometry and photometry.\n\n\n\nLow-level image analysis. We will introduce basic algorithms such as convolution and filtering for image processing, and RANSAC for fitting. These will be applied for tasks such as edge detection, and line-fitting. To provide a taste of recognition students will perform shape recognition using Bayes theorem.\n\n\n\nImage Representations: To support working with more unconstrained realistic images, we next introduce feature representations for both local and global features including color histograms, HOG/SIFT, and descriptor bag of words.\n\n\n\nHigh-level image analysis: Building upon these image representations, we discuss the topical tasks of object recognition and sliding window-based object detection.\n\n\n\nApplications: Finally, we finish up with introduction to some applications including basic video processing (optical flow), and foreground detection.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11155.htm", 
            "Coordinator": "Timothy Hospedales", 
            "Year": "5", 
            "Coursework/Exam": "30/70", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "December", 
            "Code": "INFR11140", 
            "Name": "Image and Vision Computing", 
            "Level": "11", 
            "Acronym": "IVC", 
            "Average": "69.35", 
            "Area": "Artificial Intelligence", 
            "Summary": "In this course we will learn how images are formed given the objects in the three dimensional world, and the basics of how computer vision inverts this process - computing properties of the world from digital images. We will cover topics including basic image formation, image processing, detection, matching and recognition that allow computers to understand the world based on image content.", 
            "Delivery": "S1", 
            "Credits": "10", 
            "Course Description": "Learning Experience: The course will be delivered in a flipped format, with students watching recorded lectures and reading material, with the lecture functioning as a discussion session. \n\n\n\nContent: The course proceeds in five parts from foundational concepts such as image formation, through to low-level image processing operations, before building upon those to develop image representations, and use those representations for higher level tasks such as recognition and detection. The following four parts are roughly two weeks each.\n\n\n\nImage formation. The basic mathematics and physics of how images are formed based on light reflected by real-world objects. Includes ideal pinhole camera and lens models. Some basic 3D geometry, radiometry and photometry.\n\n\n\nLow-level image analysis. We will introduce basic algorithms such as convolution and filtering for image processing, and RANSAC for fitting. These will be applied for tasks such as edge detection, and line-fitting. To provide a taste of recognition students will perform shape recognition using Bayes theorem.\n\n\n\nImage Representations: To support working with more unconstrained realistic images, we next introduce feature representations for both local and global features including color histograms, HOG/SIFT, and descriptor bag of words.\n\n\n\nHigh-level image analysis: Building upon these image representations, we discuss the topical tasks of object recognition and sliding window-based object detection.\n\n\n\nApplications: Finally, we finish up with introduction to some applications including basic video processing (optical flow), and foreground detection.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11140.htm", 
            "Coordinator": "Timothy Hospedales", 
            "Year": "5", 
            "Coursework/Exam": "30/70", 
            "Feedback": [
                "Focus on the videos.", 
                "Good course, covers a wide range of topics in a decent amount of details.", 
                "Try to ask questions and watch material beforehand.", 
                "self-control. Also, lab is really important!!!Most contents are online and you should learn it by yourself. It is not easy to keep up with schedule if you don't have enough", 
                "Probably need to take IAML or MLPR to help understand the machine learning knowledge in the course.", 
                "for the course to fall behind others that have approaching deadlines. With an earlier assignment, I think there would be moreEarlier coursework assignments, possible two smaller ones. The assignments were good, but due to the flipped learning it's easy", 
                "I prefer to have a lecture rather than watching an online course", 
                "Lab exercise could be more reasonable and fewer for students to finish.", 
                "too much knowledge for one week I think", 
                "Never learnt matlab before, it\u2019s hard to do any lab by myself", 
                "it will be better if we can choose the tools we used in the labs(not just matlab)"
            ]
        }, 
        {
            "Exam Diet": "December", 
            "Code": "INFR11017", 
            "Name": "Human-Computer Interaction", 
            "Level": "11", 
            "Acronym": "HCI", 
            "Average": "78.86", 
            "Area": "Human Computer", 
            "Summary": "The design and implementation of efficient, effective and user friendly computer systems, including software objects and physical internet-enabled things, depends upon understanding both the technology and its users. Only then can designers be confident that these information appliances will be properly matched to the skills, knowledge and needs of their users. The study of Human-Computer Interaction (HCI) seeks to combine perspectives and methods of enquiry drawn from disciplines such as Interaction Design, Psychology and Sociology with the tools, techniques and technologies of Computer Science to create an approach to design which is both relevant and practical.", 
            "Delivery": "S1", 
            "Credits": "10", 
            "Course Description": "* Background--the development and scope of HCI. Practical goals.\n\n* HCI relevant issues in human perception, memory and thinking processes.\n\n* Approaches to designing information appliances--software objects and physical things.\n\n* Design methodologies and notations--levels of interface design. Task analysis, grammars, state charts.\n\n* Techniques and technologies--dialogue styles, information presentation, protocols for human-to-machine and machine-to-machine interactions; mobile computing, distributed wireless computation, wireless sensors.\n\n* The design process--user involvement, iterative design, prototyping. \n\n* Evaluation--methodologies, formative and summative. Performance analysis.\n\n* Specific issues in HCI: the internet of things; novel interfaces.\n\n* A theme running through the course is the relevance of the social context on Interaction Design.\n\n\n\nRelevant QAA Computing Curriculum Sections:  Human-Computer Interaction (HCI), Information Systems, Systems Analysis and Design", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11017.htm", 
            "Coordinator": "Dorota Glowacka", 
            "Year": "4", 
            "Coursework/Exam": "30/70", 
            "Feedback": [
                "A very well-organised course for student who want to go into human-computer interaction or UX design.", 
                "do as much programming. But don't take it for granted. You should carefully try to apply what you learned in the lectures in theGreat course. Although it has the reputation of being an \"easier\" course this mostly stems on the fact that you do not have to", 
                "for their dissertation projects) at some point. There's a lot of different methodologies and principles introduced throughout theI'm surprised this course is not compulsory - I think everyone studying CS/AI/SE might have to create software/interfaces (e.g.", 
                "It is different from the usual Computer Science courses but it is useful for work.", 
                "Even if you don't want to do UI design, knowing HCI principles is really useful because in a work environment, you'll always needIt's awesome, really different from what you've done before.", 
                "Plan enough time for the coursework as it seems easy in the beginning, but requires much time to complete.", 
                "Strongly recommend this course if student is interested in design.", 
                "to spend on the various partsTake enough time to do the coursework, they are relatively easy but you want to plan carefully how much time you are going", 
                "(which is the most relevant in this course), at the end, you end up working yourself and not getting much feedback from yourThat find a good group partner because many programmers tend to be just interested in just programming and not the design", 
                "improve human experiences.This course is a good way to think beyond the technical skills and to realize that everything we do as professionals is aimed to", 
                "To take it and to enjoy it! Definitely take it if your honours project involves any kind of HCI or user interaction.", 
                "You'd be surprised how useful it is. Oh, and the lecturer is great!", 
                "found out about them when we received our marks, which was way too late. So it was something me and my coursework partner gotCoursework 1 had disappointingly uninformative feedback, and requirements for one of the tasks weren't clearly stated - only", 
                "group members are not contributing to the work.For the group work, it'll be good if we can have the option to do individual work. There could also be an avenue to express if other", 
                "More challenging assignments? Maybe actually implement the app instead of just designing it?", 
                "Not use learn to submit coursework.", 
                "Nothing, pretty much keep it as it is.", 
                "Please remove group work from the coursework assignments.", 
                "could have been more coverage on the analysis of data, specifically for the purposes of the courseworkThere doesn't seem to be a cohesive structure to the course, meaning that the topic of some lectures felt a bit random. There", 
                "correctly. More clear marking schemes (and/or coursework handouts) would be useful to avoid such future issues.There was a great issue with the marking of the first assignment which stemmed of the markers not understanding the criteria", 
                "depth on many of the topics covered and did not think that the amount of time spent on certain topics was useful, especially as it wasThis class was taught at a very basic level which, I feel, was not a level 11 standard. I would have liked to go into much greater", 
                "Those were amazing, really useful and well run!", 
                "Tutorials were good as you put into practise what you learned in the lectures", 
                "Tutorials were very practical, so you really got to use HCI methods. That was helpful!", 
                "Very useful and fun to attend. I've never looked forward to a tutorial before HCI.", 
                "While the tutorials helped clarify how to conduct certain experiments, it didn't seem they added much to the course"
            ]
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR10044", 
            "Name": "Honours Project (Informatics)", 
            "Level": "10", 
            "Acronym": "PROJ", 
            "Average": "67.39", 
            "Area": "Misc.", 
            "Summary": "This is a major project and is intended to allow students to demonstrate their ability to organise and carry out a substantial piece of work. The project involves both the application of skills learnt in the past and the acquisition of new skills. Typical areas of activity will be: gathering and understanding background information; solving conceptual problems; design; implementation; experimentation and evaluation; writing up.\n\n\n\nThe project is conducted individually by the student under the supervision of a member of teaching staff. The project specification is usually provided by a member of staff, but students are also free to specify their own project. All project specifications must be approved by the Project Coordinator.\n\n\n\nFor a single honours Informatics degree, the project will normally involve the construction of an artifact, whether software, hardware, a robotic device, some other artifact incorporating computation, or some combination of these. This requirement does not necessarily apply to combined honours degrees.", 
            "Delivery": "YR", 
            "Credits": "40", 
            "Course Description": "Project dependent", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr10044.htm", 
            "Coordinator": "Don Sannella", 
            "Year": "4", 
            "Coursework/Exam": "100/0", 
            "Feedback": [
                "evaluative projects are tough but very stimulating. You do however have very little idea what mark you are going to get until theDo a system building project, if you want to know exactly what you are getting into from the outset. Investigative and", 
                "Don't be afraid to say that you do not understand something.", 
                "It's compulsory, and also hell if you don't choose your topic carefully and invest 90% of your time on it, so good luck", 
                "they arise.Plan your work so that you can make continuous progress, and communicate any issues with your supervisor as soon as", 
                "over the summer and if you get stuck, unstick yourself.Start thinking about projects way too early; probably at the end of second year. Weekly meetings with supervisor. Start work", 
                "project.Try to get a solid plan made over summer so when you start semester 1 of 4th year you can hit the ground running with your", 
                "you to pick a supervisor/project that has a clear outline of sub-goals and goals.Unless you are very confident in the area your research concerns and you have a clear idea of what to do, I would advise", 
                "Be less pushy with your emails, Mr Sanella", 
                "steps need to be taken. It was very stressful when the subject of the project changed and I didn't know how to progress.Don't let the subject of the project to be changed. The supervisor should be clear about what he expects from the project and what", 
                "whereas other supervisors are giving their students a lot of feedback about their final reports and this is not very fair.Having set rules that supervisors must follow. For example, my supervisor is not going to read a full draft of my final report", 
                "their students at least once a week. Some professors are extremely busy and this may not be apparent to students in the projectLimit the number of projects that can be supervised by one person further, or make it mandatory that supervisors should meet", 
                "random that sounds interesting, simply because we have had little time to research it. Proposals go out in the middle of the semester,Make project selection happen in September. It's way too early to pick a project at the end of May and most people (like me) go for", 
                "very beginning of our work on Honours Project.The presentation in January should take place in first semester. Most of the advice they gave us could have been applied from the", 
                "criteria that is generic to all projects. In a project that does not involve building a system, the marking criteria does not really fit andUnlike a real research paper, this course has strange constraints that would not be enforced in research. Such as, being graded to", 
                "No student comments"
            ]
        }, 
        {
            "Exam Diet": "December", 
            "Code": "INFR11175", 
            "Name": "HPC Architectures", 
            "Level": "11", 
            "Acronym": "EPCC/09", 
            "Average": "Not Available", 
            "Area": "Architecture", 
            "Summary": "After taking this course students should have a good understanding (from the practioner's perspective) of the way High Performance Computing (HPC) systems are designed and how this affects both the way they are programmed and the performance of applications.", 
            "Delivery": "S1", 
            "Credits": "10", 
            "Course Description": "The course will cover the following topics:\n\n\n\n- Basic components of HPC systems: processors, memory, interconnect, storage.\n\n- Classification of architectures: SIMD/MIMD, shared vs distributed memory, clusters\n\n- System software: OSs, processes, threads, scheduling, batch systems.\n\n- Brief history of HPC systems, including Moore's Law. \n\n- CPU design: functional units, instructions sets, pipelining, branch prediction, ILP (superscalar, VLIW, SIMD instructions), multithreading.\n\n- Caches: operation and design features\n\n- Memory: operation and design features, including cache coherency and consistency\n\n- Multicore CPUs, including cache and memory hierarchy\n\n- GPGPUs: operation and design features\n\n- Interconnects: operation and design features\n\n- Current HPC architectures\n\n\n\nLectures will be followed by tutored practical sessions illustrating the key concepts.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11175.htm", 
            "Coordinator": "not allocated", 
            "Year": "5", 
            "Coursework/Exam": "0/100", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "December", 
            "Code": "INFR11176", 
            "Name": "Fundamentals of Data Management", 
            "Level": "11", 
            "Acronym": "EPCC/08", 
            "Average": "Not Available", 
            "Area": "Data Science", 
            "Summary": "Better and more effective approaches to managing digital research data are becoming increasingly important in computational science and beyond. The scientific data sets that underpin research papers can now occupy many gigabytes of storage, and are increasingly complex and challenging to work with. This course introduces students to the ideas, methods and techniques of modern, digital data management.", 
            "Delivery": "S1", 
            "Credits": "10", 
            "Course Description": "The course will cover:\n\n- Why managing research data better matters, and why it's hard\n\n- Data management planning: a required part of twenty first century research\n\n- Data formats: structuring data and keeping them useful\n\n- Relational and NoSQL databases\n\n- Metadata: describing data and keeping them useful\n\n- Publication and citation of research data\n\n- Persistence, preservation and provenance of research data\n\n- Licensing, copyright and access rights: some things researchers need to know\n\n- Important distributed data processing tools and techniques, such as: Spark and MapReduce", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11176.htm", 
            "Coordinator": "not allocated", 
            "Year": "5", 
            "Coursework/Exam": "0/100", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR09028", 
            "Name": "Foundations of Natural Language Processing", 
            "Level": "9", 
            "Acronym": "FNLP", 
            "Average": "81.52", 
            "Area": "Natural Language Processing", 
            "Summary": "This course covers some of the linguistic and algorithmic foundations of natural language processing. It builds on the material introduced in Informatics 2A and aims to equip students for more advanced NLP courses in years 3 or 4. The course is strongly empirical, using corpus data to illustrate both core linguistic concepts and algorithms, including language modeling, part of speech tagging, syntactic processing, the syntax-semantics interface, and aspects of semantic processing. Linguistic and algorithmic content will be interleaved throughout the course.", 
            "Delivery": "S2", 
            "Credits": "10", 
            "Course Description": "1. Creating annotated corpora:\n\n* markup, annotation\n\n* evaluation measures\n\n* corpora and the web \n\n\n\n2. Lexicon and lexical processing:\n\n* language modeling\n\n* Hidden Markov Models\n\n* part of speech tagging (e.g., for a language other than English) to illustrate HMMs\n\n* Viterbi algorithm\n\n* smoothing \n\n\n\n3. Syntax and syntactic processing:\n\n* revision of context-free grammars and chart parsing\n\n* syntactic concepts: constituency, subcategorization, bounded and unbounded dependencies, feature representations\n\n* lexicalized grammar formalisms (e.g., TAG, CCG, dependency grammar)\n\n* treebanks: lexicalized grammars and corpus annotation \n\n\n\n4. Semantics and semantic processing:\n\n* compositionality\n\n* argument structure\n\n* word sense disambigution\n\n* anaphora resolution\n\n* treebanks: argument structure, WSD (e.g., Propbank, Semcor)\n\n\n\nRelevant QAA Computing Curriculum Sections: Artificial Intelligence, Natural Language Computing", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr09028.htm", 
            "Coordinator": "Alex Lascarides", 
            "Year": "3", 
            "Coursework/Exam": "30/70", 
            "Feedback": [
                "learnt even if you might find some parts of this course repetitive. Start the second coursework early - it's not too challenging butEven if you have taken Inf 2A or you come from a Linguistics background, it never hurts to go over what you have already", 
                "behind!I mean, if you wanna do NLP you have to take this course, so you might as well. It's an easy course, but make sure not to fall", 
                "better if you also take IAMLIt\u2019s a very easy course but essential to your development as a Computer Scientist. You will understand everything even", 
                "help with coding very much, so unless you know Python very well already the assignments were difficult.Lectures are great, but don't teach you how to code the assignments at all. That's expected, but the lab leaders also did not", 
                "Take it. It\u2019s great.", 
                "with more time for interesting and practical extensions, so it's certainly not boring! Also, Alex Lascarides and Sharon GoldwaterThere is a significant overlap with Inf2A's natural language part but, truth to be told, the topics are dug into in more detail and", 
                "The workload is pretty fair in my opinion and the assignments are posted well in advance.This course is excellent, take it and enjoy it.", 
                "This course taught you foundations about NLP, very good introductory course.", 
                "wasn't already logged inBetter organised tutorials or stronger control of the students in the tutorial room, it was impossible to find a free computer that", 
                "more of an overstretch, maybe one more challenging question at the end of each part (doesn't have to be about implementingHad the coursework been not so easy, it would've been a better learning experience in my opinion. You know, just adding a bit", 
                "would be nice if it showed that I actually did the assignment.I did well on the first assignment, but it shows 0/100 on my transcript. I know the first coursework was just for feedback, but still, it", 
                "I think the course could be more technically challenging.", 
                "I think tutorials would really help for this course, as with lectures and self-directed studying in labs I found it easy to fall behind.", 
                "N/a", 
                "graders.The grading seemed a bit scattered and random. Would attempt to organize more objective standards between the different", 
                "tutorials in the future, maybe", 
                "Everyone has been very careful", 
                "I didn't find the labs particularly useful.", 
                "challenging parts of this course were for me theoretical which is why I feel tutorials would be more useful here.I feel that the good break-down of the labs and coursework into parts means that I didn't have programming questions, the", 
                "approach and for talking with a demonstrator), which are in many other courses THE opportunity for solidifying one's understandingI would definitely add tutorials. There's no way labs can substitute tutorials (labs = very little time (if any at all) for individual", 
                "The lab leaders were not very useful.", 
                "were so we could ask questions.The tutors didn't really make themselves known during the tutorials. It would have been helpful if they had made it clear who they"
            ]
        }, 
        {
            "Exam Diet": "December", 
            "Code": "INFR11088", 
            "Name": "Extreme Computing", 
            "Level": "11", 
            "Acronym": "EXC", 
            "Average": "63.93", 
            "Area": "Software Engineering", 
            "Summary": "Extreme Computing deals with the principles, systems and algorithms behind Web-scale problem solving. This touches upon the technologies and techniques used by companies such as Google, Facebook, Amazon, and Microsoft, using warehouse-scale computing and massive datasets. The course will be in three parts: the principles behind extreme computing (cloud computing, scaling, performance, privacy etc.), supporting infrastructure (distributed file systems, replication, Web services etc.) and algorithms (Map/Reduce, case studies from Natural Language Processing, rudimentary data processing, machine learning, data streaming).", 
            "Delivery": "S1", 
            "Credits": "10", 
            "Course Description": "The course is to be conceptually split into three main areas, with each area not necessarily accounting for an equal portion of the syllabus. The three areas and the material covered in each area are as follows:\n\n\n\n* Background: Motivation for new computing paradigms; introduction and differences between cloud and cluster computing; scaling, performance, privacy, economics, security, software as service.\n\n\n\n* Infrastructure: Distributed file systems; multi-tier systems, virtualisation; replication; fault tolerance; concurrent programming; web services.\n\n\n\n* Data structures and algorithms: decentralised data structures (e.g., peer-to-peer systems); programming frameworks (e.g., Hadoop Map/Reduce); workflow languages (e.g., FlumeJava); design and implementation of Map/Reduce programs; dealing with massive amounts of data; case studies from natural language processing, data processing, machine and deep learning; and computation over infinite streams.\n\n\n\nThe course will also deal with the legal, social, ethical, and professional issues involved in remotely storing data in cloud deployments and will also deal with potential solutions to these problems", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11088.htm", 
            "Coordinator": "Pramod Bhatotia", 
            "Year": "4", 
            "Coursework/Exam": "40/60", 
            "Feedback": [
                "Be prepared to learn the material by yourself", 
                "Be prepared to work a lot on the coursework, just to have a single piazza post destroy your solution.", 
                "sounded so bureaucratic.Blame computing support if any machines required for the coursework is not working properly. Coursework help on Piazza", 
                "Don't count on hadoop not being broken last minute, start coursework early", 
                "taught. As a result, students implemented their own version of efficiency which was not accepted by the markers.The coursework tasks were ambiguously defined. The marking criteria was mostly about efficiency, while efficiency is not", 
                "knowledge of distributed computing and the concepts behind it as well as a very keen interest in the subject, this is not a courseLet me start by saying I did not enjoy this course but I know plenty of people who did. But.... Unless you already have good", 
                "Make sure you are well versed with programming", 
                "don't take this to increase your average.Prepare yourself for interesting, but challenging work. Getting a high mark is much harder than in many other courses so", 
                "Quiz yourself regularly. There was a lot of content in this class that I intuitively felt like was irrelevant fluff but kept coming up.", 
                "efficient before finding out about aspects I hadn't considered)Start courseworks early and discuss how you solve things with friends (plenty of times I thought I had made something", 
                "Start the coursework early", 
                "Start the coursework early and ask questions!", 
                "computer to process it.Take this course, if you\u2019re interested in learning how to deal with absurdly large amounts of data and efficient ways for the", 
                "you might need to change the way you think about problem solving.The focus of the course is efficiency not just correctness. It will teach you how to create better solutions and better code, but", 
                "This course is fun but not suitable for students with little programming experience.", 
                "trying to find flaws and thinking how you would improve it.Try to understand very well every concept that is explained. On the coursework try to review your answers a couple of times", 
                "Worthwhile, useful and a bit challenging", 
                "intellectually challenging. Not much of a difference between not doing your homework and not doing it efficiently, which is a bit of aThe lecturer was great. Super smart and knew his subject. The course was definitely hard, not like a lot of boring work, but", 
                "This Hadoop skills and mapreduce skills are useful to me."
            ]
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR11166", 
            "Name": "Dissertation (High Performance Computing)", 
            "Level": "11", 
            "Acronym": "EPCC/07", 
            "Average": "Not Available", 
            "Area": "Misc.", 
            "Summary": "The dissertation comprises a report of c.15000 words describing an MSc project undertaken between May and mid-late August applying the practical HPC skills and knowledge developed from the taught courses on MSc in High Performance Computing. Students are also required to present their work to the department.\n\n\n\nThe dissertation must be based on original work carried out solely by the candidate and conform to the University's regulations. The project work may be undertaken within the University or in an external organisation with an appropriate focus. The subject area covered by the project can, with the approval of the Programme Director, be chosen by the candidate to align with their own research interests.", 
            "Delivery": "B5+", 
            "Credits": "60", 
            "Course Description": "To a great extent this will depend on the specifics of the project selected by the student.\n\n\n\nResearch-level work in HPC, to include:\n\n- Critically review previous work in the area.\n\n- Plan and implement a programme of work to investigate the topic.\n\n- Analyse the results in the context of previous work.\n\n- Present the work in the form of a written dissertation.\n\n- Summarise the work in an oral presentation to an academic audience.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11166.htm", 
            "Coordinator": "not allocated", 
            "Year": "5", 
            "Coursework/Exam": "92/8", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR11164", 
            "Name": "Dissertation (HPC with Data Science)", 
            "Level": "11", 
            "Acronym": "EPCC/06", 
            "Average": "Not Available", 
            "Area": "Misc.", 
            "Summary": "The dissertation comprises a report of c.15000 words describing an MSc project undertaken between May and mid-late August applying the practical skills and knowledge from the taught courses on MSc in HPC with Data Science. Students are also required to present their work to the department.\n\n\n\nThe dissertation must be based on original work carried out solely by the candidate and conform to the University's regulations. The project work may be undertaken within the University or in an external organisation with an appropriate focus. The subject area covered by the project can, with the approval of the Programme Director, be chosen by the candidate to align with their own research interests.", 
            "Delivery": "B5+", 
            "Credits": "60", 
            "Course Description": "Research-level work in Data Science, to include:\n\n- Critically review previous work in the area.\n\n- Plan and implement a programme of work to investigate the topic.\n\n- Analyse the results in the context of previous work.\n\n- Present the work in the form of a written dissertation.\n\n- Summarise the work in an oral presentation to an academic audience.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11164.htm", 
            "Coordinator": "not allocated", 
            "Year": "5", 
            "Coursework/Exam": "92/8", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR11185", 
            "Name": "Dissertation (DSTI - EPCC) (Distance Learning)", 
            "Level": "11", 
            "Acronym": "EPCC/05", 
            "Average": "Not Available", 
            "Area": "Misc.", 
            "Summary": "This is a major piece of independent work which forms the final stage of the MSc programme. It is intended to allow students to demonstrate their ability to organise and carry out a substantial investigation into a problem in data science, according to sound scientific principles. The project involves both the application of skills learnt in the past and the acquisition of new skills. The final submission will be expected to be at a level appropriate for an independent researcher and be a good indication of a student\u00bfs potential to go on to be a productive researcher in a relevant sub-discipline of Data Science.\n\n\n\nThis course is only available to students on the Data Science, technology and Innovation Online Learning MSc.", 
            "Delivery": "FLEX", 
            "Credits": "60", 
            "Course Description": "The project will be supervised by a member of academic staff from EPCC and possibly a co-supervisor appropriate to the context of the research (who may be within another part of the University or may be from an appropriate external organisation). \n\n\n\nIn this dissertation course you will be working independently on an extended piece of writing which is original and presents new research within it in the form of a sustained argument. The dissertation marks the final stage of your Masters degree and demonstrates that over the course of the programme you have gained the skills and knowledge required to engage in the formal and rigorous process of research. This process entails, but is not restricted to, identifying a suitable research topic, formulating research objectives, organising/analysing data, organising and reviewing relevant literature, devising an appropriate research methodology, reporting results, drawing conclusions and possibly even making relevant recommendations to the wider research community.\n\n\n\nThe design and conduct of the project will require a high level of commitment and application from the student. The dissertation demonstrates their ability to think scientifically and complete a research report that follows expected academic conventions of style, tone, structuring and referencing. Supervisory support will be supplemented by the detailed project handbook given to all students.\n\n\n\nThe types of activity involved in each project will vary but will include most of the following:\n\n- researching the literature and gathering background information\n\n- analysing requirements, comparing alternatives and specifying a solution\n\n- analysing and extending relevant theory in novel ways\n\n- designing and implementing the solution\n\n- experimenting with and evaluating the solution\n\n- discussing existing results and presenting new research\n\n- developing written and oral presentation skills\n\n\n\nCommunication with supervisors, including discussion progress and review of draft materials, will be determined by the student and supervisor and is most likely to be carried out by a combination of email and telephony, although all parties are encouraged to use a wiki which will be set up for each student\u00bfs project. The wiki allows greater version control of submitted work and clearer documentation of discussions/comments than do email or telephone.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11185.htm", 
            "Coordinator": "not allocated", 
            "Year": "5", 
            "Coursework/Exam": "92/8", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "December", 
            "Code": "INFR08023", 
            "Name": "Discrete Mathematics and Mathematical Reasoning", 
            "Level": "8", 
            "Acronym": "DMMR", 
            "Average": "54.24", 
            "Area": "Theory of Computation", 
            "Summary": "Discrete mathematics and formal mathematical reasoning.", 
            "Delivery": "S1", 
            "Credits": "20", 
            "Course Description": "1) Foundations (Chapters 1 & 2 of  [Rosen])\n\n2) Basic number systems, and rudimentary algorithms on numbers and matrices (Chapter 3,  [Rosen])\n\n3) Induction and  Recursion  (Chapter 4 [Rosen])\n\n4) Basic Counting  (Chapter 5 [Rosen])\n\n5) Graphs (and binary relations):   [Chapter 9, and parts of Chapter 8]]\n\n6) Trees:  (Chapter 10 [Rosen])\n\n7) Discrete probability [Chapter 6, plus some supplementary material]", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr08023.htm", 
            "Coordinator": "Kousha Etessami", 
            "Year": "2", 
            "Coursework/Exam": "15/85", 
            "Feedback": [
                "Buy the book on Amazon, don't wait to get copies from Blackwell\u2019s.", 
                "Do Proofs and Problem Solving in first year instead.", 
                "courseworks in the 2nd year might make you \"ignore\" DMMR for a while. At least do the reading on time! When the exam periodDo all the coursework: even though it's worth only 15% of the grade, it's worth more than you think. The deadlines for other", 
                "Do not take DMMR unless you are required to.", 
                "The lecturers are not very responsive on Piazza, so don't expect much help. Lots of self-study.", 
                "Do the reading.", 
                "Don't hesitate and take this course. Best course ever.", 
                "Don\u2019t take this course unless you have to (if you are a informatics student you kinda have to), poorly taught, too fast.", 
                "Expose yourself to proofs more.", 
                "Get comfortable with some of the content before starting the course.", 
                "Go to all tutorials and hand in the tutorial question every week. Learn how to partition time in exam!", 
                "textbook problems (even if it's just a few) every week will really help you solidify anything you are finding more difficult on theIf possible, definitely attend all lectures and tutorials. Start revision early, you will have plenty of assignments but doing", 
                "paying\u00a321k to STUDY HERE AND ACTUALLY LEARN STUFF you may as well put in the drain.If you are interested in maths, do several variable calculus or probability. This is the worst maths course in the world. If you are", 
                "opportunity to practice proofs.If you are studying pure maths it is probably better to take another informatics course like Inf1/2 but otherwise treat it as an", 
                "If you can take the Proofs and problem solving do it, because people take it were actually able to do DMMR.", 
                "If you can, start looking up tutorials on YouTube for the material as the lectures were useless to me.", 
                "If you took PPS and/or Probability, don't take this course (unless you want 20 easy credits).", 
                "recommend them to take PPS instead of DMMR. Most of the topics in PPS are covered again in DMMR but more precisely andIt is unfortunate for the Informatics students as it is a compulsory course for them. However, if they had a choice I would", 
                "Its content is quite similar to the content of 'Proofs and Problem Solving'", 
                "Only take this course if it\u2019s mandatory. Otherwise take PPS it\u2019s much better.", 
                "your second semester of first year. A lot of the topics covered in that course will be covered in this course, and there's no betterOnly take this course if you have taken Proofs and Problem Solving, a mathematics course taught by the School of Maths in", 
                "Tutorials are very helpful as well, but I think early reading is the key.Please please do the reading, I think it is crucial so that during class everything becomes clear and easier to understand.", 
                "Read the textbook as you go along and you'll be fine.", 
                "Start reading ahead from the beginning. And do a lot of practice as especially involving proves", 
                "Actual algorithms presented in some sections (as it should be in an Informatics course).", 
                "Applications of mathematics to computer science", 
                "Cryptography was an interesting topic. Tutorial sheets were helpful with learning. Good that it's open book this year.", 
                "Deeper understanding about things that I learned during A-Level", 
                "about more interesting data structures and some simple algorithms on how to traverse them (graphs and trees).Finding out about how particular topics in discrete maths can be directly applied to programming problems today, and learning", 
                "Graded homework questions", 
                "I took this course to learn new theory such as Graph theory and indeed the theory was interesting.", 
                "knowledge into our minds.Inspirational speeches of Colin and Kousha. They managed to engage entire class during the lectures and convey their", 
                "It helps your problem solving skills.", 
                "It's an enjoyable and interesting course, said NOBODY ever", 
                "It's a good idea to gear a maths course towards informatics students.", 
                "Learning about key maths concepts for informatics in my later years", 
                "Learning how to prove things mathematically.", 
                "Mathematical skillset and learning about their practical applications in computer science.", 
                "My tutor was great!", 
                "Nothing Much", 
                "Piazza discussion forum as feedback from tutorials and lectures was lacking quality, though not quantity.", 
                "Problem solving and challenging questions.", 
                "The course provided a lot of detailed information on topics I only knew briefly until that point.", 
                "The lectures", 
                "The slides are very well explained.", 
                "The syllabus itself is useful for computer scientists. Not the way it is taught though.", 
                "My tutor was also really good, much more passionate and much more approachable than the professors themselves.", 
                "The textbook is quite ok. I have found some YouTube videos so that was helpful?", 
                "The tutorials were great and really helped me in my understanding of the material.", 
                "Kyriakos Katsamaktsis is a great tutor.", 
                "The weekly assignments and the book which is very good.", 
                "The weekly assignments were sometimes quite challenging which ensured that I kept on top of the reading", 
                "solidify my understandingThe whole section of graphs was really interesting. It's something I've vaguely prodded before, but the course really helped", 
                "Absolutely terrible. Please, compare yourselves to the School of Maths.", 
                "Good tutor!", 
                "I like that we went through all the questions in the tutorial with the tutor.", 
                "Applications) would be more helpful as we could cover more questions as I found the tutorials helpful but hard to follow at times.I think in place of the one hour tutorials, if possible, longer workshops (similar to Year 1 Linear Algebra and Calculus and its", 
                "because of him.Ivan was amazing because a couple days before the exam he was really active on Piazza and we could still get some answers", 
                "for proofs which weren't explicitly mentioned in the lectures which was really helpful.Kyriakos Katsamaktsis did a great job in explaining things and answering questions. Furthermore, he pointed out useful strategies", 
                "Move the assignments deadline to the weekend perhaps so everyone during the week can talk about it during the tutorials.", 
                "accent is hard to follow, too.My tutor is a genius. But sometimes I have difficulty understanding him because his explanations are too complex for me, and his", 
                "My tutor was always angry during the workshops.", 
                "My tutor was great - he always had his own notes and explained things well.", 
                "My tutor was wonderful, no complaints.", 
                "took time to answer piazza questions during exam period.Some tutors were not active and didn't provide help outside class and were unreachable, whereas others (like Ivan Lau) even", 
                "The tutor I had was very helpful and knew how to explain everything very well.", 
                "people work together on questions.The tutor is good but the tutorial structure makes no sense for a maths course. They should be more similar to workshops where", 
                "maths. They shouldn't try, they just need to give up and let maths department take over.The tutor was useless. I can't blame him cause he too had to put up with DMMR. Like I said before informatics just can't teach", 
                "Tutor was good, format is not very suitable for maths.", 
                "Tutor was poorly organized. It not understand his reasoning when I asked him a question."
            ]
        }, 
        {
            "Exam Diet": "December", 
            "Code": "INFR11179", 
            "Name": "Design and Analysis of Parallel Algorithms", 
            "Level": "11", 
            "Acronym": "EPCC/04", 
            "Average": "Not Available", 
            "Area": "Parallel Programming", 
            "Summary": "This module introduces theoretical design principles and analysis techniques that enable the creation and evaluation of efficient, scalable and portable algorithms for parallel computers. Concrete examples will span a range of application areas and architectural models seeking wherever possible to exploit commonality through appropriate abstraction.", 
            "Delivery": "S1", 
            "Credits": "10", 
            "Course Description": "Syllabus:\n\nIntroduction: Conceptual frameworks for parallelism, message passing, shared address space, PRAM. Cost models for parallel algorithms. Cost efficiency and scalability. Inter-model emulation. Simple examples.\n\nProblem solving strategies: Embarrassing parallelism, divide & conquer, pipelining, step-by-step parallelisation. Amdahl's Law. Gustafson's law.\n\nUseful primitives: Collective communications, reduction, prefix.\n\nAlgorithms in selected problem areas, for example: Sorting (bitonic mergesort, hyperquicksort). Matrix oriented algorithms (multiplication, solving linear systems). Graph algorithms (spanning trees, single source & all-to-all shortest paths).", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11179.htm", 
            "Coordinator": "not allocated", 
            "Year": "5", 
            "Coursework/Exam": "0/100", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR11090", 
            "Name": "Decision Making in Robots and Autonomous Agents", 
            "Level": "11", 
            "Acronym": "DMR", 
            "Average": "66.90", 
            "Area": "Artificial Intelligence", 
            "Summary": "This course is intended as a specialized course on models and techniques for decision making in autonomous robots that must function in rich interactive settings involving interactions with a dynamic environment, and other agents (e.g., people). In the first part of the course, students will learn about formal models of decision making, and computational methods for automating these decisions within robots. In the second part of the course, we will consider issues arising in practical deployments of such autonomous robots, including problems of achieving safety, explainability and trust. Students will be exposed to current thinking on models and algorithmic methods for achieving these\n\nattributes in autonomous robots.\n\n\n\nThe content of this course has connections to other courses within our existing curriculum, such as Reinforcement Learning and Algorithmic Game Theory. A noteworthy difference is that RL and AGTA are primarily focussed on broad coverage of algorithmic methods, whereas this course will emphasize issues of modelling, with some focus on problems arising in practical robotics applications.", 
            "Delivery": "S2", 
            "Credits": "10", 
            "Course Description": "The course will cover the following major themes, although specific topics could vary from year to year.\n\n\n\nI. Motivation\n\n\n\na. Problems involving interaction: Strategically rich human-robot\n\ninteraction; Multi-robot interactions\n\n\n\nb. How have decisions been modelled in different disciplines: probability\n\ntheory, machine learning, psychology and cognitive science\n\n\n\n\n\nII. Mathematics of decisions\n\n\n\na. The utility maximization framework, Bayesian choice models\n\n\n\nb. Causality, Causal learning\n\n\n\nc. Bandit problems, Markov Decision Processes, and associated analysis\n\nmethods\n\n\n\nd. Dynamic programming principle, and associated approximation and\n\nlearning algorithms\n\n\n\ne. Incomplete information, Game theoretic models and solution concepts\n\n\n\n\n\nIII. Computer science of decisions\n\n\n\na. Representations for planning - tradeoffs in modelling hierarchy,\n\nuncertainty, etc.\n\n\n\nb. Safety and trust in autonomous systems\n\n\n\nc. Explainability in AI\n\n\n\nd. Bounded rationality and cognitive biases\n\n\n\n\n\nRelevant QAA Computing Curriculum Sections: Artificial Intelligence, Intelligent Information Systems Technologies.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11090.htm", 
            "Coordinator": "Ram Ramamoorthy", 
            "Year": "5", 
            "Coursework/Exam": "40/60", 
            "Feedback": [
                "Definitely take it, it is an opportunity to learn a background of how the DMR methods and main ideas.", 
                "10 credit course but they are useful in helping the understanding of the material being taught. The lecturer is amazing.Definitely taking this course because it is very useful and interesting. There are a bit too many homework for it being a", 
                "Take this class.", 
                "This is one of the best courses you can take. Studying AI would be incomplete without it.", 
                "three different homework which are very time intensive. I do think the homework were very useful but they were a lot especially whenI would either increase the number of credits this course is or reduce the number of homework. This is a 10 credit course with", 
                "No tutorials, workshops or labs for this course."
            ]
        }, 
        {
            "Exam Diet": "December", 
            "Code": "INFR10070", 
            "Name": "Database Systems", 
            "Level": "10", 
            "Acronym": "DBS", 
            "Average": "68.56", 
            "Area": "Data Science", 
            "Summary": "Databases are essential to maintaining the information base in almost all modern business enterprises and to electronic commerce. They are also becoming increasingly important as a fundamental tool in much scientific research. Some knowledge of databases is now essential in any of these areas. The study of databases draws on several disciplines within computer science: logic, algorithms, programming languages and operating systems.\n\n\n\nThis course is an introduction to the principles underlying the design and implementation of databases and database management systems. It will cover the theoretical and practical languages that have been developed for relational databases, their implementation and optimisation. It will also cover transaction processing and concurrency control, as well as tools and techniques for decision support and data analysis. In addition, some recent developments in databases, including semistructured data and the relationship between relational databases and XML documents, will be introduced.\n\n\n\nThis 20 credit course replaces INFR10055 Database Systems (10 credits).", 
            "Delivery": "S1", 
            "Credits": "20", 
            "Course Description": "- Overview of database management systems and the relational model\n\n - Database design: E-R diagrams, constraints, normal forms\n\n - Query languages: relational algebra and calculus\n\n - SQL: data definition, data manipulation, queries, views, constraints, triggers\n\n - Database access from applications: embedded and dynamic SQL\n\n - Storage and indexing: B-trees, hashing\n\n - Query evaluation and optimisation: join strategies, query plans\n\n - Scheduling and concurrency control: transaction management,\n\nserializability, locking\n\n - Data warehousing and decision support: OLAP, view materialisation and maintenance\n\n - Deductive databases: Datalog and recursive queries\n\n - Incomplete data: null values and certain answers\n\n - Semistructured data: XML documents, DTDs, query languages for XML", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr10070.htm", 
            "Coordinator": "Paolo Guagliardo", 
            "Year": "3", 
            "Coursework/Exam": "25/75", 
            "Feedback": [
                "Be good at logic", 
                "learning the theory behind databases.Do take it if you're interested in databases and want to learn SQL. You'll learn both so make sure you're comfortable with", 
                "INF2D -Agents and ReasoningGo for it, especially if you finally understood Computational Logic at the end of first semester first year and if you enjoyed", 
                "Guess you can take it for easy 20 creds. Compared to other courses the coursework is super light and causes no problem.", 
                "also approachable.The lecturer explained all concepts and detail and gave examples until most students felt comfortable with the concept. He is", 
                "Would recommend; workload is reasonable and at a good level.", 
                "Continuously study, ask for help as soon as you need it and don't wait, and start early on the homework.", 
                "Do the tutorials.", 
                "Take the course with Paolo if you can, he has pretty fun lectures and does a really good job of explaining the course concepts.", 
                "Thinking critically when using SQL and it is helpful to spend much time figuring out questions.", 
                "More challenging assignments.", 
                "More useful workshops?", 
                "There is too much content for the lecture time given. Almost every lecture over-ran and the content is not very engaging.No feedback on why marks lost on coursework.", 
                "None.", 
                "understand and utterly useless (or someone please tell us what it is used for!). Not so much SQL as I expected, much more theoryRemove a lot of theoretical parts (i.e. equivalence of RA and RC, really?) The theory is super super abstract, super hard to", 
                "Some handwritten feedback on the coursework - what could have been improved with queries rather than an automated score.", 
                "n/aThe lecture recordings could cover the board at all times.", 
                "especially when thinking about how it would be used in real life. It just seems like a lot of theoretical concepts that don't have much ofBesides the SQL stuff that is covered, it's tough to see what the point is behind a lot of the other material covered in the course", 
                "Maybe provide a roadmap as to how the various topics relate to, and build on, each other.", 
                "More practical knowledge. most of the material seems to be highly theoretical", 
                "understanding the difficult subject matter.More structured lectures instead of running over almost every lecture. Providing extra help for the assignments or just", 
                "beginning of each class to finish up what we had done the class before and summarize the context for what it was we were learningWe didn't always have time to finish topics in class, and I think we rushed sometimes. I wish we had taken more time at the", 
                "notes or real world applicationsEtienne did a good job of making sure everyone understood the basics, while also going into more detail on interesting side"
            ]
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR11159", 
            "Name": "Data Science, Technology and Innovation Dissertation (Distance Learning)", 
            "Level": "11", 
            "Acronym": "DISS-DSTI", 
            "Average": "Not Available", 
            "Area": "Misc.", 
            "Summary": "*This course is for students on the 'Data Science, Technology and Innovation' programme, choosing to do an Informatics based MSc project*.\n\n\n\nThis is a major piece of full-time independent work. It is intended to allow students to demonstrate their ability to organise and carry out a substantial investigation into a problem in Informatics, according to sound scientific and engineering principles. The project involves both the application of skills learnt in the past and the acquisition of new skills.\n\n\n\nThe types of activity involved in each project will vary but will include most of the following:\n\n\n\n* Researching the literature and gathering background information.\n\n* Analysing requirements, comparing alternatives and specifying a solution.\n\n* Analysing and extending relevant theory in novel ways.\n\n* Designing and implementing the solution.\n\n* Experimenting with and evaluating the solution.\n\n* Discussing existing results and presenting new research.\n\n* Developing written and oral presentation skills.\n\n\n\nThe project is conducted individually by the student under the supervision of a member of teaching staff. Students are formed into groups for the purpose of a Review Meeting.", 
            "Delivery": "FLEX", 
            "Credits": "60", 
            "Course Description": "Project Dependant.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11159.htm", 
            "Coordinator": "Bob Fisher", 
            "Year": "5", 
            "Coursework/Exam": "100/0", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR11007", 
            "Name": "Data Mining and Exploration", 
            "Level": "11", 
            "Acronym": "DME", 
            "Average": "76.71", 
            "Area": "Data Science", 
            "Summary": "The aim of this course is to discuss modern techniques for analyzing, interpreting, visualizing and exploiting the data that is captured in scientific and commercial environments. The course will develop the ideas taught in various machine learning courses and discuss the issues in applying them to real-world data sets, as well as teaching about other techniques and data-visualization methods. The course will also feature case-study presentations and each student will undertake a mini-project on a real-world dataset.", 
            "Delivery": "S2", 
            "Credits": "10", 
            "Course Description": "The course will consist of two parts, the first part being a series of lectures on what is outlined below. It is anticipated that there will also be one or two guest lectures from data mining practitioners.\n\n\n\nThe second part will consist of student presentations of papers relating to relevant topics. Students will also carry out a practical mini-project on a real-world dataset. For both paper presentations and mini-projects, lists of suggestions will be available, but students may also propose their own, subject to approval from the instructor.\n\n\n\n* Introduction, overview\n\n* Data preprocessing and cleaning, dealing with missing data\n\n* Data visualization, exploratory data analysis\n\n* Data mining techniques\n\n* Predictive modelling techniques (e.g. SVMs)\n\n* Performance evaluation (e.g. ROC curves)\n\n* Issues relating to large data sets\n\n* Application areas, e.g. text mining, collaborative filtering, retrieval-by-content, web mining, bioinformatics data, astronomy data \n\n\n\nRelevant QAA Computing Curriculum Sections:  Artificial Intelligence", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11007.htm", 
            "Coordinator": "Arno Onken", 
            "Year": "5", 
            "Coursework/Exam": "50/50", 
            "Feedback": [
                "It is a good course, with many activities to do", 
                "Make good", 
                "and something that anyone taking DME definitely should have covered before. Lectures 2-4 on PCA/dimensionality reduction wereI did (do) not really understand the logic behind the theoretical part of the course. Lectures 1 and 5 were, in my opinion, very easy", 
                "use in industryI do not why we need to see in depth PCA, I would rather see more applicable things and different techniques of D.M. that we can", 
                "Furthermore, the content is heavily focused on PCA. However, it's not clear why we need to spend most of the course content just onMaybe the course content could be revised, some part of the content overlaps with what already done in other classes.", 
                "any other datasets, getting some useful experience...The class content is not super useful in my opinion. However, the class project you can work on some Kaggle competitions or on", 
                "The labs were useful, especially the ones about dimensionality reduction as they were more challenging.", 
                "The labs where well designed and guided"
            ]
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR11171", 
            "Name": "Data Analytics with High Performance Computing", 
            "Level": "11", 
            "Acronym": "EPCC/03", 
            "Average": "Not Available", 
            "Area": "Data Science", 
            "Summary": "Data Analytics, Data Science and Big Data are  just a few of the many topical terms in business and academic research, all effectively referring to the manipulation, processing and analysis of data. Fundamentally, these are all concerned with the extraction from data of knowledge that can be used for competitive advantage or to provide scientific insight. In recent years, this area has undergone a revolution in which HPC has been a key driver, as evidenced by the vast clusters that power Google and Amazon as well as the supercomputing tiers analysing the outputs from the Large Hadron Collider. This course provides an overview of data science and the analytical techniques that form its basis as well as exploring how HPC provides the power that has driven their adoption.", 
            "Delivery": "S2", 
            "Credits": "10", 
            "Course Description": "The course will cover:\n\n- Key data analytical techniques such as, classification, optimisation, and unsupervised learning\n\n- Key parallel patterns, for implementing analytical techniques\n\n- Relevant HPC and data infrastructures\n\n- Case studies from academia and business", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11171.htm", 
            "Coordinator": "not allocated", 
            "Year": "5", 
            "Coursework/Exam": "0/100", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR10067", 
            "Name": "Computer Security", 
            "Level": "10", 
            "Acronym": "CS", 
            "Average": "70.87", 
            "Area": "Security", 
            "Summary": "Computer Security is concerned with the protection of computer systems and their data from threats which may compromise integrity, availability, or confidentiality; the focus is on threats of a malicious nature rather than accidental. This course aims to give a broad understanding of computer security. Topics include security risks, attacks, prevention and defence methods; techniques for writing secure programs; an overview of the foundations for cryptography, security protocols and access control models.\n\n\n\n This course replaces INFR10058 Computer Security (10 credits).", 
            "Delivery": "S2", 
            "Credits": "20", 
            "Course Description": "The  goal  of  this  course  is  to  introduce  students  to  fundamental  security concepts and offer them working knowledge of threats and counter-measures.\n\n\n\nThe topics covered in the course are:\n\n\n\n\u00bf Introduction:   fundamental  concepts,  access  control  models,  threat\n\nmodelling. \n\n\n\n\u00bf Network security: basic networking concepts, DoS, Transport layer security, Link layer security, DNS attacks, Firewalls, Intrusion detection.\n\n\n\n\u00bf Usable  security:  basic  human  factors,  warning  design,  phishing,  authentication, device authentication.\n\n\n\n\u00bf Cryptography:   symmetric  ciphers,  asymmetric  ciphers,  MACs  and\n\nhash functions, digital signatures.\n\n\n\n\u00bf Cryptographic protocols:  identification, authentication and key agreement, SSL/TLS, anonymity protocols, TOR.\n\n\n\n\u00bf OS security:  OS concepts, memory and file system, access control, file\n\npermissions, memory safety, stack-based buffer overflows.\n\n\n\n\u00bf Malware:  viruses, trojan horses, worms, rootkits.\n\n\n\n\u00bf Web security: WWW basics, client-side attacks, session hijacking XSS,\n\nCSRF, defences, server-side attacks, SQL injection, RFI, LFI.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr10067.htm", 
            "Coordinator": "Myrto Arapinis", 
            "Year": "3", 
            "Coursework/Exam": "25/75", 
            "Feedback": [
                "Attend all the lectures as they are very informative.", 
                "it.Be prepared to be intellectually challenged and do the readings before each lecture otherwise you will understand only half of", 
                "spend lots of time on the assignments.Computer security is something that every CS/AI/SE student should at least have some basic understanding of. Expect to", 
                "It is not an easy course. It is important to do the reading.", 
                "It will be challenging but rewarding, prepare to work hard and feel proud at the end.", 
                "It's a challenging course.", 
                "It's a fun and good course, but be prepared to study a lot of cryptography and discrete.", 
                "large chunk of this course as well. It is much lower level than what you are used to.It's a lot of work so be prepared. If you did not enjoy INF2C - Computer Systems in second year, you are unlikely to enjoy a", 
                "own online security and allow you to improve it. Such a worthwhile subject because of all the improvement it will bring into yourJust take it you will not regret it. It is not only an engaging and interesting course it will also improve the understanding of your", 
                "Prepare to work on your own and exchange ideas with fellow students.", 
                "Quite challenging but really fun, would recommend", 
                "the task. Take notes during crypto. Get / rent the textbook from the library! It seems to pair really well with the course.Start early with the coursework. Easy looking tasks can consume hours to figure out the last detail which is missing to solve", 
                "Try to finish all of the courseworks, no matter its score will be concerned.", 
                "Better preparation for the lectures, especially for the demos", 
                "Changing between topics was really confusing and messy for me -- at first I saw no clear structure in the course.", 
                "little hints. Fellow students and I were spending sometimes hours on figuring out the solution because we had no guidance.I understand that in this course we are required to work out the solutions on our own, but I feel that sometimes we were given too", 
                "sheet, as this year's was VERY modestly explained, to the point it was hard to understand what you're expected to do. I don't think theCoursework 3 was very badly written. I had to dig into last year's course webpage to find the previous version of the coursework", 
                "Coursework could have been worth more credit as, especially for the second one, they took a lot of work.", 
                "when it would be released and due. Also put all lecture recordings online. Not because I didn't attend lectures but because of clashesHave the coursework come out on the previously state time. It became very hard to manage all deadlines when you didn't know", 
                "assessment on it. I'm going to be retroactively studying this section a lot more in comparison to the rest of the course content.I felt like I could \"get by\" through the course without studying crypto as the lectures went by, given that there was less continual", 
                "It would be lovely to have labs in the same format as the assignments.", 
                "Less cryptography and more user security", 
                "More hints in the coursework document or more support in the form of open lab/question sessions with a tutor or similar things.", 
                "More labs to undergo some exploits, instead of the coursework asking you to know how to use tools you really haven't ever used.", 
                "More labs would have been helpful for the assignments.", 
                "things ourselves however I think some stronger starting points would have been helpful.The courseworks material either wasn't covered in lectures or was extremely vague. I understand the importance of researching", 
                "We had a slack group but no instructor to answer our questions. A piazza page would have been useful. I would have liked to haveThe first coursework was a bit more organised than the second one. There was nobody to ask for help with the second coursework.", 
                "my knowledge, especially as the material taught was not easy by any measure. I understand that attendance is important, howeverThe lectures were recorded but not posted online for the students to access. Any lecture missed then caused an immense gap in", 
                "There is too much content and crypto is very hard. Videos posted online would be helpful.", 
                "More information on the coursework sheets.", 
                "The tutorials were excellent though the room assignment was not ideal and changed without a convenient way of checking this.", 
                "They were very useful but it would have been nice with more labs.", 
                "Tutorials were very informative, the tutor was attentive and willing to help. The practical exercises were challenging and fun.", 
                "Tutors would sometimes not know how to explain the subject material very well, specifically some of the protocols."
            ]
        }, 
        {
            "Exam Diet": "December", 
            "Code": "INFR08022", 
            "Name": "Computer Programming Skills and Concepts", 
            "Level": "8", 
            "Acronym": "CP", 
            "Average": "45.05", 
            "Area": "Theory of Computation", 
            "Summary": "This course introduces basic skills required to develop computer programs using modern computer systems, assuming little or no previous experience. It also introduces fundamental concepts of program construction in a suitable high-level programming language.  The course has a significant practical component requiring students to construct small programs.", 
            "Delivery": "S1", 
            "Credits": "20", 
            "Course Description": "Introduction: \n\n  Elements of a modern computer system and computing environment. \n\n  UNIX, its file system and programming utilities.\n\n\n\nProgram design and development: \n\n  Specification, problem decomposition. Reasoning about and testing programs.\n\n\n\nProgramming in ANSI C: \n\n  Expressions, types, variables, assignment, conditionals, iteration, arrays, strings, files, functions.\n\n\n\nStructured programming:  \n\n  Functional and procedural abstraction, headers and libraries, name and scope.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr08022.htm", 
            "Coordinator": "Cristina Alexandru", 
            "Year": "1", 
            "Coursework/Exam": "20/80", 
            "Feedback": [
                "minutes to prepare for tutorials, it is not much of an effort needed but that way you and the students in your tutorialAttend all of the labs and tutorials, they are the best opportunity to learn programming. And invest at least 10-20", 
                "Be prepared to find helpful information from outside sources.", 
                "Buy the proposed text book and study from the first lecture from there.", 
                "to really understand the topic.Code every week at least for two hours outside the labs and definitely go to all the labs as practice is the only way", 
                "Dedicate time to practice, learn and revise alone", 
                "even if they're stupid. You need to fully understand what you're doing.Do the lab sheets! Even if some are very challenging. And don't be scared to ask a million questions in the labs", 
                "Do the labs and spend time on them until you understand them", 
                "get to the later more difficult parts of the course.Don't expect an easy ride if you are new to programming and do as much practice as you can especially when you", 
                "Don't fall behind on lab work.", 
                "It's just amazing.", 
                "Learn some C programming beforehand. Use online resources to help aid your understanding of course material.", 
                "Make sure to attend as many labs as possible", 
                "Make time to finish all the lab questions", 
                "the workload just before the exam, which makes it even more difficult and challenging.Start working from the very beginning, try to keep up with labs because otherwise you might be overwhelmed with", 
                "Study for the course in advance, because it assumes some previous knowledge and it gets quite difficult.", 
                "Take your time to put in this work and understand things before you move on.", 
                "googling and reading around an area/problem provide a much better understanding. But most importantly, the labs andThe lectures are useful for introducing you to tools you can use, but sometimes reading the textbook or especially", 
                "deciding what your goal is.Think before you touch the keyboard! It's easy to paint yourself into a corner if you try to code while you're still", 
                "Think twice if you are into programming.", 
                "This course requires you to put in time and effort in order to do well. It is a good basis for programming knowledge", 
                "make sure to do the labs and go over them, looking at what they got wring and improving on those things", 
                "Being able to understand computer programming at a much more fundamental level using C", 
                "Coding was explained at the level of the machine.", 
                "Good lecturers.", 
                "Guided lab sessions with help if I needed it.", 
                "I think the most important part about the course has been the push to think logically and improve one's problem solving skills.", 
                "Lab", 
                "Lab exercises are challenging and helpful.", 
                "Lab sessions where I could practice the skills taught in the lectures.", 
                "Lab sessions.", 
                "Labs (2 Counts)", 
                "Learning a new skill", 
                "Programming skills that are very useful in situations outside of the computer lab", 
                "Solving actual problems by using programming", 
                "The depth of the course is very good. It is very appropriate to the beginners like me.", 
                "The lab time offered and the ability to go to labs whenever you pleased to work on computing.", 
                "The labs", 
                "gives almost immediate feedback - it's very useful and a nice change from having to wait 3 weeks for anything to be marked inThe labs are very good, it is useful to get experience of programming with help from tutors. I also like the dashboard thing that", 
                "The logic way of thinking required to construct a programme.", 
                "The overall course structure: with two lectures, one lab and one tutorial the time is used very well to teach programming.", 
                "Appleton Tower is very helpful for practicing alone.The practical programming sessions and opportunities to practice through labs. Additionally unlimited access to the labs in", 
                "Also helped tremendously with coding in Python in another course and should be good footing for transitioning into any otherThe understanding of the underlying processes, which allowed a more in depth idea of how the code should be played out.", 
                "The weekly labs and the small groups in tutorials", 
                "Weekly labs, 24/7 access to computer labs", 
                "somehow forcing students to work individually on improving their skills", 
                "sense of the actual topics taught or labs but in the way the course is delivered as during lectures most of the topics are taught as ifAlthough the course has no prerequisites it feels as though you are expected to know how to code from the very start, not in the", 
                "labs/lab time or more tutors in the labs, often you could be waiting a while to get help when stuck on something which wastes a fairBe more aware of using unexplained jargon in lectures - I sometimes struggled to understand things. Also possibly either more", 
                "Better layout of lecture notes. They are very hard to read through and pick out the main points.", 
                "am behind every aspect, even though I have worked regularly. Compared to other courses, even though this one is very interesting, II feel like it began nicely, but since about week 5 the difficulty of the course has increased by an incredible amount. At this point I", 
                "additional matters.I find the tutorials too short as we rarely have had time to go through all the exercises and there is never any time to discuss", 
                "faster, but I know that there are many other people who found it challenging.I found the course easy even though I did not have much programming experience beforehand so for me it could have gone a bit", 
                "Introduce more coding during lectures- as it was in the end of the course.", 
                "understand and be able to use them. However, in the course for every command taught there were demanding and complicatedLower the pace of the course as compared to any language, after having learned the commands the student needs time to", 
                "structs and enums section. Finally, I felt that the course was a little slow, but I am aware that there is a large spread of abilities andMore clear points on exactly what level/topics are required. Also, sometimes the slides could be a little unclear, for example the", 
                "More explanation and examples of how pointers work as that part of the course was very challenging", 
                "More guidance for how to write code with more complicated concepts, like structs and pointers.", 
                "More labs, less lectures. Maybe 2 labs and a lecture instead of the other way around", 
                "More lectures during which a program is written, labs with guidance (a lecture in the lab)", 
                "More live coding in lectures would be helpful when looking at some less intuitive ideas later on in the course.", 
                "More practical learning", 
                "More practical work", 
                "Slightly slower pace and more accommodation made for complete beginners", 
                "The course becomes exponentially more difficult halfway through, which is jarring and makes the class too difficult.", 
                "result, I feel I have only grasped the basics.The hardest parts of the course were skimmed over whereas some of the basic concepts were elaborated in lots of detail. As a", 
                "onward. I wish we would look into more practical applications of the C language. It would be good if extra sessions for revision wereTutorial answers should be provided beforehand. The lecture slides can be very confusing especially from arrays, pointers and", 
                "My tutor Stefan Ivanov was particularly helpful.", 
                "Nice, small groups.", 
                "opportunity to learn from our tutorial sessions. I think this is a shame as being able to discuss confusing topics and to ask for helpThe tutorials could definitely be more helpful. I felt that my tutor wasn't always informed enough and that there wasn't really an", 
                "Tutorial is really helpful and the tutor explained the content and questions very well", 
                "Tutorial sheets were often either trivial or impossible with very little in between", 
                "Tutorials needed a little bit more structure", 
                "addition to the larger lab sessionsTutorials were not very helpful, it would be more helpful if they were conducted as smaller and more supervised lab sessions, in", 
                "Would prefer more lab time, instead of tutorials.Tutorials were quite difficult, and it was not always clear whether they should be done purely on paper/in our heads, or in the lab."
            ]
        }, 
        {
            "Exam Diet": "December", 
            "Code": "INFR09046", 
            "Name": "Computer Design", 
            "Level": "9", 
            "Acronym": "CD", 
            "Average": "77.63", 
            "Area": "Architecture", 
            "Summary": "This course provides an introduction to the fundamental concepts of the different ways computers can be analysed and designed. The course does not look at the differences between machines with different types of instruction set, nor does it cover design techniques for extracting maximum performance from computers - these aspects of computer hardware are covered in the Computer Architecture course. The issues and techniques covered in the Computer Design course are relevant to the design of all computers, regardless of their particular architecture.\n\n\n\nThe course is partitioned into three sections. The short first section revises the design of combinational and sequential logic. The second section demonstrates how to analyse and design systems of the complexity of a simple CPU or I/O controller. The third section of the course covers the design of a complete computer capable of executing assembly code programs and different control strategies for performing I/O.", 
            "Delivery": "S1", 
            "Credits": "20", 
            "Course Description": "Logic Design Revision Simple combinational logic design to state machines for sequential circuits.\n\n\n\nProcessor Design Data path and control. Fixed program controllers: example and design procedure. Instruction set processors: data path design, simple control, microprogrammed control. ALU design: addition, ripple carry and look ahead adders, negative numbers & subtraction; multiplication sequential multiplier, modification for 2's complement, combinational multiplier, division. Floating point numbers: addition, multiply and divide, implementations.\n\n\n\nComputer Systems Memory: Byte vs. word addressing, memory system design, error detection and correction. I/O Design: I/O controller design. Connection of I/O controllers to CPU, synchronization of I/O and CPU, polling, interrupts. Direct Memory Access, bus arbitration, DMA controller implementation. I/O processors. Synchronous and asynchronous buses. Simple performance enhancements to the basic architecture. RISC.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr09046.htm", 
            "Coordinator": "Nigel Topham", 
            "Year": "3", 
            "Coursework/Exam": "40/60", 
            "Feedback": [
                "Practice or preview Verilog on your own before taking this course if you have chance.", 
                "Ability to get feedback on the practicals in the lab.", 
                "The exercise sheets and provided answers were also very helpful, since they gave an idea of potential exam questions.Content was interesting and the coursework was a great way to enhance the overall understanding of the study material.", 
                "Interesting and engaging course.Excellent lecturer, very clear and explained things extremely well, both in lectures and tutorials.", 
                "More lab sessions with instructors present.", 
                "around, which seemed not sufficient for a class with lots of questions to ask.I would suggest to have more lab assistants during the lab session. For now, only one TA (sometimes with our lecturer) will be", 
                "our project and coursework.Both the lecturer and the tutor are helpful during the whole course. They provided us lots of valuable advice and suggestions on"
            ]
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR10074", 
            "Name": "Computer Communications and Networks", 
            "Level": "10", 
            "Acronym": "COMN", 
            "Average": "70.58", 
            "Area": "Networks", 
            "Summary": "This is a comprehensive first course in Computer Communications and Networks, focusing on fundamental concepts, principles and techniques. The course will introduce basic networking concepts, including: protocol, network architecture, reference models, layering, service, interface, multiplexing, switching and standards. An overview of digital communication from the perspective of computer networking will also be provided. Topics covered in this course include: Internet (TCP/IP) architecture and protocols, network applications, congestion/flow/error control, routing and internetworking, data link protocols, error detection and correction, channel allocation and multiple access protocols, communication media and selected topics in wireless and data centre networks. It will cover recent advances in network control and management architectures by introducing the concepts of software-defined networking (SDN) and network (function) virtualisation. Students taking this course will gain hands-on experience in network programming using the socket API; network traffic/protocol analysis; and on assessment of alternative networked systems and architectures.", 
            "Delivery": "S2", 
            "Credits": "20", 
            "Course Description": "* Introduction to Computer Networking and the Internet\n\n* Digital Communication Basics\n\n* The Application Layer with comprehensive treatment of networked applications (incl. multimedia data and applications)\n\n* The Transport Layer\n\n* The Network Layer\n\n* The Data Link Layer\n\n* The Medium Access Control Sub-Layer\n\n* The Physical Layer\n\n* Software-defined networking (SDN)\n\n* Network virtualisation and network function virtualisation (NFV)\n\n* Network management\n\n* Introduction to data centre and wireless networks\n\n* Overview and selected aspects of network security", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr10074.htm", 
            "Coordinator": "Mahesh Marina", 
            "Year": "3", 
            "Coursework/Exam": "40/60", 
            "Feedback": [
                "A lot of material to learn.It is an interesting course but it is full of theory.", 
                "The second coursework is a lot harder than the first and worth a lot more, so keep that in mind.", 
                "information and tips if you don'tVery interesting if keen to learn about networks. Not very demanding but do attend the lectures, you miss a lot of", 
                "Coursework has given me practical experience and let me deeply understand the subjects.", 
                "a framework.The coursework was demanding but enjoyable, as you got to build something from complete scratch, rather than being given", 
                "This course teaches very helpful material", 
                "Making the lectures a bit more interactive if possible, asking challenge questions that make you think.", 
                "the different protocols and maybe an overview \"bigger picture\" linking all of them together (in a mindmap or something), with recapsThe course sometimes felt like it was listing the protocols for each category; it was hard to know in what detail we needed to know", 
                "The most useful way to study is by reading the book.", 
                "understood without an explanation.The lecture notes are terrible for students who have not any experience with these topics. They consist phrases that cannot be", 
                "understood without an explanation.1. The lecture notes are terrible for students who have not any experience with these topics. They consist phrases that cannot be", 
                "It would have been good to have proper allocated lab-hours for courseworks.", 
                "Tutorials could be very helpful."
            ]
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR11067", 
            "Name": "Computer Animation & Visualisation", 
            "Level": "11", 
            "Acronym": "CAV", 
            "Average": "69.23", 
            "Area": "Graphics", 
            "Summary": "Two major topics of Visualisation and Computer Animation are covered in this course.\n\n\n\nVisualization is a cognitive process using the powerful information processing and analytical functions of the human vision system. It has always been a major factor in scientific progress and now, with the assistance of computer graphics, it extends our vision system from sub-atomic to interstellar dimensions and allows geometric representations and simulations of any multidimensional dataset. The fundamental objective is to acquire new knowledge rather than generating pictures. This part is very practical and techniques will be illustrated with applications in the scientific, engineering and medical domains. The increasingly important field of information visualisation and visual data-mining will also be covered.\n\n\n\nThe computer animation part will focus mainly on technological aspects for 3D computer animation for applications such as games and virtual environments. Techniques of character animation such as synthesizing their body movements, facial expressions and skin movements, and behaviors in crowded scenes, and how to compress such data will be first covered. Other topics which are essential to create natural scenes, such as physically based simulation for clothes, fluids and particles will also be covered.", 
            "Delivery": "S2", 
            "Credits": "10", 
            "Course Description": "* Visualisation: definition and motivation.\n\n* Data representation: geometric abstractions; volume and surface representations, interpolation.\n\n* Fundamental algorithms: colour mapping; contouring; glyphs; volume rendering.\n\n* Advanced algorithms: flow visualisation, vector visualisation, tensor visualisation.\n\n* Information visualisation: networks and trees; document visualisation.\n\n* Advanced topics of Computer Graphics: Visualisation of environments, data processing.\n\n* Character Animation techniques: keyframe animation, inverse kinematics, facial animation, PD-control, flocking, crowd simulation.\n\n* Motion capture technologies: optical, magnetic, mechanical, gyrosensors.\n\n* Optimization-based techniques: space-time constraints, Laplacian distance shape deformation.\n\n* Physically based animation techniques: fluid animation, hair animation, cloth simulation, deformable objects.\n\n\n\nRelevant QAA Computing Curriculum Sections: Relevant QAA Computing Curriculum Sections: Artificial Intelligence, Computer Based Systems, Data Structures and Algorithms, Developing Technologies, Graphics and Sound, Human-Computer Interaction (HCI).", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11067.htm", 
            "Coordinator": "Sebastian Starke", 
            "Year": "4", 
            "Coursework/Exam": "30/70", 
            "Feedback": [
                "Taking Computer Graphics as well helps with the understanding of basic concepts.", 
                "Coursework is too hard. Why we have to use software we never used before?", 
                "theoretical knowledge into a practical implementation. The labs were helpful, however, one lab instructor was not familiar with theIt would be good to add some content on the practical side of the course as I was missing some guidance on how to transfer the", 
                "It would be good to have a larger room so that all students could have space to work."
            ]
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR11111", 
            "Name": "Computer Algebra", 
            "Level": "11", 
            "Acronym": "CA", 
            "Average": "41.63", 
            "Area": "Theory of Computation", 
            "Summary": "Computer graphics uses various shapes such as ellipsoids for modelling. Consider the following problem: we are given an ellipsoid, a point from which to view it, and a plane on which the viewed image is to appear. The problem is to find the contour of the image as an equation (a numerical solution is not good enough for many applications).  The problem does not involve particularly difficult mathematics, but a solution by hand is very difficult. This is an example of a problem that can be solved fairly easily with a computer algebra system. These systems have a very wide range of applications and are useful both for routine work and research. From a computer science point of view they also give rise to interesting problems in implementation and the design of algorithms. The considerations here are not only theoretical but also pragmatic. The design of efficient algorithms in this area involves various novel techniques.\n\nThe course addresses the underlying principles and supporting mathematics by considering a few key areas and algorithms. There is also emphasis on developing an intuitive understanding of techniques. There is a two way process in which the desire to solve mathematical problems motivates the design of new algorithms and in turn the process of designing algorithms motivates supporting mathematical material. The course uses the open source computer algebra system Axiom to support coursework and as an example of algorithms in practice.", 
            "Delivery": "S2", 
            "Credits": "10", 
            "Course Description": "* Axiom: general design principles, user facilities, data structures, domains, etc.\n\n* Brief comparison of systems.\n\n* Algebraic structures: overview, basic concepts and algorithms.\n\n* Arbitrary precision operations on integers, rationals, reals, polynomials and rational expressions.\n\n* Importance of greatest common divisors and their efficient computation for integers and univariate polynomials (using modular methods).\n\n* Multivariate polynomial systems: solution of sets of equations over the complex numbers; construction and use of Groebner bases; relevant algebraic structures and results.\n\n* Reliable solution of systems of polynomial equations in one variable; Sturm sequences, continued fractions method.\n\n\n\nRelevant QAA Computing Curriculum Sections: Data Structures and Algorithms, Simulation and Modelling, Theoretical Computing", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11111.htm", 
            "Coordinator": "Kyriakos Kalorkoti", 
            "Year": "4", 
            "Coursework/Exam": "20/80", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR10065", 
            "Name": "Compiling Techniques", 
            "Level": "10", 
            "Acronym": "CT", 
            "Average": "78.95", 
            "Area": "Programming Languages", 
            "Summary": "This course describes the phases of a modern programming language\n\ncompiler with an emphasis on widely-used techniques. The course project will require students to implement a complete compiler from scratch for a simple programming language, targeting a real machine assembly such as MIPS. Students will also learn about implementing a compiler pass in a\n\nreal compiler framework. \n\n\n\nThis 20 credit course replaces Compiling Techniques (INFR10053) - 10 credit version.", 
            "Delivery": "S1", 
            "Credits": "20", 
            "Course Description": "* Introduction: structure of a compiler\n\n* Lexical analysis: tokens, regular expressions, Lex\n\n* Parsing: context-free grammars, predictive and LR parsing\n\n* Abstract syntax: semantic actions, abstract parse trees\n\n* Semantic analysis: symbol tables, bindings, type-checking\n\n* Stack frames: representation and abstraction\n\n* Intermediate code: representation trees, translation\n\n* Basic blocks and traces: canonical trees and conditional branches\n\n* Instruction selection: algorithms for selection, RISC and CISC\n\n* Liveness analysis: solution of dataflow equations\n\n* Register allocation: colouring by simplification, coalescing\n\n* Real assembly language: ARM or MIPS\n\n* Advanced Topics may include: automatic parallelisation, popular\n\nopen-source compilers: GCC, LLVM \n\n\n\n\n\nThis 20 credit course replaces Compiling Techniques (INFR10053) - 10 credits.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr10065.htm", 
            "Coordinator": "Christophe Dubach", 
            "Year": "3", 
            "Coursework/Exam": "100/0", 
            "Feedback": [
                "No student comments"
            ]
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR11032", 
            "Name": "Compiler Optimisation", 
            "Level": "11", 
            "Acronym": "COPT", 
            "Average": "67.42", 
            "Area": "Programming Languages", 
            "Summary": "This course introduces students to modern techniques in efficient implementation of programming languages. Modern processors and systems are designed based on the assumption that a compiler will be able to effectively exploit architectural resources. This course will examine in detail techniques to exploit instruction level parallelism, memory hierarchy and higher level parallelism. It will examine classic static analysis approaches to these problems and introduce newer feedback directed and dynamic approaches to optimisation. The course work will require students to implement selected optimisations in a research compiler and critically review literature in compiler optimisation.", 
            "Delivery": "S2", 
            "Credits": "10", 
            "Course Description": "*Compiler Construction, phase order, compilation as optimisation\n\n*Architecture costs: Parallelism and Latency in uni and multi-processors\n\n*Architecture \"independent\" optimisation, dataflow analysis, lattices and fixed points\n\n*Code generation, register allocation and scheduling in superscalar and vliw processors\n\n*High level analysis based on dependence analysis. Intra and inter procedural analysis, whole program analysis.\n\n*High level transformations including linear algebraic formalisation, unimodular transformations and space/time representation\n\n*Automated parallelisation. shared and distributed memory models. Linear algebraic approach to parallelisation.\n\n*Adaptive optimisation: Feedback directed optimisation, iterative compilation, program specialisation and dynamic compilation eg JIT, DBT\n\n*Compiler infrastructure case studies: SUIF, Machine SUIF, JIKES\n\n*Current themes:low power compilation, automatic compiler generation and machine learning.\n\n\n\nRelevant QAA Computing Curriculum Sections:  Compilers and Syntax Directed Tools", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11032.htm", 
            "Coordinator": "Hugh Leather", 
            "Year": "4", 
            "Coursework/Exam": "25/75", 
            "Feedback": [
                "Don't take other time-consuming courses, there will not be enough time.", 
                "Only take it if you are really interested in compilers.", 
                "Record lectures using LEARN.", 
                "task at hand was (at least in my opinion) not particularly relevant to the course.The coursework balance between learning outcome and time consumed was less than desirable. It took way too long, while the", 
                "take up so much time compared to others in both the reading material and practical.The requirement to read 50-100 pages before each set of lecture slides is a very inefficient means of learning. This course can", 
                "No tutorials, workshops or labs for this course."
            ]
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR11095", 
            "Name": "Case Studies in Design Informatics 2", 
            "Level": "11", 
            "Acronym": "CDI2", 
            "Average": "71.10", 
            "Area": "Misc.", 
            "Summary": "How would you help the next generation of Design Informatics students avoid the mistakes you made? Every time a decision is made to pursue one course of action, other routes are closed off. The goal is to lead a group of fresh thinkers to see why you made particular project design decisions, and to help them map out a different service or product that could be built from the same components.", 
            "Delivery": "S1", 
            "Credits": "20", 
            "Course Description": "This course extends students' engagement with real examples in the emerging field of Design\n\nInformatics. A key component of the course is the detailed evaluation and rationale behind several current research projects that highlight the limitations of the state of the art, or novel use of the latest theories and technologies. The primary learning outcome is the development of specialist reflective and leadership skills that can then be exploited in future industrial application or academic research into Design Informatics.\n\nThe senior students following this course as part of a two-year masters complete a compulsory summer placement, and then work with junior students (normally, who are enrolled in CSDI1).\n\nThe syllabus divides into three parts.\n\n- In Part 1, students complete a summer internship placement and are then debriefed on it in a series of tutorials in the beginning of the year\n\n- In Part 2, students support junior students (typically enrolled in CSDI1) in their group case studies. This support can take a variety of forms, from mentoring a group of younger students to providing training and support in specialist techniques.\n\n- In Part 3, concurrently to the support provided to junior students, the students are mentored on their final Masters thesis, similar to the Informatics Research Proposal (INFR11137). This mentoring is in addition to the work students do with their supervisors and will cover key skills required to complete a Masters thesis\n\nFor Parts 1 and 3, a mix of tutorials and lectures are used.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11095.htm", 
            "Coordinator": "Maria Wolters", 
            "Year": "5", 
            "Coursework/Exam": "100/0", 
            "Feedback": [
                "No student comments", 
                "Having a learn about new technologies.", 
                "many case studies and advanced tech part", 
                "more design principle involved", 
                "No student comments"
            ]
        }, 
        {
            "Exam Diet": "Not Available", 
            "Code": "INFR11094", 
            "Name": "Case Studies in Design Informatics 1", 
            "Level": "11", 
            "Acronym": "CDI1", 
            "Average": "70.03", 
            "Area": "Misc.", 
            "Summary": "How would you do it differently? Every time a design decision is made to pursue one course of action, other routes are closed off. The goal is to work in groups to see why specific project design decisions were taken, and to envisage a different service or product that could be built from the same components.", 
            "Delivery": "S1", 
            "Credits": "20", 
            "Course Description": "Students work in groups. In the second part, they are supported by senior students (normally,\n\nthose who are enrolled in CSDI2), with a member of academic staff as mentor.\n\n\n\nThis course introduces students to real examples in the emerging field of Design Informatics. A key\n\ncomponent of the course is the detailed evaluation of and rationale behind multiple current\n\nresearch projects that highlight the limitations of the state of the art, or novel use of the latest\n\ntheories and technologies.\n\n\n\nThe syllabus divides into two phases.\n\n- In the first part of the course, a core case study is introduced via lectures where a product or\n\nservice is an important deliverable.\n\n- In the second part of the course, each group works on its own, new case study, justifies its\n\nselection and scoping, produces a prototype and conducts a short experimental study based on\n\nthat prototype.\n\n\n\nWherever possible, case studies are taken from the ongoing or recent research at the University of\n\nEdinburgh. The case studies will be underpinned with lectures reviewing relevant theoretical\n\nbackground and classroom activities to ensure students develop required skills. Formative\n\nfeedback will be through class interaction and self- or peer assessed quizzes.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11094.htm", 
            "Coordinator": "Maria Wolters", 
            "Year": "5", 
            "Coursework/Exam": "100/0", 
            "Feedback": [
                "Be prepared to work with Chinese and people from arts.", 
                "Choose it, you will learn research methods to do the user research.", 
                "the answerEngage with the lectures and tutorials and ask questions! It is OK to not know something because everyone benefits from", 
                "a thinkful prof, speak slowly and clearly if you are a international student", 
                "keep yourself learning about the related references it would be helpful to know things you have not met before", 
                "Being introduced to new research databases & knowing where to look for valuable information.", 
                "studies. I was expecting to be writing essays taking apart some of the concepts discussed, but they were only really used in tutorialsFor a course with the words 'case studies' in the title I was surprised that we didn't spend more time critically analysing case", 
                "More activities during tutorials", 
                "companies, but it wasn't formatted that way. I feel as though some class topics were drawn out & could have been covered in oneMore case-study focused. I expected an actual case study to be discussed each week, looking at real world examples and", 
                "More specific case analyse and more small tasks before the final group project", 
                "should not be by random, and if that was the way, it would be better to make equal pairs of informatics and arts students, forThe content of the course was ok, but one thing that could improve the course at a great level is the formation of groups, it", 
                "clear what she was doing. Someone asked \"Are we supposed to know how to do what you're doing exactly on the screen?\" and sheI'm not sure if the TA knew the class' abilities. One tutorial that comes to mind was when everyone was confused and it was not", 
                "helpful nice"
            ]
        }, 
        {
            "Exam Diet": "VUG: December; April/May", 
            "Code": "INFR11144", 
            "Name": "Blockchains and Distributed Ledgers", 
            "Level": "11", 
            "Acronym": "BDL", 
            "Average": "72.49", 
            "Area": "Security", 
            "Summary": "Blockchain technology and distributed ledgers have been hailed as a turning point in scaling information technology services at a global level. Although the digital currency Bitcoin is the best-known Blockchain application today, the technology is set to play a much broader role in cyber security innovation. This course is an introduction to the design and analysis of blockchain systems and distributed ledgers and is meant to be taught in parallel to the Introduction to Modern Cryptography course of the same level (INFR11131) every other year (with the latter course as a prerequisite  or co-requisite).", 
            "Delivery": "S1", 
            "Credits": "10", 
            "Course Description": "The concept of blockchain will be covered in detail together with the supporting cryptographic technology. Questions that will be covered is why it works and what problems can it solve. \n\n\n\nSyllabus:\n\n\n\n1. Introduction to blockchain. What is a distributed ledger. Transactions. Digital Signatures.\n\n2. The consensus layer. Basic Properties. Proof of Work.\n\n3. Robust Transaction Ledgers. Properties and Objectives. Permissioned, permissionless ledgers. \n\n4. Privacy Issues. Anonymity, Pseudonymity, Unlinkability. Zero-Knowledge Proofs.\n\n5. Scalability Issues. Byzantine agreement protocols. \n\n6. Blockchain as a platform. Smart Contracts. \n\n7. Secure multiparty computation techniques and their application to blockchain protocols. \n\n8. Alternative techniques to proof of work for blockchain protocols, proof of stake/space. \n\n9. Game theoretic analysis of blockchain protocols. \n\n10. Name and object registries. Reputation systems. Policy issues related to blockchain.", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11144.htm", 
            "Coordinator": "Aggelos Kiayias", 
            "Year": "4", 
            "Coursework/Exam": "30/70", 
            "Feedback": [
                "with blockchains in general.Begin the coursework early to have time for exploration if you're not familiar with programming smart contracts or interacting", 
                "explaining the high-level concepts of blockchain technology from multiple standpoints. The course is not particularly demandingIf you are interested in blockchain technology/ distributed applications the course won't let you down. It is good course", 
                "Read the Princeton book on Blockchains and Distributed Lecturers alongside the lectures, at least for the first month.", 
                "Start the coursework early. Do solidity tutorials in advance of starting the coursework", 
                "how to code in solidity before the coursework came outHave clearer coursework instructions. Make the discussion forum earlier to help with coursework. Have labs so we could learn", 
                "Make the topics covered within the lecture more concise. Ensure substitute lecturers are better prepared.", 
                "Most of the issues of the course came from the fact that it was its first year.", 
                "One improvement of the course is to make the teaching more interactive with the audience similar to the way IMC is structured.", 
                "geth/web3 instead of remix. Nevertheless, the assignment is well structured and is a good starting point to think about security whenThe course was not that well organized and as a result not so coherent. The assignment could be improved further if we used", 
                "coursework had some issues (though it's understandable since it's the first year of the course) and the deadline had to be pushedOrganisation of the coursework. Many things were only clarified after questions from students, the environment for the", 
                "This course should contain more practise lab, we can understand more by doing.", 
                "coursework. Quality of lecture recording is awful, should use Media Hopper Replay instead.Topic of each lecture should be made clear. Too little guidance on project. Should introduce some lab sessions to help with", 
                "No tutorials, workshops or labs for this course."
            ]
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR11005", 
            "Name": "Bioinformatics 2", 
            "Level": "11", 
            "Acronym": "BIO2", 
            "Average": "73.58", 
            "Area": "Misc.", 
            "Summary": "Bioinformatics is at the interface between two of the most influential scientific fields. An appreciation of computational and biological sciences, in particular the terminology employed in both fields, is essential for those working at such an interface. In this course, we aim to cover the following:\n\n\n\n* The concepts of computer science that relate to problems in biological sciences.\n\n* Commercial and academic perspectives on bioinformatics.\n\n* The impact of bioinformatics on the methodologies used in biological science.\n\n* The influence biological science has on computing science.", 
            "Delivery": "S2", 
            "Credits": "10", 
            "Course Description": "The course will cover the following:\n\n\n\n* Next generation sequencing technologies\n\n* Machine learning algorithms for sequence analysis\n\n* Computational assembly of genomic sequences\n\n* Gene finding\n\n* Advanced functional genomics, expression analysis\n\n* Industry guest lecture\n\n* The future of bioinformatics: proteomics, neuroinformatics, e-science.\n\n\n\nRelevant QAA Computing Curriculum Sections:  Data Structures and Algorithms, Developing Technologies", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11005.htm", 
            "Coordinator": "Douglas Armstrong", 
            "Year": "5", 
            "Coursework/Exam": "30/70", 
            "Feedback": [
                "Make sure you took Bio1. Start the assignment early, it is a lot of work.", 
                "assisted in the assignment.Maybe do Bioinformatics 1. Familiarity with BLAST searching, Juypter notebooks, scripts, and some other techniques", 
                "Maybe have more practical sessions", 
                "The aims of the course were not too clear, each lecture was a bit self-contained.", 
                "No tutorials, workshops or labs for this course."
            ]
        }, 
        {
            "Exam Diet": "December", 
            "Code": "INFR11160", 
            "Name": "Bioinformatics 1", 
            "Level": "11", 
            "Acronym": "BIO1", 
            "Average": "Not Available", 
            "Area": "Misc.", 
            "Summary": "**This course replaces Bioinformatics 1 (INFR11016)**\n\n\n\nA primary requisite for relevant, and efficient, research in Bioinformatics is that scientists from both fields (biology and informatics) are involved, or consulted. Team work can only be successful if all parties have a basic ground knowledge of the respective other field and, most importantly, that they can communicate with each other. The aims of the course are to help you overcome both of these difficulties in your future careers. The course will cover topics that include core biology concepts that relate to bioinformatics, biological data and their source and structure as well as common tools for their analysis.\n\nThe course will also involve group-based practical work on using and developing bioinformatics solutions.", 
            "Delivery": "S1", 
            "Credits": "10", 
            "Course Description": "The course will cover the following:\n\n\n\nEssential Biology\n\n* DNA/proteins\n\n* Evolution\n\n* Chromosomes and Cells\n\n* Molecular structures\n\n\n\nBioinformatics\n\n* Biological sequence analysis and alignment\n\n* Bioinformatics resources and databases\n\n* Functional genomics\n\n* Proteomics and network analysis\n\n* a site visit to see bioinformatics research in action\n\n\n\n\n\nRelevant QAA Computing Curriculum Sections: Databases, Developing Technologies", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11160.htm", 
            "Coordinator": "Douglas Armstrong", 
            "Year": "4", 
            "Coursework/Exam": "30/70", 
            "Feedback": "Not Available"
        }, 
        {
            "Exam Diet": "April/May", 
            "Code": "INFR11033", 
            "Name": "Automatic Speech Recognition", 
            "Level": "11", 
            "Acronym": "ASR", 
            "Average": "62.77", 
            "Area": "Artificial Intelligence", 
            "Summary": "This course covers the theory and practice of automatic speech recognition (ASR), with a focus on the statistical approaches that comprise the state of the art. The course introduces the overall framework for speech recognition, including speech signal analysis, acoustic modelling using hidden Markov models, language modelling and recognition search. Advanced topics covered will include speaker adaptation, robust speech recognition and speaker identification. The practical side of the course will involve the development of a speech recognition system using a speech recognition software toolkit.", 
            "Delivery": "S2", 
            "Credits": "10", 
            "Course Description": "* Signal analysis for ASR\n\n* Statistical pattern recognition (Bayes decision theory, Learning algorithms, Evaluation methods, Gaussian mixture model, and EM algorithm)\n\n* Hidden Markov Models (HMM)\n\n* Context-dependent models\n\n* Discriminative training\n\n* Language models for LVCSR (large vocabulary continuous speech recognition)\n\n* Decoding\n\n* Robust ASR (Robust features Noise reduction, Microphone arrays)\n\n* Adaptation (Noise adaptation, Speaker adaptation/normalization, Language model adaptation)\n\n* Speaker recognition\n\n* History of speech recognition\n\n* Advanced topics (Using prosody for ASR, Audio-visual ASR, Indexing, Bayesian network)\n\n* speech recognition applications (including privacy implications)\n\n\n\nRelevant QAA Computing Curriculum Sections:   Artificial Intelligence, Natural Language Computing", 
            "Link": "http://www.drps.ed.ac.uk/18-19/dpt/cxinfr11033.htm", 
            "Coordinator": "Steve Renals", 
            "Year": "4", 
            "Coursework/Exam": "30/70", 
            "Feedback": [
                "If you haven't taken Speech Processing, review materials from that course if possible. It's highly relevant.", 
                "Take speech processing as a pre-requisite.", 
                "adding a bit of extra maths, and some neural network content that is repeated from other informatics courses this semester.I hasn't really improved my understanding of asr beyond the content covered in speech processing in semester 1, apart from", 
                "and advances quickly. Considering the aim of this course, last year's material was somehow out of date. Bit of irresponsible to do soI really dislike the idea of using last year's video capture to make up for the strike. Each year, the research in this field changes", 
                "I would prefer having two assignments for 50% and final exam for another 50%.", 
                "documentation are very confusing.Labs should have more tasks, instead of just typing (or copying/pasting) commands. There should also be more labs. Kaldi and its", 
                "couldn't really do much that was interesting with it. It didn't enhance my learning any more than the readings had.The coursework did not really improve my understanding of any aspect of ASR. Kaldi feels very much like a black box still, so I", 
                "Tutoring sessions with exercises would be helpful because we don't really know what to expect for the exam", 
                "find that very helpful for learning about ASR.The tutors for this course were really, really helpful. However, the labs were mostly just copying commands into Kaldi and I didn't", 
                "We should have covered the alignment step in Kaldi before the coursework as it was relevant for gender dependent models."
            ]
        }
    ]
}